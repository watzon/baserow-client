openapi: 3.0.3
info:
  title: Baserow API spec
  version: 1.32.5
  description: 'For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).


    For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).'
  contact:
    url: https://baserow.io/contact
  license:
    name: MIT
    url: https://gitlab.com/baserow/baserow/-/blob/master/LICENSE
paths:
  /api/admin/audit-log/:
    get:
      operationId: audit_log_list
      description: 'Lists all audit log entries for the given workspace id.


        This is a **enterprise** feature.'
      parameters:
      - in: query
        name: action_type
        schema:
          type: string
        description: Filter the audit log entries by action type.
      - in: query
        name: from_timestamp
        schema:
          type: string
        description: The ISO timestamp to filter the audit log entries from.
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many audit log entries should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute must be prefixed
          with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names
          are: `user, workspace, type, timestamp, ip_address`. For example `sorts=-user,-workspace` will
          sort the audit log entries first by descending user and then ascending workspace. A sortparameter
          with multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE
          error.'
      - in: query
        name: to_timestamp
        schema:
          type: string
        description: The ISO timestamp to filter the audit log entries to.
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter the audit log entries by user id.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Filter the audit log entries by workspace id. This filter works only for the admin
          audit log.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLog'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  /api/admin/audit-log/action-types/:
    get:
      operationId: audit_log_action_types
      description: 'List all distinct action types related to an audit log entry.


        This is a **enterprise** feature.'
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: If provided only action_types with name that match the query will be returned.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Return action types related to the workspace.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLogActionType'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  /api/admin/audit-log/export/:
    post:
      operationId: async_audit_log_export
      description: 'Creates a job to export the filtered audit log to a CSV file.


        This is a **enterprise** feature.'
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      tags:
      - Audit log
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SingleAuditLogExportJobRequest'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleAuditLogExportJobResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/admin/audit-log/users/:
    get:
      operationId: audit_log_users
      description: 'List all users that have performed an action in the audit log.


        This is a **enterprise** feature.'
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only users with email that match the query will be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many users should be returned per page.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Return users belonging to the given workspace_id.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLogUser'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  /api/admin/audit-log/workspaces/:
    get:
      operationId: audit_log_workspaces
      description: 'List all distinct workspace names related to an audit log entry.


        This is a **enterprise** feature.'
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only workspaces with name that match the query will be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many workspaces should be returned per page.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerAuditLogWorkspace'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  /api/admin/auth-provider/:
    get:
      operationId: list_auth_providers
      description: List all the available authentication providers.
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
          description: ''
    post:
      operationId: create_auth_provider
      description: Creates a new authentication provider. This can be used to enable authentication with
        a third party service like Google or Facebook.
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/admin/auth-provider/{auth_provider_id}/:
    get:
      operationId: get_auth_provider
      description: Get an authentication provider.
      parameters:
      - in: path
        name: auth_provider_id
        schema:
          type: integer
        description: The authentication provider id to fetch.
        required: true
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_auth_provider
      description: Updates a new authentication provider. This can be used to enable authentication with
        a third party service like Google or Facebook.
      parameters:
      - in: path
        name: auth_provider_id
        schema:
          type: integer
        description: The authentication provider id to update.
        required: true
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authentication_ProviderAuthProvider'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_auth_provider
      description: Delete an authentication provider.
      parameters:
      - in: path
        name: auth_provider_id
        schema:
          type: integer
        description: The authentication provider id to delete.
        required: true
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/admin/dashboard/:
    get:
      operationId: admin_dashboard
      description: Returns the new and active users for the last 24 hours, 7 days and 30 days. The `previous_`
        values are the values of the period before, so for example `previous_new_users_last_24_hours`
        are the new users that signed up from 48 to 24 hours ago. It can be used to calculate an increase
        or decrease in the amount of signups. A list of the new and active users for every day for the
        last 30 days is also included.
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminDashboard'
          description: ''
        '401':
          description: No response body
  /api/admin/users/:
    get:
      operationId: admin_list_users
      description: Returns all users with detailed information on each user, if the requesting user is
        staff.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only users with id or username or first_name that match the query will
          be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many users should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute must be prefixed
          with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names
          are: `id, is_active, name, username, date_joined, last_login`. For example `sorts=-id,-is_active`
          will sort the users first by descending id and then ascending is_active. A sortparameter with
          multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE
          error.'
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerUserAdminResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
    post:
      operationId: admin_create_user
      description: Creates and returns a new user if the requesting user is staff. This works even if
        new signups are disabled.
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAdminCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserAdminCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserAdminCreate'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - USER_ADMIN_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/admin/users/{user_id}/:
    patch:
      operationId: admin_edit_user
      description: Updates specified user attributes and returns the updated user if the requesting user
        is staff. You cannot update yourself to no longer be an admin or active.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        description: The id of the user to edit
        required: true
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserAdminUpdate'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAdminResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - USER_ADMIN_CANNOT_DEACTIVATE_SELF
                    - USER_ADMIN_UNKNOWN_USER
                    - USER_ADMIN_ALREADY_EXISTS
                    - ERROR_FEATURE_NOT_AVAILABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
    delete:
      operationId: admin_delete_user
      description: Deletes the specified user, if the requesting user has admin permissions. You cannot
        delete yourself.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        description: The id of the user to delete
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - USER_ADMIN_CANNOT_DELETE_SELF
                    - USER_ADMIN_UNKNOWN_USER
                    - ERROR_FEATURE_NOT_AVAILABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  /api/admin/users/impersonate/:
    post:
      operationId: admin_impersonate_user
      description: This endpoint allows staff to impersonate another user by requesting a JWT token and
        user object. The requesting user must have staff access in order to do this. It's not possible
        to impersonate a superuser or staff.
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaserowImpersonateAuthToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BaserowImpersonateAuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BaserowImpersonateAuthToken'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant) selected by the
                          user. Ex: en-GB.'
                  token:
                    type: string
                    deprecated: true
                    description: Deprecated. Use the `access_token` instead.
                  access_token:
                    type: string
                    description: '''access_token'' can be used to authorize for other endpoints that require
                      authorization. This token will be valid for 10 minutes.'
          description: ''
  /api/admin/workspaces/:
    get:
      operationId: admin_list_workspaces
      description: Returns all workspaces with detailed information on each workspace, if the requesting
        user is staff.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only workspaces with id or name that match the query will be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many workspaces should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute must be prefixed
          with `+` for a descending sort or a `-` for an ascending sort. The accepted attribute names
          are: `id, name, application_count, created_on, row_count, storage_usage`. For example `sorts=-id,-name`
          will sort the workspaces first by descending id and then ascending name. A sortparameter with
          multiple instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE
          error.'
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerWorkspacesAdminResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  /api/admin/workspaces/{workspace_id}/:
    delete:
      operationId: admin_delete_workspace
      description: Deletes the specified workspace and the applications inside that workspace, if the
        requesting user is staff.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id of the workspace to delete
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_FEATURE_NOT_AVAILABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
components:
  schemas:
    PaginationSerializerWorkspacesAdminResponse:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkspacesAdminResponse'
      required:
      - count
      - next
      - previous
      - results
    UserAdminResponse:
      type: object
      description: Serializes the safe user attributes to expose for a response back to the user.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminWorkspaces'
        last_login:
          type: string
          format: date-time
          nullable: true
        date_joined:
          type: string
          format: date-time
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Set this to false instead
            of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: 'Designates whether this user is an admin and has access to all workspaces and
            Baserow''s admin areas. '
      required:
      - id
      - name
      - username
      - workspaces
    Authentication_ProviderAuthProvider:
      oneOf:
      - $ref: '#/components/schemas/PasswordAuthProviderModelAuthProvider'
      - $ref: '#/components/schemas/SamlAuthProviderModelAuthProvider'
      - $ref: '#/components/schemas/GoogleAuthProviderModelAuthProvider'
      - $ref: '#/components/schemas/FacebookAuthProviderModelAuthProvider'
      - $ref: '#/components/schemas/GitHubAuthProviderModelAuthProvider'
      - $ref: '#/components/schemas/GitLabAuthProviderModelAuthProvider'
      - $ref: '#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider'
      discriminator:
        propertyName: type
        mapping:
          password: '#/components/schemas/PasswordAuthProviderModelAuthProvider'
          saml: '#/components/schemas/SamlAuthProviderModelAuthProvider'
          google: '#/components/schemas/GoogleAuthProviderModelAuthProvider'
          facebook: '#/components/schemas/FacebookAuthProviderModelAuthProvider'
          github: '#/components/schemas/GitHubAuthProviderModelAuthProvider'
          gitlab: '#/components/schemas/GitLabAuthProviderModelAuthProvider'
          openid_connect: '#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider'
    UserAdminCreate:
      type: object
      description: 'Serializes a request body for creating a new user. Do not use for returning user

        data as the password will be returned also.'
      properties:
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Set this to false instead
            of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: 'Designates whether this user is an admin and has access to all workspaces and
            Baserow''s admin areas. '
        password:
          type: string
      required:
      - name
      - password
      - username
    PaginationSerializerAuditLogWorkspace:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogWorkspace'
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerUserAdminResponse:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserAdminResponse'
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerAuditLogUser:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogUser'
      required:
      - count
      - next
      - previous
      - results
    PatchedUserAdminUpdate:
      type: object
      description: 'Serializes a request body for updating a given user. Do not use for returning user

        data as the password will be returned also.'
      properties:
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Set this to false instead
            of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: 'Designates whether this user is an admin and has access to all workspaces and
            Baserow''s admin areas. '
        password:
          type: string
    SingleAuditLogExportJobResponse:
      type: object
      description: 'When mixed in to a model serializer for an ExportJob this will add an url field

        with the actual usable url of the export job''s file (if it has one).'
      properties:
        url:
          type: string
          format: uri
          readOnly: true
          description: The URL to download the exported file.
        export_charset:
          allOf:
          - $ref: '#/components/schemas/ExportCharsetEnum'
          default: utf-8
          description: 'The character set to use when creating the export file.


            * `utf-8` - utf-8

            * `iso-8859-6` - iso-8859-6

            * `windows-1256` - windows-1256

            * `iso-8859-4` - iso-8859-4

            * `windows-1257` - windows-1257

            * `iso-8859-14` - iso-8859-14

            * `iso-8859-2` - iso-8859-2

            * `windows-1250` - windows-1250

            * `gbk` - gbk

            * `gb18030` - gb18030

            * `big5` - big5

            * `koi8-r` - koi8-r

            * `koi8-u` - koi8-u

            * `iso-8859-5` - iso-8859-5

            * `windows-1251` - windows-1251

            * `x-mac-cyrillic` - mac-cyrillic

            * `iso-8859-7` - iso-8859-7

            * `windows-1253` - windows-1253

            * `iso-8859-8` - iso-8859-8

            * `windows-1255` - windows-1255

            * `euc-jp` - euc-jp

            * `iso-2022-jp` - iso-2022-jp

            * `shift-jis` - shift-jis

            * `euc-kr` - euc-kr

            * `macintosh` - macintosh

            * `iso-8859-10` - iso-8859-10

            * `iso-8859-16` - iso-8859-16

            * `windows-874` - cp874

            * `windows-1254` - windows-1254

            * `windows-1258` - windows-1258

            * `iso-8859-1` - iso-8859-1

            * `windows-1252` - windows-1252

            * `iso-8859-3` - iso-8859-3'
        csv_column_separator:
          allOf:
          - $ref: '#/components/schemas/CsvColumnSeparatorEnum'
          default: ','
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n*\
            \ `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
        csv_first_row_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv file.
        filter_user_id:
          type: integer
          minimum: 0
          description: 'Optional: The user to filter the audit log by.'
        filter_workspace_id:
          type: integer
          minimum: 0
          description: 'Optional: The workspace to filter the audit log by.'
        filter_action_type:
          allOf:
          - $ref: '#/components/schemas/FilterActionTypeEnum'
          description: 'Optional: The action type to filter the audit log by.


            * `create_group` - create_group

            * `delete_group` - delete_group

            * `update_group` - update_group

            * `order_groups` - order_groups

            * `create_application` - create_application

            * `update_application` - update_application

            * `delete_application` - delete_application

            * `order_applications` - order_applications

            * `duplicate_application` - duplicate_application

            * `install_template` - install_template

            * `create_group_invitation` - create_group_invitation

            * `delete_group_invitation` - delete_group_invitation

            * `accept_group_invitation` - accept_group_invitation

            * `reject_group_invitation` - reject_group_invitation

            * `update_group_invitation_permissions` - update_group_invitation_permissions

            * `leave_group` - leave_group

            * `create_initial_workspace` - create_initial_workspace

            * `export_applications` - export_applications

            * `import_applications` - import_applications

            * `create_snapshot` - create_snapshot

            * `delete_snapshot` - delete_snapshot

            * `restore_snapshot` - restore_snapshot

            * `empty_trash` - empty_trash

            * `restore_from_trash` - restore_from_trash

            * `create_user` - create_user

            * `update_user` - update_user

            * `schedule_user_deletion` - schedule_user_deletion

            * `cancel_user_deletion` - cancel_user_deletion

            * `sign_in_user` - sign_in_user

            * `change_user_password` - change_user_password

            * `send_reset_user_password` - send_reset_user_password

            * `reset_user_password` - reset_user_password

            * `send_verify_email` - send_verify_email

            * `verify_email` - verify_email

            * `create_db_token` - create_db_token

            * `update_db_token_name` - update_db_token_name

            * `update_db_token_permissions` - update_db_token_permissions

            * `rotate_db_token_key` - rotate_db_token_key

            * `delete_db_token_key` - delete_db_token_key

            * `create_webhook` - create_webhook

            * `delete_webhook` - delete_webhook

            * `update_webhook` - update_webhook

            * `export_table` - export_table

            * `import_database_from_airtable` - import_database_from_airtable

            * `create_table` - create_table

            * `delete_table` - delete_table

            * `order_tables` - order_tables

            * `update_table` - update_table

            * `duplicate_table` - duplicate_table

            * `create_row` - create_row

            * `create_rows` - create_rows

            * `import_rows` - import_rows

            * `delete_row` - delete_row

            * `delete_rows` - delete_rows

            * `move_row` - move_row

            * `update_row` - update_row

            * `update_rows` - update_rows

            * `create_view` - create_view

            * `duplicate_view` - duplicate_view

            * `delete_view` - delete_view

            * `order_views` - order_views

            * `update_view` - update_view

            * `create_view_filter` - create_view_filter

            * `update_view_filter` - update_view_filter

            * `delete_view_filter` - delete_view_filter

            * `create_view_sort` - create_view_sort

            * `update_view_sort` - update_view_sort

            * `delete_view_sort` - delete_view_sort

            * `create_view_group` - create_view_group

            * `update_view_group` - update_view_group

            * `delete_view_group` - delete_view_group

            * `submit_form` - submit_form

            * `rotate_view_slug` - rotate_view_slug

            * `update_view_field_options` - update_view_field_options

            * `create_decoration` - create_decoration

            * `update_decoration` - update_decoration

            * `delete_decoration` - delete_decoration

            * `create_view_filter_group` - create_view_filter_group

            * `update_view_filter_group` - update_view_filter_group

            * `delete_view_filter_group` - delete_view_filter_group

            * `create_data_sync_table` - create_data_sync_table

            * `update_data_sync_table` - update_data_sync_table

            * `sync_data_sync_table` - sync_data_sync_table

            * `create_field` - create_field

            * `delete_field` - delete_field

            * `update_field` - update_field

            * `duplicate_field` - duplicate_field

            * `change_primary_field` - change_primary_field

            * `create_widget` - create_widget

            * `update_widget` - update_widget

            * `delete_widget` - delete_widget

            * `update_dashboard_data_source` - update_dashboard_data_source

            * `generate_formula_with_ai` - generate_formula_with_ai

            * `create_row_comment` - create_row_comment

            * `delete_row_comment` - delete_row_comment

            * `update_row_comment` - update_row_comment

            * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug

            * `create_team` - create_team

            * `update_team` - update_team

            * `delete_team` - delete_team

            * `create_team_subject` - create_team_subject

            * `delete_team_subject` - delete_team_subject

            * `batch_assign_role` - batch_assign_role

            * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval'
        filter_from_timestamp:
          type: string
          format: date-time
          description: 'Optional: The start date to filter the audit log by.'
        filter_to_timestamp:
          type: string
          format: date-time
          description: 'Optional: The end date to filter the audit log by.'
        exclude_columns:
          type: string
          description: 'Optional: A comma separated list of column names to exclude from the export. Available
            options are `user_email, user_id, workspace_name, workspace_id, type, description, timestamp,
            ip_address`.'
        created_on:
          type: string
          format: date-time
          readOnly: true
          description: The date and time when the export job was created.
        exported_file_name:
          type: string
          readOnly: true
          description: The name of the file that was created by the export job.
      required:
      - created_on
      - exported_file_name
      - url
    AuditLogActionType:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdEnum'
        value:
          type: string
          description: 'Given the *incoming* primitive data, return the value for this field

            that should be validated and transformed to a native value.'
          readOnly: true
      required:
      - id
      - value
    BaserowImpersonateAuthToken:
      type: object
      description: Serializer used for impersonation.
      properties:
        user:
          type: integer
      required:
      - user
    SingleAuditLogExportJobRequest:
      type: object
      description: 'When mixed in to a model serializer for an ExportJob this will add an url field

        with the actual usable url of the export job''s file (if it has one).'
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        export_charset:
          allOf:
          - $ref: '#/components/schemas/ExportCharsetEnum'
          default: utf-8
          description: 'The character set to use when creating the export file.


            * `utf-8` - utf-8

            * `iso-8859-6` - iso-8859-6

            * `windows-1256` - windows-1256

            * `iso-8859-4` - iso-8859-4

            * `windows-1257` - windows-1257

            * `iso-8859-14` - iso-8859-14

            * `iso-8859-2` - iso-8859-2

            * `windows-1250` - windows-1250

            * `gbk` - gbk

            * `gb18030` - gb18030

            * `big5` - big5

            * `koi8-r` - koi8-r

            * `koi8-u` - koi8-u

            * `iso-8859-5` - iso-8859-5

            * `windows-1251` - windows-1251

            * `x-mac-cyrillic` - mac-cyrillic

            * `iso-8859-7` - iso-8859-7

            * `windows-1253` - windows-1253

            * `iso-8859-8` - iso-8859-8

            * `windows-1255` - windows-1255

            * `euc-jp` - euc-jp

            * `iso-2022-jp` - iso-2022-jp

            * `shift-jis` - shift-jis

            * `euc-kr` - euc-kr

            * `macintosh` - macintosh

            * `iso-8859-10` - iso-8859-10

            * `iso-8859-16` - iso-8859-16

            * `windows-874` - cp874

            * `windows-1254` - windows-1254

            * `windows-1258` - windows-1258

            * `iso-8859-1` - iso-8859-1

            * `windows-1252` - windows-1252

            * `iso-8859-3` - iso-8859-3'
        csv_column_separator:
          allOf:
          - $ref: '#/components/schemas/CsvColumnSeparatorEnum'
          default: ','
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n*\
            \ `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
        csv_first_row_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv file.
        filter_user_id:
          type: integer
          minimum: 0
          description: 'Optional: The user to filter the audit log by.'
        filter_workspace_id:
          type: integer
          minimum: 0
          description: 'Optional: The workspace to filter the audit log by.'
        filter_action_type:
          allOf:
          - $ref: '#/components/schemas/FilterActionTypeEnum'
          description: 'Optional: The action type to filter the audit log by.


            * `create_group` - create_group

            * `delete_group` - delete_group

            * `update_group` - update_group

            * `order_groups` - order_groups

            * `create_application` - create_application

            * `update_application` - update_application

            * `delete_application` - delete_application

            * `order_applications` - order_applications

            * `duplicate_application` - duplicate_application

            * `install_template` - install_template

            * `create_group_invitation` - create_group_invitation

            * `delete_group_invitation` - delete_group_invitation

            * `accept_group_invitation` - accept_group_invitation

            * `reject_group_invitation` - reject_group_invitation

            * `update_group_invitation_permissions` - update_group_invitation_permissions

            * `leave_group` - leave_group

            * `create_initial_workspace` - create_initial_workspace

            * `export_applications` - export_applications

            * `import_applications` - import_applications

            * `create_snapshot` - create_snapshot

            * `delete_snapshot` - delete_snapshot

            * `restore_snapshot` - restore_snapshot

            * `empty_trash` - empty_trash

            * `restore_from_trash` - restore_from_trash

            * `create_user` - create_user

            * `update_user` - update_user

            * `schedule_user_deletion` - schedule_user_deletion

            * `cancel_user_deletion` - cancel_user_deletion

            * `sign_in_user` - sign_in_user

            * `change_user_password` - change_user_password

            * `send_reset_user_password` - send_reset_user_password

            * `reset_user_password` - reset_user_password

            * `send_verify_email` - send_verify_email

            * `verify_email` - verify_email

            * `create_db_token` - create_db_token

            * `update_db_token_name` - update_db_token_name

            * `update_db_token_permissions` - update_db_token_permissions

            * `rotate_db_token_key` - rotate_db_token_key

            * `delete_db_token_key` - delete_db_token_key

            * `create_webhook` - create_webhook

            * `delete_webhook` - delete_webhook

            * `update_webhook` - update_webhook

            * `export_table` - export_table

            * `import_database_from_airtable` - import_database_from_airtable

            * `create_table` - create_table

            * `delete_table` - delete_table

            * `order_tables` - order_tables

            * `update_table` - update_table

            * `duplicate_table` - duplicate_table

            * `create_row` - create_row

            * `create_rows` - create_rows

            * `import_rows` - import_rows

            * `delete_row` - delete_row

            * `delete_rows` - delete_rows

            * `move_row` - move_row

            * `update_row` - update_row

            * `update_rows` - update_rows

            * `create_view` - create_view

            * `duplicate_view` - duplicate_view

            * `delete_view` - delete_view

            * `order_views` - order_views

            * `update_view` - update_view

            * `create_view_filter` - create_view_filter

            * `update_view_filter` - update_view_filter

            * `delete_view_filter` - delete_view_filter

            * `create_view_sort` - create_view_sort

            * `update_view_sort` - update_view_sort

            * `delete_view_sort` - delete_view_sort

            * `create_view_group` - create_view_group

            * `update_view_group` - update_view_group

            * `delete_view_group` - delete_view_group

            * `submit_form` - submit_form

            * `rotate_view_slug` - rotate_view_slug

            * `update_view_field_options` - update_view_field_options

            * `create_decoration` - create_decoration

            * `update_decoration` - update_decoration

            * `delete_decoration` - delete_decoration

            * `create_view_filter_group` - create_view_filter_group

            * `update_view_filter_group` - update_view_filter_group

            * `delete_view_filter_group` - delete_view_filter_group

            * `create_data_sync_table` - create_data_sync_table

            * `update_data_sync_table` - update_data_sync_table

            * `sync_data_sync_table` - sync_data_sync_table

            * `create_field` - create_field

            * `delete_field` - delete_field

            * `update_field` - update_field

            * `duplicate_field` - duplicate_field

            * `change_primary_field` - change_primary_field

            * `create_widget` - create_widget

            * `update_widget` - update_widget

            * `delete_widget` - delete_widget

            * `update_dashboard_data_source` - update_dashboard_data_source

            * `generate_formula_with_ai` - generate_formula_with_ai

            * `create_row_comment` - create_row_comment

            * `delete_row_comment` - delete_row_comment

            * `update_row_comment` - update_row_comment

            * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug

            * `create_team` - create_team

            * `update_team` - update_team

            * `delete_team` - delete_team

            * `create_team_subject` - create_team_subject

            * `delete_team_subject` - delete_team_subject

            * `batch_assign_role` - batch_assign_role

            * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval'
        filter_from_timestamp:
          type: string
          format: date-time
          description: 'Optional: The start date to filter the audit log by.'
        filter_to_timestamp:
          type: string
          format: date-time
          description: 'Optional: The end date to filter the audit log by.'
        exclude_columns:
          type: string
          description: 'Optional: A comma separated list of column names to exclude from the export. Available
            options are `user_email, user_id, workspace_name, workspace_id, type, description, timestamp,
            ip_address`.'
      required:
      - url
    PaginationSerializerAuditLog:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
      required:
      - count
      - next
      - previous
      - results
    AdminDashboard:
      type: object
      properties:
        total_users:
          type: integer
        total_workspaces:
          type: integer
        total_applications:
          type: integer
        new_users_last_24_hours:
          type: integer
        new_users_last_7_days:
          type: integer
        new_users_last_30_days:
          type: integer
        previous_new_users_last_24_hours:
          type: integer
        previous_new_users_last_7_days:
          type: integer
        previous_new_users_last_30_days:
          type: integer
        active_users_last_24_hours:
          type: integer
        active_users_last_7_days:
          type: integer
        active_users_last_30_days:
          type: integer
        previous_active_users_last_24_hours:
          type: integer
        previous_active_users_last_7_days:
          type: integer
        previous_active_users_last_30_days:
          type: integer
        new_users_per_day:
          type: array
          items:
            $ref: '#/components/schemas/AdminDashboardPerDay'
        active_users_per_day:
          type: array
          items:
            $ref: '#/components/schemas/AdminDashboardPerDay'
      required:
      - active_users_last_24_hours
      - active_users_last_30_days
      - active_users_last_7_days
      - active_users_per_day
      - new_users_last_24_hours
      - new_users_last_30_days
      - new_users_last_7_days
      - new_users_per_day
      - previous_active_users_last_24_hours
      - previous_active_users_last_30_days
      - previous_active_users_last_7_days
      - previous_new_users_last_24_hours
      - previous_new_users_last_30_days
      - previous_new_users_last_7_days
      - total_applications
      - total_users
      - total_workspaces
    WorkspacesAdminResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
        users:
          type: array
          items:
            $ref: '#/components/schemas/WorkspaceAdminUsers'
        application_count:
          type: integer
        row_count:
          type: integer
          readOnly: true
        storage_usage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        seats_taken:
          type: integer
        free_users:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - application_count
      - created_on
      - free_users
      - id
      - name
      - row_count
      - seats_taken
      - users
    UserAdminWorkspaces:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
      required:
      - id
      - name
    PasswordAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain (if any) registered with this password provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
      required:
      - id
      - type
    GitHubAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    OpenIdConnectAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          format: uri
          description: Base URL of the authorization server
          maxLength: 200
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    SamlAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        metadata:
          type: string
          description: The SAML metadata XML provided by the IdP.
        is_verified:
          type: boolean
          readOnly: true
          description: Whether or not a user sign in correctly with this SAML provider.
        email_attr_key:
          type: string
          description: The key in the SAML response that contains the email address of the user.
        first_name_attr_key:
          type: string
          description: The key in the SAML response that contains the first name of the user.
        last_name_attr_key:
          type: string
          description: The key in the SAML response that contains the last name of the user. If this is
            not set, the first name attr will be used as full name.
      required:
      - domain
      - id
      - is_verified
      - metadata
      - type
    FacebookAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    GitLabAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          format: uri
          description: Base URL of the authorization server
          maxLength: 200
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    GoogleAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    AuditLogWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
      required:
      - id
      - value
    AuditLogUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
      required:
      - id
      - value
    ExportCharsetEnum:
      enum:
      - utf-8
      - iso-8859-6
      - windows-1256
      - iso-8859-4
      - windows-1257
      - iso-8859-14
      - iso-8859-2
      - windows-1250
      - gbk
      - gb18030
      - big5
      - koi8-r
      - koi8-u
      - iso-8859-5
      - windows-1251
      - x-mac-cyrillic
      - iso-8859-7
      - windows-1253
      - iso-8859-8
      - windows-1255
      - euc-jp
      - iso-2022-jp
      - shift-jis
      - euc-kr
      - macintosh
      - iso-8859-10
      - iso-8859-16
      - windows-874
      - windows-1254
      - windows-1258
      - iso-8859-1
      - windows-1252
      - iso-8859-3
      type: string
      description: '* `utf-8` - utf-8

        * `iso-8859-6` - iso-8859-6

        * `windows-1256` - windows-1256

        * `iso-8859-4` - iso-8859-4

        * `windows-1257` - windows-1257

        * `iso-8859-14` - iso-8859-14

        * `iso-8859-2` - iso-8859-2

        * `windows-1250` - windows-1250

        * `gbk` - gbk

        * `gb18030` - gb18030

        * `big5` - big5

        * `koi8-r` - koi8-r

        * `koi8-u` - koi8-u

        * `iso-8859-5` - iso-8859-5

        * `windows-1251` - windows-1251

        * `x-mac-cyrillic` - mac-cyrillic

        * `iso-8859-7` - iso-8859-7

        * `windows-1253` - windows-1253

        * `iso-8859-8` - iso-8859-8

        * `windows-1255` - windows-1255

        * `euc-jp` - euc-jp

        * `iso-2022-jp` - iso-2022-jp

        * `shift-jis` - shift-jis

        * `euc-kr` - euc-kr

        * `macintosh` - macintosh

        * `iso-8859-10` - iso-8859-10

        * `iso-8859-16` - iso-8859-16

        * `windows-874` - cp874

        * `windows-1254` - windows-1254

        * `windows-1258` - windows-1258

        * `iso-8859-1` - iso-8859-1

        * `windows-1252` - windows-1252

        * `iso-8859-3` - iso-8859-3'
    FilterActionTypeEnum:
      enum:
      - create_group
      - delete_group
      - update_group
      - order_groups
      - create_application
      - update_application
      - delete_application
      - order_applications
      - duplicate_application
      - install_template
      - create_group_invitation
      - delete_group_invitation
      - accept_group_invitation
      - reject_group_invitation
      - update_group_invitation_permissions
      - leave_group
      - create_initial_workspace
      - export_applications
      - import_applications
      - create_snapshot
      - delete_snapshot
      - restore_snapshot
      - empty_trash
      - restore_from_trash
      - create_user
      - update_user
      - schedule_user_deletion
      - cancel_user_deletion
      - sign_in_user
      - change_user_password
      - send_reset_user_password
      - reset_user_password
      - send_verify_email
      - verify_email
      - create_db_token
      - update_db_token_name
      - update_db_token_permissions
      - rotate_db_token_key
      - delete_db_token_key
      - create_webhook
      - delete_webhook
      - update_webhook
      - export_table
      - import_database_from_airtable
      - create_table
      - delete_table
      - order_tables
      - update_table
      - duplicate_table
      - create_row
      - create_rows
      - import_rows
      - delete_row
      - delete_rows
      - move_row
      - update_row
      - update_rows
      - create_view
      - duplicate_view
      - delete_view
      - order_views
      - update_view
      - create_view_filter
      - update_view_filter
      - delete_view_filter
      - create_view_sort
      - update_view_sort
      - delete_view_sort
      - create_view_group
      - update_view_group
      - delete_view_group
      - submit_form
      - rotate_view_slug
      - update_view_field_options
      - create_decoration
      - update_decoration
      - delete_decoration
      - create_view_filter_group
      - update_view_filter_group
      - delete_view_filter_group
      - create_data_sync_table
      - update_data_sync_table
      - sync_data_sync_table
      - create_field
      - delete_field
      - update_field
      - duplicate_field
      - change_primary_field
      - create_widget
      - update_widget
      - delete_widget
      - update_dashboard_data_source
      - generate_formula_with_ai
      - create_row_comment
      - delete_row_comment
      - update_row_comment
      - rotate_calendar_ical_view_slug
      - create_team
      - update_team
      - delete_team
      - create_team_subject
      - delete_team_subject
      - batch_assign_role
      - update_periodic_data_sync_interval
      type: string
      description: '* `create_group` - create_group

        * `delete_group` - delete_group

        * `update_group` - update_group

        * `order_groups` - order_groups

        * `create_application` - create_application

        * `update_application` - update_application

        * `delete_application` - delete_application

        * `order_applications` - order_applications

        * `duplicate_application` - duplicate_application

        * `install_template` - install_template

        * `create_group_invitation` - create_group_invitation

        * `delete_group_invitation` - delete_group_invitation

        * `accept_group_invitation` - accept_group_invitation

        * `reject_group_invitation` - reject_group_invitation

        * `update_group_invitation_permissions` - update_group_invitation_permissions

        * `leave_group` - leave_group

        * `create_initial_workspace` - create_initial_workspace

        * `export_applications` - export_applications

        * `import_applications` - import_applications

        * `create_snapshot` - create_snapshot

        * `delete_snapshot` - delete_snapshot

        * `restore_snapshot` - restore_snapshot

        * `empty_trash` - empty_trash

        * `restore_from_trash` - restore_from_trash

        * `create_user` - create_user

        * `update_user` - update_user

        * `schedule_user_deletion` - schedule_user_deletion

        * `cancel_user_deletion` - cancel_user_deletion

        * `sign_in_user` - sign_in_user

        * `change_user_password` - change_user_password

        * `send_reset_user_password` - send_reset_user_password

        * `reset_user_password` - reset_user_password

        * `send_verify_email` - send_verify_email

        * `verify_email` - verify_email

        * `create_db_token` - create_db_token

        * `update_db_token_name` - update_db_token_name

        * `update_db_token_permissions` - update_db_token_permissions

        * `rotate_db_token_key` - rotate_db_token_key

        * `delete_db_token_key` - delete_db_token_key

        * `create_webhook` - create_webhook

        * `delete_webhook` - delete_webhook

        * `update_webhook` - update_webhook

        * `export_table` - export_table

        * `import_database_from_airtable` - import_database_from_airtable

        * `create_table` - create_table

        * `delete_table` - delete_table

        * `order_tables` - order_tables

        * `update_table` - update_table

        * `duplicate_table` - duplicate_table

        * `create_row` - create_row

        * `create_rows` - create_rows

        * `import_rows` - import_rows

        * `delete_row` - delete_row

        * `delete_rows` - delete_rows

        * `move_row` - move_row

        * `update_row` - update_row

        * `update_rows` - update_rows

        * `create_view` - create_view

        * `duplicate_view` - duplicate_view

        * `delete_view` - delete_view

        * `order_views` - order_views

        * `update_view` - update_view

        * `create_view_filter` - create_view_filter

        * `update_view_filter` - update_view_filter

        * `delete_view_filter` - delete_view_filter

        * `create_view_sort` - create_view_sort

        * `update_view_sort` - update_view_sort

        * `delete_view_sort` - delete_view_sort

        * `create_view_group` - create_view_group

        * `update_view_group` - update_view_group

        * `delete_view_group` - delete_view_group

        * `submit_form` - submit_form

        * `rotate_view_slug` - rotate_view_slug

        * `update_view_field_options` - update_view_field_options

        * `create_decoration` - create_decoration

        * `update_decoration` - update_decoration

        * `delete_decoration` - delete_decoration

        * `create_view_filter_group` - create_view_filter_group

        * `update_view_filter_group` - update_view_filter_group

        * `delete_view_filter_group` - delete_view_filter_group

        * `create_data_sync_table` - create_data_sync_table

        * `update_data_sync_table` - update_data_sync_table

        * `sync_data_sync_table` - sync_data_sync_table

        * `create_field` - create_field

        * `delete_field` - delete_field

        * `update_field` - update_field

        * `duplicate_field` - duplicate_field

        * `change_primary_field` - change_primary_field

        * `create_widget` - create_widget

        * `update_widget` - update_widget

        * `delete_widget` - delete_widget

        * `update_dashboard_data_source` - update_dashboard_data_source

        * `generate_formula_with_ai` - generate_formula_with_ai

        * `create_row_comment` - create_row_comment

        * `delete_row_comment` - delete_row_comment

        * `update_row_comment` - update_row_comment

        * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug

        * `create_team` - create_team

        * `update_team` - update_team

        * `delete_team` - delete_team

        * `create_team_subject` - create_team_subject

        * `delete_team_subject` - delete_team_subject

        * `batch_assign_role` - batch_assign_role

        * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval'
    CsvColumnSeparatorEnum:
      enum:
      - ','
      - ;
      - '|'
      - tab
      - record_separator
      - unit_separator
      type: string
      description: "* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator`\
        \ - \x1F"
    IdEnum:
      enum:
      - create_group
      - delete_group
      - update_group
      - order_groups
      - create_application
      - update_application
      - delete_application
      - order_applications
      - duplicate_application
      - install_template
      - create_group_invitation
      - delete_group_invitation
      - accept_group_invitation
      - reject_group_invitation
      - update_group_invitation_permissions
      - leave_group
      - create_initial_workspace
      - export_applications
      - import_applications
      - create_snapshot
      - delete_snapshot
      - restore_snapshot
      - empty_trash
      - restore_from_trash
      - create_user
      - update_user
      - schedule_user_deletion
      - cancel_user_deletion
      - sign_in_user
      - change_user_password
      - send_reset_user_password
      - reset_user_password
      - send_verify_email
      - verify_email
      - create_db_token
      - update_db_token_name
      - update_db_token_permissions
      - rotate_db_token_key
      - delete_db_token_key
      - create_webhook
      - delete_webhook
      - update_webhook
      - export_table
      - import_database_from_airtable
      - create_table
      - delete_table
      - order_tables
      - update_table
      - duplicate_table
      - create_row
      - create_rows
      - import_rows
      - delete_row
      - delete_rows
      - move_row
      - update_row
      - update_rows
      - create_view
      - duplicate_view
      - delete_view
      - order_views
      - update_view
      - create_view_filter
      - update_view_filter
      - delete_view_filter
      - create_view_sort
      - update_view_sort
      - delete_view_sort
      - create_view_group
      - update_view_group
      - delete_view_group
      - submit_form
      - rotate_view_slug
      - update_view_field_options
      - create_decoration
      - update_decoration
      - delete_decoration
      - create_view_filter_group
      - update_view_filter_group
      - delete_view_filter_group
      - create_data_sync_table
      - update_data_sync_table
      - sync_data_sync_table
      - create_field
      - delete_field
      - update_field
      - duplicate_field
      - change_primary_field
      - create_widget
      - update_widget
      - delete_widget
      - update_dashboard_data_source
      - generate_formula_with_ai
      - create_row_comment
      - delete_row_comment
      - update_row_comment
      - rotate_calendar_ical_view_slug
      - create_team
      - update_team
      - delete_team
      - create_team_subject
      - delete_team_subject
      - batch_assign_role
      - update_periodic_data_sync_interval
      type: string
      description: '* `create_group` - create_group

        * `delete_group` - delete_group

        * `update_group` - update_group

        * `order_groups` - order_groups

        * `create_application` - create_application

        * `update_application` - update_application

        * `delete_application` - delete_application

        * `order_applications` - order_applications

        * `duplicate_application` - duplicate_application

        * `install_template` - install_template

        * `create_group_invitation` - create_group_invitation

        * `delete_group_invitation` - delete_group_invitation

        * `accept_group_invitation` - accept_group_invitation

        * `reject_group_invitation` - reject_group_invitation

        * `update_group_invitation_permissions` - update_group_invitation_permissions

        * `leave_group` - leave_group

        * `create_initial_workspace` - create_initial_workspace

        * `export_applications` - export_applications

        * `import_applications` - import_applications

        * `create_snapshot` - create_snapshot

        * `delete_snapshot` - delete_snapshot

        * `restore_snapshot` - restore_snapshot

        * `empty_trash` - empty_trash

        * `restore_from_trash` - restore_from_trash

        * `create_user` - create_user

        * `update_user` - update_user

        * `schedule_user_deletion` - schedule_user_deletion

        * `cancel_user_deletion` - cancel_user_deletion

        * `sign_in_user` - sign_in_user

        * `change_user_password` - change_user_password

        * `send_reset_user_password` - send_reset_user_password

        * `reset_user_password` - reset_user_password

        * `send_verify_email` - send_verify_email

        * `verify_email` - verify_email

        * `create_db_token` - create_db_token

        * `update_db_token_name` - update_db_token_name

        * `update_db_token_permissions` - update_db_token_permissions

        * `rotate_db_token_key` - rotate_db_token_key

        * `delete_db_token_key` - delete_db_token_key

        * `create_webhook` - create_webhook

        * `delete_webhook` - delete_webhook

        * `update_webhook` - update_webhook

        * `export_table` - export_table

        * `import_database_from_airtable` - import_database_from_airtable

        * `create_table` - create_table

        * `delete_table` - delete_table

        * `order_tables` - order_tables

        * `update_table` - update_table

        * `duplicate_table` - duplicate_table

        * `create_row` - create_row

        * `create_rows` - create_rows

        * `import_rows` - import_rows

        * `delete_row` - delete_row

        * `delete_rows` - delete_rows

        * `move_row` - move_row

        * `update_row` - update_row

        * `update_rows` - update_rows

        * `create_view` - create_view

        * `duplicate_view` - duplicate_view

        * `delete_view` - delete_view

        * `order_views` - order_views

        * `update_view` - update_view

        * `create_view_filter` - create_view_filter

        * `update_view_filter` - update_view_filter

        * `delete_view_filter` - delete_view_filter

        * `create_view_sort` - create_view_sort

        * `update_view_sort` - update_view_sort

        * `delete_view_sort` - delete_view_sort

        * `create_view_group` - create_view_group

        * `update_view_group` - update_view_group

        * `delete_view_group` - delete_view_group

        * `submit_form` - submit_form

        * `rotate_view_slug` - rotate_view_slug

        * `update_view_field_options` - update_view_field_options

        * `create_decoration` - create_decoration

        * `update_decoration` - update_decoration

        * `delete_decoration` - delete_decoration

        * `create_view_filter_group` - create_view_filter_group

        * `update_view_filter_group` - update_view_filter_group

        * `delete_view_filter_group` - delete_view_filter_group

        * `create_data_sync_table` - create_data_sync_table

        * `update_data_sync_table` - update_data_sync_table

        * `sync_data_sync_table` - sync_data_sync_table

        * `create_field` - create_field

        * `delete_field` - delete_field

        * `update_field` - update_field

        * `duplicate_field` - duplicate_field

        * `change_primary_field` - change_primary_field

        * `create_widget` - create_widget

        * `update_widget` - update_widget

        * `delete_widget` - delete_widget

        * `update_dashboard_data_source` - update_dashboard_data_source

        * `generate_formula_with_ai` - generate_formula_with_ai

        * `create_row_comment` - create_row_comment

        * `delete_row_comment` - delete_row_comment

        * `update_row_comment` - update_row_comment

        * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug

        * `create_team` - create_team

        * `update_team` - update_team

        * `delete_team` - delete_team

        * `create_team_subject` - create_team_subject

        * `delete_team_subject` - delete_team_subject

        * `batch_assign_role` - batch_assign_role

        * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval'
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action_type:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        ip_address:
          type: string
          readOnly: true
          nullable: true
      required:
      - action_type
      - description
      - id
      - ip_address
      - timestamp
      - type
      - user
      - workspace
    AdminDashboardPerDay:
      type: object
      properties:
        date:
          type: string
          format: date
        count:
          type: integer
      required:
      - count
      - date
    WorkspaceAdminUsers:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
      required:
      - email
      - id
  securitySchemes:
    UserSource JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
tags:
- name: Admin
