openapi: 3.0.3
info:
  title: Baserow API spec
  version: 1.32.5
  description: 'For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).


    For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).'
  contact:
    url: https://baserow.io/contact
  license:
    name: MIT
    url: https://gitlab.com/baserow/baserow/-/blob/master/LICENSE
paths:
  /api/application/{application_id}/integrations/:
    get:
      operationId: list_application_integrations
      description: Lists all the integrations of the application related to the provided parameter if
        the user has access to the related application's workspace. If the workspace is related to a template,
        then this endpoint will be publicly accessible.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns only the integrations of the application related to the provided Id.
        required: true
      tags:
      - Integrations
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationIntegration'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_application_integration
      description: Creates a new integration
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: path
        name: application_id
        schema:
          type: integer
        description: Creates an integration for the application related to the provided value.
        required: true
      tags:
      - Integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntegrationCreateIntegration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IntegrationCreateIntegration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/IntegrationCreateIntegration'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationIntegration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/application/{application_id}/list-user-source-users/:
    get:
      operationId: list_application_user_source_users
      description: List per user sources the first 5 users available.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: The application we want the users for.
        required: true
      tags:
      - User sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPerUserSource'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/application/{application_id}/user-sources/:
    get:
      operationId: list_application_user_sources
      description: Lists all the user_sources of the application related to the provided parameter if
        the user has access to the related application's workspace. If the workspace is related to a template,
        then this endpoint will be publicly accessible.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns only the user_sources of the application related to the provided Id.
        required: true
      tags:
      - User sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User_SourceUserSource'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_application_user_source
      description: Creates a new user_source
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: path
        name: application_id
        schema:
          type: integer
        description: Creates an user_source for the application related to the provided value.
        required: true
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_SourceCreateUserSource'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User_SourceCreateUserSource'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User_SourceCreateUserSource'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_SourceUserSource'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/application/{application_id}/user-sources/roles/:
    get:
      operationId: list_application_user_source_roles
      description: Lists all the roles of the application related to the provided parameter if the user
        has access to the related application's workspace. If the workspace is related to a template,
        then this endpoint will be publicly accessible.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns only the roles of the application related to the provided Id.
        required: true
      tags:
      - User source roles
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_SourceUserSourceRoles'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
components:
  schemas:
    IntegrationIntegration:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowIntegrationIntegration'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowIntegrationIntegration'
    UsersPerUserSource:
      type: object
      description: The response of the list user source users endpoint.
      properties:
        users_per_user_sources:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/UserSourceUser'
          description: An object keyed by the id of the user source and the value being the list of users
            for this user source.
      required:
      - users_per_user_sources
    User_SourceUserSourceRoles:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowUserSourceUserSourceRoles'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowUserSourceUserSourceRoles'
    IntegrationCreateIntegration:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowIntegrationCreateIntegration'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowIntegrationCreateIntegration'
    User_SourceUserSource:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowUserSourceUserSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowUserSourceUserSource'
    User_SourceCreateUserSource:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowUserSourceCreateUserSource'
      discriminator:
        propertyName: type
        mapping:
          local_baserow: '#/components/schemas/LocalBaserowUserSourceCreateUserSource'
    LocalBaserowIntegrationIntegration:
      type: object
      description: Basic integration serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        application_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the integration.
        name:
          type: string
          readOnly: true
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
          description: Lowest first.
        context_data:
          allOf:
          - $ref: '#/components/schemas/LocalBaserowContextData'
          readOnly: true
        authorized_user:
          allOf:
          - $ref: '#/components/schemas/SubjectUser'
          readOnly: true
      required:
      - application_id
      - authorized_user
      - context_data
      - id
      - name
      - order
      - type
    UserSourceUser:
      type: object
      description: A serializer used to serialize a UserSourceUser object.
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        user_source_id:
          type: integer
        role:
          type: string
      required:
      - email
      - id
      - role
      - user_source_id
      - username
    LocalBaserowUserSourceUserSourceRoles:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        roles:
          type: array
          items:
            type: string
          readOnly: true
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - id
      - roles
    LocalBaserowIntegrationCreateIntegration:
      type: object
      description: 'This serializer allow to set the type of an integration and the integration id

        before which we want to insert the new integration.'
      properties:
        before_id:
          type: integer
          description: If provided, creates the integration before the integration with the given id.
        type:
          allOf:
          - $ref: '#/components/schemas/Type050Enum'
          description: 'The type of the integration.


            * `local_baserow` - local_baserow'
        name:
          type: string
          maxLength: 255
        context_data:
          allOf:
          - $ref: '#/components/schemas/LocalBaserowContextData'
          readOnly: true
        authorized_user:
          allOf:
          - $ref: '#/components/schemas/SubjectUser'
          readOnly: true
      required:
      - authorized_user
      - context_data
      - name
      - type
    LocalBaserowUserSourceUserSource:
      type: object
      description: Basic user_source serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          readOnly: true
          description: Unique id for this user source.
        application_id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The Integration used to establish the connection with the service.
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the user_source.
        name:
          type: string
          readOnly: true
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          readOnly: true
          description: Lowest first.
        auth_providers:
          type: array
          items:
            $ref: '#/components/schemas/App_Auth_ProviderAppAuthProvider'
          description: Auth providers related to this user source.
        user_count:
          type: integer
          readOnly: true
          description: The total number of users in the user source.
        user_count_updated_at:
          type: string
          format: date-time
          readOnly: true
          description: When the last user count took place.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - application_id
      - id
      - integration_id
      - name
      - order
      - type
      - uid
      - user_count
      - user_count_updated_at
    LocalBaserowUserSourceCreateUserSource:
      type: object
      description: 'This serializer allow to set the type of an user_source and the user_source id

        before which we want to insert the new user_source.'
      properties:
        before_id:
          type: integer
          description: If provided, creates the user_source before the user_source with the given id.
        type:
          allOf:
          - $ref: '#/components/schemas/Type050Enum'
          description: 'The type of the user_source.


            * `local_baserow` - local_baserow'
        name:
          type: string
          maxLength: 255
        integration_id:
          type: integer
          description: The related integration id.
        auth_providers:
          type: array
          items:
            $ref: '#/components/schemas/App_Auth_ProviderBaseAppAuthProvider'
          description: Auth providers related to this user source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - integration_id
      - name
      - type
    LocalBaserowContextData:
      type: object
      properties:
        databases:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowDatabaseApplication'
      required:
      - databases
    SubjectUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
        first_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
      required:
      - email
      - first_name
      - id
      - username
    Type050Enum:
      enum:
      - local_baserow
      type: string
      description: '* `local_baserow` - local_baserow'
    App_Auth_ProviderAppAuthProvider:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider'
      - $ref: '#/components/schemas/SamlAppAuthProviderModelAppAuthProvider'
      - $ref: '#/components/schemas/OpenIdConnectAppAuthProviderModelAppAuthProvider'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_password: '#/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider'
          saml: '#/components/schemas/SamlAppAuthProviderModelAppAuthProvider'
          openid_connect: '#/components/schemas/OpenIdConnectAppAuthProviderModelAppAuthProvider'
    App_Auth_ProviderBaseAppAuthProvider:
      oneOf:
      - $ref: '#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider'
      - $ref: '#/components/schemas/SamlAppAuthProviderModelBaseAppAuthProvider'
      - $ref: '#/components/schemas/OpenIdConnectAppAuthProviderModelBaseAppAuthProvider'
      discriminator:
        propertyName: type
        mapping:
          local_baserow_password: '#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider'
          saml: '#/components/schemas/SamlAppAuthProviderModelBaseAppAuthProvider'
          openid_connect: '#/components/schemas/OpenIdConnectAppAuthProviderModelBaseAppAuthProvider'
    LocalBaserowDatabaseApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        workspace:
          allOf:
          - $ref: '#/components/schemas/Workspace'
          description: The workspace that the application belongs to.
        created_on:
          type: string
          format: date-time
          readOnly: true
        tables:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowTable'
          description: This field is specific to the `database` application and contains an array of tables
            that are in the database.
        views:
          type: array
          items:
            $ref: '#/components/schemas/LocalBaserowView'
          description: This field is specific to the `database` application and contains an array of views
            that are in the tables.
      required:
      - created_on
      - id
      - name
      - order
      - tables
      - type
      - views
      - workspace
    LocalBaserowPasswordAppAuthProviderAppAuthProvider:
      type: object
      description: Basic app_auth_provider serializer mostly for returned values.
      properties:
        type:
          type: string
          readOnly: true
          description: The type of the app_auth_provider.
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
          maxLength: 255
        password_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as password for the user account.
      required:
      - id
      - type
    SamlAppAuthProviderModelAppAuthProvider:
      type: object
      description: Basic app_auth_provider serializer mostly for returned values.
      properties:
        type:
          type: string
          readOnly: true
          description: The type of the app_auth_provider.
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
          maxLength: 255
        metadata:
          type: string
          description: The SAML metadata XML provided by the IdP.
        is_verified:
          type: boolean
          readOnly: true
          description: Whether or not a user sign in correctly with this SAML provider.
        email_attr_key:
          type: string
          description: The key in the SAML response that contains the email address of the user.
        first_name_attr_key:
          type: string
          description: The key in the SAML response that contains the first name of the user.
        last_name_attr_key:
          type: string
          description: The key in the SAML response that contains the last name of the user. If this is
            not set, the first name attr will be used as full name.
      required:
      - id
      - is_verified
      - metadata
      - type
    OpenIdConnectAppAuthProviderModelAppAuthProvider:
      type: object
      description: Basic app_auth_provider serializer mostly for returned values.
      properties:
        type:
          type: string
          readOnly: true
          description: The type of the app_auth_provider.
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
          maxLength: 255
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          description: The provider base url.
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - id
      - name
      - secret
      - type
    OpenIdConnectAppAuthProviderModelBaseAppAuthProvider:
      type: object
      description: 'This serializer allow to set the type of an app_auth_provider and the

        app_auth_provider id before which we want to insert the new app_auth_provider.'
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type128Enum'
          description: 'The type of the app_auth_provider.


            * `local_baserow_password` - local_baserow_password

            * `saml` - saml

            * `openid_connect` - openid_connect'
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          description: The provider base url.
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - name
      - secret
      - type
      - user_source_id
    SamlAppAuthProviderModelBaseAppAuthProvider:
      type: object
      description: 'This serializer allow to set the type of an app_auth_provider and the

        app_auth_provider id before which we want to insert the new app_auth_provider.'
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type128Enum'
          description: 'The type of the app_auth_provider.


            * `local_baserow_password` - local_baserow_password

            * `saml` - saml

            * `openid_connect` - openid_connect'
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
        metadata:
          type: string
          description: The SAML metadata XML provided by the IdP.
        is_verified:
          type: boolean
          readOnly: true
          description: Whether or not a user sign in correctly with this SAML provider.
        email_attr_key:
          type: string
          description: The key in the SAML response that contains the email address of the user.
        first_name_attr_key:
          type: string
          description: The key in the SAML response that contains the first name of the user.
        last_name_attr_key:
          type: string
          description: The key in the SAML response that contains the last name of the user. If this is
            not set, the first name attr will be used as full name.
      required:
      - is_verified
      - metadata
      - type
      - user_source_id
    LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider:
      type: object
      description: 'This serializer allow to set the type of an app_auth_provider and the

        app_auth_provider id before which we want to insert the new app_auth_provider.'
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type128Enum'
          description: 'The type of the app_auth_provider.


            * `local_baserow_password` - local_baserow_password

            * `saml` - saml

            * `openid_connect` - openid_connect'
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
        password_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as password for the user account.
      required:
      - type
      - user_source_id
    LocalBaserowView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
      - table_id
    Workspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
        generative_ai_models_enabled:
          type: string
          readOnly: true
      required:
      - generative_ai_models_enabled
      - id
      - name
    LocalBaserowTable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_data_sync:
          type: boolean
          description: Whether this table is a data synced table or not.
      required:
      - database_id
      - id
      - is_data_sync
      - name
    Type128Enum:
      enum:
      - local_baserow_password
      - saml
      - openid_connect
      type: string
      description: '* `local_baserow_password` - local_baserow_password

        * `saml` - saml

        * `openid_connect` - openid_connect'
  securitySchemes:
    UserSource JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
tags:
- name: Integrations
- name: User sources
