openapi: 3.0.3
info:
  title: Baserow API spec
  version: 1.32.5
  description: 'For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).


    For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).'
  contact:
    url: https://baserow.io/contact
  license:
    name: MIT
    url: https://gitlab.com/baserow/baserow/-/blob/master/LICENSE
paths:
  /api/database/data-sync/{data_sync_id}/:
    get:
      operationId: get_table_data_sync
      description: Responds with the data sync, including the data sync type specific properties, if the
        user has the right permissions.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: The data sync that must be fetched.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Data_SyncDataSync'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_table_data_sync
      description: Updates the properties of the provided data sync, if the user has the right permissions.
        Note that if the `synced_properties` is not provided, the available properties change, then the
        unavailable ones will automatically be removed.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Updates the data sync related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedData_SyncUpdateDataSync'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedData_SyncUpdateDataSync'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedData_SyncUpdateDataSync'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSync'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_PROPERTY_NOT_FOUND
                    - ERROR_SYNC_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/data-sync/{data_sync_id}/properties/:
    get:
      operationId: get_table_data_sync_properties
      description: Lists all the available properties of the provided data sync.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Lists properties related to the provided ID.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListDataSyncProperty'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SYNC_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/data-sync/{data_sync_id}/sync/async/:
    post:
      operationId: sync_data_sync_table_async
      description: Start a job to sync the data sync table with the provided `data_sync_id` parameter
        if the authorized user has access to the database's workspace.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Starts a job to sync the data sync table related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncDataSyncTableJobTypeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/data-sync/database/{database_id}/:
    post:
      operationId: create_database_data_sync_table
      description: Creates a new data sync table with the given data sync type. This will technically
        create a table, but it's synchronized with the provided data sync information. This means that
        some fields related to it will automatically be created and will be read-only.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Creates a data sync table for the database related to theprovided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Data_SyncCreateDataSync'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Data_SyncCreateDataSync'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Data_SyncCreateDataSync'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_SYNC_ERROR
                    - ERROR_PROPERTY_NOT_FOUND
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/data-sync/properties/:
    post:
      operationId: get_table_data_sync_type_properties
      description: Lists all the properties of the provided data sync type given the request data. This
        can be used to choose which properties should be included when creating the data sync.
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Data_SyncListDataSyncPropertiesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Data_SyncListDataSyncPropertiesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Data_SyncListDataSyncPropertiesRequest'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListDataSyncProperty'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SYNC_ERROR
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/export/{job_id}/:
    get:
      operationId: get_export_job
      description: Returns information such as export progress and state or the url of the exported file
        for the specified export job, only if the requesting user has access.
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        description: The job id to lookup information about.
        required: true
      tags:
      - Database table export
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJob'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_EXPORT_JOB_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/export/table/{table_id}/:
    post:
      operationId: export_table
      description: Creates and starts a new export job for a table given some exporter options. Returns
        an error if the requesting user does not have permissionsto view the table.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table id to create and start an export job for
        required: true
      tags:
      - Database table export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Export'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Export'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Export'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJob'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_TABLE_ONLY_EXPORT_UNSUPPORTED
                    - ERROR_VIEW_UNSUPPORTED_FOR_EXPORT_TYPE
                    - ERROR_VIEW_NOT_IN_TABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/{field_id}/:
    get:
      operationId: get_database_table_field
      description: Returns the existing field if the authorized user has access to the related database's
        workspace. Depending on the type different properties could be returned.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: Returns the field related to the provided value.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldField'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_field
      description: Updates the existing field if the authorized user has access to the related database's
        workspace. The type can also be changed and depending on that type, different additional properties
        can optionally be set. If you change the field type it could happen that the data conversion fails,
        in that case the `ERROR_CANNOT_CHANGE_FIELD_TYPE` is returned, but this rarely happens. If a data
        value cannot be converted it is set to `null` so data might go lost.If updated the field causes
        other fields to change then the specificinstances of those fields will be included in the related
        fields response key.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: Updates the field related to the provided value.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFieldUpdateField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFieldUpdateField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFieldUpdateField'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldFieldSerializerWithRelatedFields'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_CHANGE_FIELD_TYPE
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_RESERVED_BASEROW_FIELD_NAME
                    - ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS
                    - ERROR_INVALID_BASEROW_FIELD_NAME
                    - ERROR_FIELD_SELF_REFERENCE
                    - ERROR_FIELD_CIRCULAR_REFERENCE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_field
      description: Deletes the existing field if the authorized user has access to the related database's
        workspace. Note that all the related data to that field is also deleted. Primary fields cannot
        be deleted because their value represents the row. If deleting the field causes other fields to
        change then the specificinstances of those fields will be included in the related fields response
        key.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: Deletes the field related to the provided value.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedFields'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_PRIMARY_FIELD
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/{field_id}/duplicate/async/:
    post:
      operationId: duplicate_table_field
      description: Duplicates the table with the provided `table_id` parameter if the authorized user
        has access to the database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field to duplicate.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateFieldJobTypeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/{field_id}/generate-ai-field-values/:
    post:
      operationId: generate_table_ai_field_value
      description: "Endpoint that's used by the AI field to start an sync task that will update the cell\
        \ value of the provided row IDs based on the dynamically constructed prompt configured in the\
        \ field settings. \nThis is a **premium** feature."
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field to generate the value for.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GENERATIVE_AI_DOES_NOT_EXIST
                    - ERROR_MODEL_DOES_NOT_BELONG_TO_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/{field_id}/unique_row_values/:
    get:
      operationId: get_database_field_unique_row_values
      description: Returns a list of all the unique row values for an existing field, sorted in order
        of frequency.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: Returns the values related to the provided field.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many values should be returned.
      - in: query
        name: split_comma_separated
        schema:
          type: boolean
        description: Indicates whether the original column values must be splitted by comma.
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UniqueRowValues'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/table/{table_id}/:
    get:
      operationId: list_database_table_fields
      description: Lists all the fields of the table related to the provided parameter if the user has
        access to the related database's workspace. If the workspace is related to a template, then this
        endpoint will be publicly accessible. A table consists of fields and each field can have a different
        type. Each type can have different properties. A field is comparable with a regular table's column.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns only the fields of the table related to the provided value.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldField'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_field
      description: Creates a new field for the table related to the provided `table_id` parameter if the
        authorized user has access to the related database's workspace. Depending on the type, different
        properties can optionally be set.If creating the field causes other fields to change then the
        specificinstances of those fields will be included in the related fields response key.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a new field for the provided table related to the value.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldCreateField'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldCreateField'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldCreateField'
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldFieldSerializerWithRelatedFields'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_FIELD_COUNT_EXCEEDED
                    - ERROR_RESERVED_BASEROW_FIELD_NAME
                    - ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS
                    - ERROR_INVALID_BASEROW_FIELD_NAME
                    - ERROR_FIELD_SELF_REFERENCE
                    - ERROR_FIELD_CIRCULAR_REFERENCE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/table/{table_id}/change-primary-field/:
    post:
      operationId: change_primary_field
      description: Changes the primary field of a table to the one provided in the body payload.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table where to update the primary field in.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePrimaryFieldParams'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePrimaryFieldParams'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePrimaryFieldParams'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldField'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FIELD_IS_ALREADY_PRIMARY
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_INCOMPATIBLE_PRIMARY_FIELD_TYPE
                    - ERROR_TABLE_HAS_NO_PRIMARY_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/fields/table/{table_id}/generate-ai-formula/:
    post:
      operationId: generate_formula_with_ai
      description: 'This endpoint generates a Baserow formula for the table related to the provided id,
        based on the human readable input provided in the request body.

        This is a **premium** feature.'
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table to generate the formula for.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateFormulaWithAIRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateFormulaWithAIRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateFormulaWithAIRequest'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateFormulaWithAIResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GENERATIVE_AI_DOES_NOT_EXIST
                    - ERROR_MODEL_DOES_NOT_BELONG_TO_TYPE
                    - ERROR_OUTPUT_PARSER
                    - ERROR_GENERATIVE_AI_PROMPT
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/formula/{table_id}/type/:
    post:
      operationId: type_formula_field
      description: Calculates and returns the type of the specified formula value. Does not change the
        state of the field in any way.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table id of the formula field to type.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeFormulaRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeFormulaRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TypeFormulaRequest'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeFormulaResult'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_WITH_FORMULA
                    - ERROR_FIELD_SELF_REFERENCE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/names/:
    get:
      operationId: list_database_table_row_names
      description: Returns the names of the given row of the given tables. The nameof a row is the primary
        field value for this row. The result can be usedfor example, when you want to display the name
        of a linked row from another table.
      parameters:
      - in: query
        name: table__{id}
        schema:
          type: string
        description: A list of comma separated row ids to query from the table with id {id}. For example,
          if you want the name of row `42` and `43` from table `28` this parameter will be `table__28=42,43`.
          You can specify multiple rows for different tables but every tables must be in the same database.
          You need at least read permission on all specified tables.
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  '{table_id}*':
                    type: object
                    description: An object containing the row names of table `table_id`.
                    properties:
                      '{row_id}*':
                        type: string
                        description: the name of the row with id `row_id` from table with id `table_id`.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/:
    get:
      operationId: list_database_table_rows
      description: Lists all the rows of the table related to the provided parameter if the user has access
        to the related database's workspace. The response is paginated by a page/size style. It is also
        possible to provide an optional search query, only rows where the data matches the search query
        are going to be returned then. The properties of the returned rows depends on which fields the
        table has. For a complete overview of fields use the **list_database_table_fields** endpoint to
        list them all. In the example all field types are listed, but normally the number in field_{id}
        key is going to be the id of the field. Or if the GET parameter `user_field_names` is provided
        then the keys will be the name of the field. The value is what the user has provided and the format
        of it depends on the fields type.
      parameters:
      - in: query
        name: exclude
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the exclude query parameter. If you for example provide the following
          GET parameter `exclude=field_1,field_2` then the fields with id `1` and id `2` are going to
          be excluded from the selection and response. If the `user_field_names` parameter is provided
          then instead exclude should be a comma separated list of the actual field names. For field names
          with commas you should surround the name with quotes like so: `exclude=My Field,"Field With
          , "`. A backslash can be used to escape field names which contain double quotes like so: `exclude=My
          Field,Field with \"`.'
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the include query parameter. If you for example provide the following
          GET parameter `include=field_1,field_2` then only the fields withid `1` and id `2` are going
          to be selected and included in the response. If the `user_field_names` parameter is provided
          then instead include should be a comma separated list of the actual field names. For field names
          with commas you should surround the name with quotes like so: `include=My Field,"Field With
          , "`. A backslash can be used to escape field names which contain double quotes like so: `include=My
          Field,Field with \"`.'
      - in: query
        name: order_by
        schema:
          type: string
        description: 'Optionally the rows can be ordered by provided field ids separated by comma. By
          default a field is ordered in ascending (A-Z) order, but by prepending the field with a ''-''
          it can be ordered descending (Z-A). If the `user_field_names` parameter is provided then instead
          order_by should be a comma separated list of the actual field names. For field names with commas
          you should surround the name with quotes like so: `order_by=My Field,"Field With , "`. A backslash
          can be used to escape field names which contain double quotes like so: `order_by=My Field,Field
          with \"`.'
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many rows should be returned per page.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the rows of the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause the returned JSON to use the user-specified
          field names instead of the internal Baserow field names (e.g., field_123).'
      - in: query
        name: view_id
        schema:
          type: integer
        description: Includes all the filters and sorts of the provided view.
      - in: query
        name: '{link_row_field}__join={target_field},{target_field2}'
        schema:
          type: string
        description: This parameter allows you to request a lookup of field values from a target table
          through existing link row fields. The parameter name has to be the name of an existing link
          row field, followed by `__join`. The value should be a list of field names for which we want
          to lookup additional values. You can provide one or multiple target fields. It is not possible
          to lookup a value of a link row field in the target table. If `user_field_names` parameter is
          set, the names of the fields should be user field names. In this case the resulting field names
          in the output will also be user field names. The used link row field has to be among the requested
          fields if using the `include` or `exclude` parameters.
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerExampleRowResponseSerializerWithUserFieldNames'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_row
      description: Creates a new row in the table if the user has access to the related table's workspace.
        The accepted body fields are depending on the fields that the table has. For a complete overview
        of fields use the **list_database_table_fields** to list them all. None of the fields are required,
        if they are not provided the value is going to be `null` or `false` or some default value is that
        is set. If you want to add a value for the field with for example id `10`, the key must be named
        `field_10`. Or instead if the `user_field_names` GET param is provided the key must be the name
        of the field. Of course multiple fields can be provided in one request. In the examples below
        you will find all the different field types, the numbers/ids in the example are just there for
        example purposes, the field_ID must be replaced with the actual id of the field or the name of
        the field if `user_field_names` is provided.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: before
        schema:
          type: integer
        description: If provided then the newly created row will be positioned before the row with the
          provided id.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a row in the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause this endpoint to expect and return
          the user-specified field names instead of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames'
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/{row_id}/:
    get:
      operationId: get_database_table_row
      description: Fetches an existing row from the table if the user has access to the related table's
        workspace. The properties of the returned row depend on which fields the table has. For a complete
        overview of fields use the **list_database_table_fields** endpoint to list them all. In the example
        all field types are listed, but normally the number in field_{id} key is going to be the id of
        the field of the field. Or if the GET parameter `user_field_names` is provided then the keys will
        be the name of the field. The value is what the user has provided and the format of it depends
        on the fields type.
      parameters:
      - in: query
        name: include
        schema:
          type: string
        description: Optionally include row's `metadata` in the response. The `metadata` object includes
          extra row specific data like the 'row_comments_notification_mode' settings, if available.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Returns the row related the provided value.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the row of the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause the returned JSON to use the user-specified
          field names instead of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_row
      description: Updates an existing row in the table if the user has access to the related table's
        workspace. The accepted body fields are depending on the fields that the table has. For a complete
        overview of fields use the **list_database_table_fields** endpoint to list them all. None of the
        fields are required, if they are not provided the value is not going to be updated. When you want
        to update a value for the field with id `10`, the key must be named `field_10`. Or if the GET
        parameter `user_field_names` is provided the key of the field to update must be the name of the
        field. Multiple different fields to update can be provided in one request. In the examples below
        you will find all the different field types, the numbers/ids in the example are just there for
        example purposes, the field_ID must be replaced with the actual id of the field or the name of
        the field if `user_field_names` is provided.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Updates the row related to the value.
        required: true
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the row in the table related to the value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause this endpoint to expect and return
          the user-specified field names instead of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames'
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_row
      description: Deletes an existing row in the table if the user has access to the table's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Deletes the row related to the value.
        required: true
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Deletes the row in the table related to the value.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/{row_id}/adjacent/:
    get:
      operationId: get_adjacent_database_table_row
      description: Fetches the adjacent row to a given row_id in the table with the given table_id. If
        the previous flag is set it will return the previous row, otherwise it will return the next row.
        You can specifya view_id and it will apply the filters and sorts of the provided view.
      parameters:
      - in: query
        name: previous
        schema:
          type: boolean
        description: A flag query parameter which if provided returns theprevious row to the specified
          row_id. If it's not setit will return the next row.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Returns the row adjacent the provided value.
        required: true
      - in: query
        name: search
        schema:
          type: string
        description: If provided, the adjacent row will be one that matchesthe search query.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the row of the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause the returned JSON to use the user-specified
          field names instead of the internal Baserow field names (e.g., field_123).'
      - in: query
        name: view_id
        schema:
          type: integer
        description: Applies the filters and sorts of the provided view.
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
          description: ''
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/{row_id}/history/:
    get:
      operationId: get_database_table_row_history
      description: Fetches the row change history of a given row_id in the table with the given table_id.
        The row change history is paginated and can be limited with the limit and offset query parameters.
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: The maximum number of row change history entries to return.
      - in: query
        name: offset
        schema:
          type: integer
        description: The offset of the row change history entries to return.
      - in: path
        name: row_id
        schema:
          type: integer
        description: The id of the row to fetch the change history from.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: The id of the table to fetch the row change history from.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerRowHistory'
          description: ''
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/{row_id}/move/:
    patch:
      operationId: move_database_table_row
      description: Moves the row related to given `row_id` parameter to another position. It is only possible
        to move the row before another existing row or to the end. If the `before_id` is provided then
        the row related to the `row_id` parameter is moved before that row. If the `before_id` parameter
        is not provided, then the row will be moved to the end.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: before_id
        schema:
          type: integer
        description: Moves the row related to the given `row_id` before the row related to the provided
          value. If not provided, then the row will be moved to the end.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Moves the row related to the value.
        required: true
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Moves the row in the table related to the value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause the returned JSON to use the user-specified
          field names instead of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/batch/:
    post:
      operationId: batch_create_database_table_rows
      description: "Creates new rows in the table if the user has access to the related table's workspace.\
        \ The accepted body fields are depending on the fields that the table has. For a complete overview\
        \ of fields use the **list_database_table_fields** to list them all. None of the fields are required,\
        \ if they are not provided the value is going to be `null` or `false` or some default value is\
        \ that is set. If you want to add a value for the field with for example id `10`, the key must\
        \ be named `field_10`. Or instead if the `user_field_names` GET param is provided the key must\
        \ be the name of the field. Of course multiple fields can be provided in one request. In the examples\
        \ below you will find all the different field types, the numbers/ids in the example are just there\
        \ for example purposes, the field_ID must be replaced with the actual id of the field or the name\
        \ of the field if `user_field_names` is provided.\n\n **WARNING:** This endpoint doesn't yet work\
        \ with row created webhooks."
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: before
        schema:
          type: integer
        description: If provided then the newly created rows will be positioned before the row with the
          provided id.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates the rows in the table.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause this endpoint to expect and return
          the user-specified field names instead of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleBatchRowsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExampleBatchRowsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExampleBatchRowsRequest'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleBatchRowsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_ROW_IDS_NOT_UNIQUE
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: batch_update_database_table_rows
      description: "Updates existing rows in the table if the user has access to the related table's workspace.\
        \ The accepted body fields are depending on the fields that the table has. For a complete overview\
        \ of fields use the **list_database_table_fields** endpoint to list them all. None of the fields\
        \ are required, if they are not provided the value is not going to be updated. When you want to\
        \ update a value for the field with id `10`, the key must be named `field_10`. Or if the GET parameter\
        \ `user_field_names` is provided the key of the field to update must be the name of the field.\
        \ Multiple different fields to update can be provided for each row. In the examples below you\
        \ will find all the different field types, the numbers/ids in the example are just there for example\
        \ purposes, the field_ID must be replaced with the actual id of the field or the name of the field\
        \ if `user_field_names` is provided.\n\n **WARNING:** This endpoint doesn't yet work with row\
        \ updated webhooks."
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the rows in the table.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following values: `y`,
          `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause this endpoint to expect and return
          the user-specified field names instead of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExampleBatchUpdateRowsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExampleBatchUpdateRowsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExampleBatchUpdateRowsRequest'
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExampleBatchRowsResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_ROW_IDS_NOT_UNIQUE
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/rows/table/{table_id}/batch-delete/:
    post:
      operationId: batch_delete_database_table_rows
      description: "Deletes existing rows in the table if the user has access to the table's workspace.\n\
        \n **WARNING:**  This endpoint doesn't yet work with row deleted webhooks."
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation, if set to `y`,
          `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Deletes the rows in the table related to the value.
        required: true
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchDeleteRows'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchDeleteRows'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchDeleteRows'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                    - ERROR_ROW_IDS_NOT_UNIQUE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tables/{table_id}/:
    get:
      operationId: get_database_table
      description: Returns the requested table if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the table related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table
      description: Updates the existing table if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the table related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTableUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTableUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTableUpdate'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table
      description: Deletes the existing table if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Deletes the table related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tables/{table_id}/duplicate/async/:
    post:
      operationId: duplicate_database_table_async
      description: Start a job to duplicate the table with the provided `table_id` parameter if the authorized
        user has access to the database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table to duplicate.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateTableJobTypeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tables/{table_id}/import/async/:
    post:
      operationId: import_data_database_table_async
      description: Import data in the specified table if the authorized user has access to the related
        database's workspace. This endpoint is asynchronous and return the created job to track the progress
        of the task.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Import data into the table related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableImport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableImport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableImport'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileImportJobTypeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tables/database/{database_id}/:
    get:
      operationId: list_database_tables
      description: Lists all the tables that are in the database related to the `database_id` parameter
        if the user has access to the database's workspace. A table is exactly as the name suggests. It
        can hold multiple fields, each having their own type and multiple rows. They can be added via
        the **create_database_table_field** and **create_database_table_row** endpoints.
      parameters:
      - in: path
        name: database_id
        schema:
          type: integer
        description: Returns only tables that are related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Table'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table
      description: 'Creates synchronously a new table for the database related to the provided `database_id`
        parameter if the authorized user has access to the database''s workspace.


        As an alternative you can use the `create_async_database_table` for better performances and importing
        bigger files.'
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Creates a table for the database related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableCreate'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_INVALID_INITIAL_TABLE_DATA
                    - ERROR_INITIAL_TABLE_DATA_LIMIT_EXCEEDED
                    - ERROR_RESERVED_BASEROW_FIELD_NAME
                    - ERROR_INITIAL_TABLE_DATA_HAS_DUPLICATE_NAMES
                    - ERROR_INVALID_BASEROW_FIELD_NAME
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tables/database/{database_id}/async/:
    post:
      operationId: create_database_table_async
      description: Creates a job that creates a new table for the database related to the provided `database_id`
        parameter if the authorized user has access to the database's workspace. This endpoint is asynchronous
        and return the created job to track the progress of the task.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Creates a table for the database related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableCreate'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileImportJobTypeResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tables/database/{database_id}/order/:
    post:
      operationId: order_database_tables
      description: Changes the order of the provided table ids to the matching position that the id has
        in the list. If the authorized user does not belong to the workspace it will be ignored. The order
        of the not provided tables will be set to `0`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Updates the order of the tables in the database related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderTables'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderTables'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderTables'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TABLE_NOT_IN_DATABASE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tokens/:
    get:
      operationId: list_database_tokens
      description: Lists all the database tokens that belong to the authorized user. A token can be used
        to create, read, update and delete rows in the tables of the token's workspace. It only works
        on the tables if the token has the correct permissions. The **Database table rows** endpoints
        can be used for these operations.
      tags:
      - Database tokens
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token'
          description: ''
    post:
      operationId: create_database_token
      description: Creates a new database token for a given workspace and for the authorized user.
      tags:
      - Database tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tokens/{token_id}/:
    get:
      operationId: get_database_token
      description: Returns the requested database token if it is owned by the authorized user andif the
        user has access to the related workspace.
      parameters:
      - in: path
        name: token_id
        schema:
          type: integer
        description: Returns the database token related to the provided value.
        required: true
      tags:
      - Database tokens
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_token
      description: Updates the existing database token if it is owned by the authorized user and ifthe
        user has access to the related workspace.
      parameters:
      - in: path
        name: token_id
        schema:
          type: integer
        description: Updates the database token related to the provided value.
        required: true
      tags:
      - Database tokens
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTokenUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTokenUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTokenUpdate'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_DATABASE_DOES_NOT_BELONG_TO_GROUP
                    - ERROR_TABLE_DOES_NOT_BELONG_TO_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_token
      description: Deletes the existing database token if it is owned by the authorized user and ifthe
        user has access to the related workspace.
      parameters:
      - in: path
        name: token_id
        schema:
          type: integer
        description: Deletes the database token related to the provided value.
        required: true
      tags:
      - Database tokens
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/tokens/check/:
    get:
      operationId: check_database_token
      description: This endpoint check be used to check if the provided personal API token is valid. If
        returns a `200` response if so and a `403` is not. This can be used by integrations like Zapier
        or n8n to test if a token is valid.
      tags:
      - Database tokens
      security:
      - Database token: []
      responses:
        '200':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/view/{slug}/export-public-view/:
    post:
      operationId: export_publicly_shared_view
      description: 'Creates and starts a new export job for a publicly shared view  given some exporter
        options. Returns an error if the view doesn''t support exporting.


        This is a **premium** feature.'
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: Select the view you want to export.
        required: true
      tags:
      - Database table view export
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Export'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Export'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Export'
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJob'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_TABLE_ONLY_EXPORT_UNSUPPORTED
                    - ERROR_VIEW_UNSUPPORTED_FOR_EXPORT_TYPE
                    - ERROR_VIEW_NOT_IN_TABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/view/{view_id}/premium:
    patch:
      operationId: premium_view_attributes_update
      description: Sets view attributes only available for premium users.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Sets show_logo of this view.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePremiumViewAttributes'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePremiumViewAttributes'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePremiumViewAttributes'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/View'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_CANNOT_UPDATE_PREMIUM_ATTRIBUTES_ON_TEMPLATE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/view/get-public-view-export/{job_id}/:
    get:
      operationId: get_public_view_export_job
      description: 'Returns information such as export progress and state or the url of the exported file
        for the specified export job, only if the requesting user has access.


        This is a **premium** feature.'
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        description: The signed job id to lookup information about.
        required: true
      tags:
      - Database table view export
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportJob'
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_EXPORT_JOB_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{slug}/link-row-field-lookup/{field_id}/:
    get:
      operationId: database_table_public_view_link_row_field_lookup
      description: If the view is publicly shared or if an authenticated user has access to the related
        workspace, then this endpoint can be used to do a value lookup of the link row fields that are
        included in the view. Normally it is not possible for a not authenticated visitor to fetch the
        rows of a table. This endpoint makes it possible to fetch the id and primary field value of the
        related table of a link row included in the view.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field id of the link row field.
        required: true
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: slug
        schema:
          type: string
        description: The slug related to the view.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerLinkRowValue'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{slug}/public/auth/:
    post:
      operationId: public_view_token_auth
      description: Returns a valid never-expiring JWT token for this public shared view if the password
        provided matches with the one saved by the view's owner.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug of the grid view to get public information about.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicViewAuthRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PublicViewAuthRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PublicViewAuthRequest'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicViewAuthResponse'
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: The password provided for this view is incorrect
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{slug}/public/info/:
    get:
      operationId: get_public_view_info
      description: Returns the required public information to display a single shared view.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug of the view to get public information about.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicViewInfo'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/:
    get:
      operationId: get_database_table_view
      description: Returns the existing view. Depending on the type different properties could be returned.
      parameters:
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on the returned view. The supported
          attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings`
          will add the attributes `filters` and `sortings` to every returned view, containing a list of
          the views filters and sortings respectively.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view
      description: Updates the existing view. The type cannot be changed. It depends on the existing type
        which properties can be changed.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on the returned view. The supported
          attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings`
          will add the attributes `filters` and `sortings` to every returned view, containing a list of
          the views filters and sortings respectively.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Updates the view related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedViewUpdateView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedViewUpdateView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedViewUpdateView'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view
      description: Deletes the existing view. Note that all the related settings of the view are going
        to be deleted also. The data stays intact after deleting the view because this is related to the
        table and not the view.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Deletes the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/decorations/:
    get:
      operationId: list_database_table_view_decorations
      description: Lists all decorations of the view related to the provided `view_id` if the user has
        access to the related database's workspace. A view can have multiple decorations. View decorators
        can be used to decorate rows. This can, for example, be used to change the border or background
        color of a row if it matches certain conditions.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only decoration of the view given to the provided value.
        required: true
      tags:
      - Database table view decorations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Decorator_Value_Provider_TypeViewDecoration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_decoration
      description: Creates a new decoration for the view related to the provided `view_id` parameter if
        the authorized user has access to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a decoration for the view related to the given value.
        required: true
      tags:
      - Database table view decorations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decorator_Value_Provider_TypeViewDecoration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/duplicate/:
    post:
      operationId: duplicate_database_table_view
      description: 'Duplicates an existing view if the user has access to it. When a view is duplicated
        everything is copied except:

        - The name is appended with the copy number. Ex: `ViewName`->`ViewName(2)` and `View(2)`->`View(3)`

        - If the original view is publicly shared, the new view will not be shared anymore'
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Duplicates the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/field-options/:
    get:
      operationId: get_database_table_view_field_options
      description: Responds with the fields options of the provided view if the authenticated user has
        access to the related workspace.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Responds with field options related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFieldOptions'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_field_options
      description: Updates the field options of a view. The field options differ per field type  This
        could for example be used to update the field width of a `grid` view if the user changes it.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Updates the field options related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedViewFieldOptions'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedViewFieldOptions'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedViewFieldOptions'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFieldOptions'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/filter-groups/:
    post:
      operationId: create_database_table_view_filter_group
      description: Creates a new filter group for the view related to the provided `view_id` parameter.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: The ID of the view where create the new filter group.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewFilterGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewFilterGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewFilterGroup'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilterGroup'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/filters/:
    get:
      operationId: list_database_table_view_filters
      description: Lists all filters of the view related to the provided `view_id`. A view can have multiple
        filters. When all the rows are requested for the view only those that apply to the filters are
        returned.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only filters of the view related to the provided value.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViewFilter'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_filter
      description: Creates a new filter for the view related to the provided `view_id` parameter. When
        the rows of a view are requested, for example via the `list_database_table_grid_view_rows` endpoint,
        then only the rows that apply to all the filters are going to be returned. A filter compares the
        value of a field to the value of a filter. It depends on the type how values are going to be compared.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a filter for the view related to the provided value.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewFilter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewFilter'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilter'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_FILTER_NOT_SUPPORTED
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/group_bys/:
    get:
      operationId: list_database_table_view_groupings
      description: Lists all groupings of the view related to the provided `view_id` if the user has access
        to the related database's workspace. A view can have multiple groupings.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only groupings of the view related to the provided value.
        required: true
      tags:
      - Database table view groupings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViewGroupBy'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_group
      description: Creates a new group by for the view related to the provided `view_id` parameter if
        the authorized user has access to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a group by for the view related to the provided value.
        required: true
      tags:
      - Database table view groupings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewGroupBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewGroupBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewGroupBy'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGroupBy'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_VIEW_GROUP_BY_NOT_SUPPORTED
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS
                    - ERROR_VIEW_GROUP_BY_FIELD_NOT_SUPPORTED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/rotate-slug/:
    post:
      operationId: rotate_database_view_slug
      description: Rotates the unique slug of the view by replacing it with a new value. This would mean
        that the publicly shared URL of the view will change. Anyone with the old URL won't be able to
        access the viewanymore. Only view types which are sharable can have their slugs rotated.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Rotates the slug of the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_SHARE_VIEW_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/{view_id}/sortings/:
    get:
      operationId: list_database_table_view_sortings
      description: Lists all sortings of the view related to the provided `view_id` if the user has access
        to the related database's workspace. A view can have multiple sortings. When all the rows are
        requested they will be in the desired order.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only sortings of the view related to the provided value.
        required: true
      tags:
      - Database table view sortings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViewSort'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_sort
      description: Creates a new sort for the view related to the provided `view_id` parameter if the
        authorized user has access to the related database's workspace. When the rows of a view are requested,
        for example via the `list_database_table_grid_view_rows` endpoint, they will be returned in the
        respected order defined by all the sortings.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a sort for the view related to the provided value.
        required: true
      tags:
      - Database table view sortings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateViewSort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateViewSort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateViewSort'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSort'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_VIEW_SORT_NOT_SUPPORTED
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS
                    - ERROR_VIEW_SORT_FIELD_NOT_SUPPORTED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/calendar/{ical_slug}.ics:
    get:
      operationId: calendar_ical_feed
      description: Returns ICal feed for a specific Calendar view identified by ical_slug value. Calendar
        View resource contains full url in .ical_feed_url field.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: path
        name: ical_slug
        schema:
          type: string
        description: ICal feed unique slug.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            text/calendar:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/calendar/{slug}/public/rows/:
    get:
      operationId: public_list_database_table_calendar_view_rows
      description: "Responds with serialized rows grouped by the view's date field options related to\
        \ the `slug` if the calendar view is publicly shared. Additional query parameters can be provided\
        \ to control the `limit` and `offset` per select option. \n\nThis is a **premium** feature."
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: from_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows per day should be returned by default. This value can be overwritten
          per select option.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines from which offset the rows should be returned.This value can be overwritten
          per select option.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      - in: query
        name: to_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: user_timezone
        schema:
          type: string
          default: UTC
        description: 'User''s timezone will be taken into account for date fieldtypes that have a time
          and don''t enforce a timezone. The timezone will be used for aggregating the dates. For date
          fields without a time this will be ignored and UTC will be forced. '
      tags:
      - Database table calendar view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarViewExampleResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/calendar/{view_id}/:
    get:
      operationId: list_database_table_calendar_view_rows
      description: 'Responds with serialized rows grouped by date regarding view''s date fieldif the user
        is authenticated and has access to the related workspace.


        This is a **premium** feature.'
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n\n\n**Please note that by passing the filter parameters the view filters saved for the\
          \ view itself will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**\n\n**Please note that by passing the\
          \ filters parameter the view filters saved for the view itself will be ignored.**"
      - in: query
        name: from_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` and `row_metadata`
          which will add the object/objects with the same name to the response if included. The `field_options`
          object contains user defined view settings for each field. For example the field's width is
          included in here. The `row_metadata` object includes extra row specific data on a per row basis.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows per day should be returned by default. This value can be overwritten
          per select option.
      - in: query
        name: offset
        schema:
          type: integer
          default: 0
        description: Defines from which offset the rows should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: to_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: user_timezone
        schema:
          type: string
          default: UTC
        description: 'User''s timezone will be taken into account for date fieldtypes that have a time
          and don''t enforce a timezone. The timezone will be used for aggregating the dates. For date
          fields without a time this will be ignored and UTC will be forced. '
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table calendar view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarViewExampleResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/calendar/{view_id}/ical_slug_rotate/:
    post:
      operationId: rotate_calendar_view_ical_feed_slug
      description: Rotates the unique slug of the calendar view's ical feed by replacing it with a new
        value. This would mean that the publicly shared URL of the view will change. Anyone with the old
        URL won't be able to access the view anymore.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Rotates the ical feed slug of the calendar view related to the provided id.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_SHARE_VIEW_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/decoration/{view_decoration_id}/:
    get:
      operationId: get_database_table_view_decoration
      description: Returns the existing view decoration if the current user has access to the related
        database's workspace.
      parameters:
      - in: path
        name: view_decoration_id
        schema:
          type: integer
        description: Returns the view decoration related to the provided id.
        required: true
      tags:
      - Database table view decorations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decorator_Value_Provider_TypeViewDecoration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_decoration
      description: Updates the existing decoration if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_decoration_id
        schema:
          type: integer
        description: Updates the view decoration related to the provided value.
        required: true
      tags:
      - Database table view decorations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decorator_Value_Provider_TypeViewDecoration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_decoration
      description: Deletes the existing decoration if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_decoration_id
        schema:
          type: integer
        description: Deletes the decoration related to the provided value.
        required: true
      tags:
      - Database table view decorations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/filter-group/{filter_group_id}/:
    get:
      operationId: get_database_table_view_filter_group
      description: Returns the existing view filter group with the given `view_filter_group_id`.
      parameters:
      - in: path
        name: filter_group_id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: view_filter_group_id
        schema:
          type: integer
        description: Teh ID of the view filter group to return.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilterGroup'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_filter_group
      description: Updates the existing filter group with the given `view_filter_group_id`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: filter_group_id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: view_filter_group_id
        schema:
          type: integer
        description: The ID of the view filter group to update.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilterGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilterGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilterGroup'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilterGroup'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_filter_group
      description: Deletes the existing filter group with the given `view_filter_group_id`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: filter_group_id
        schema:
          type: string
          pattern: ^[0-9]+$
        required: true
      - in: path
        name: view_filter_group_id
        schema:
          type: integer
        description: The ID of the view filter group to delete.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/filter/{view_filter_id}/:
    get:
      operationId: get_database_table_view_filter
      description: Returns the existing view filter.
      parameters:
      - in: path
        name: view_filter_id
        schema:
          type: integer
        description: The ID of the view filter to return.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilter'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_filter
      description: Updates the existing filter.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_filter_id
        schema:
          type: integer
        description: The ID of the view filter to update.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewFilter'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewFilter'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_FILTER_NOT_SUPPORTED
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_filter
      description: Deletes the existing filter if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_filter_id
        schema:
          type: integer
        description: The ID of the view filter to delete.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/form/{slug}/submit/:
    get:
      operationId: get_meta_database_table_form_view
      description: Returns the metadata related to the form view if the form is publicly shared or if
        the user has access to the related workspace. This data can be used to construct a form with the
        right fields.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug related to the form form.
        required: true
      tags:
      - Database table form view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicFormView'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FORM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: submit_database_table_form_view
      description: Submits the form if the form is publicly shared or if the user has access to the related
        workspace. The provided data will be validated based on the fields that are in the form and the
        rules per field. If valid, a new row will be created in the table.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug related to the form.
        required: true
      tags:
      - Database table form view
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExampleRowRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExampleRowRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExampleRowRequest'
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormViewSubmitted'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FORM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/form/{slug}/upload-file/:
    post:
      operationId: upload_file_form_view
      description: Uploads a file anonymously to Baserow by uploading the file contents directly. A `file`
        multipart is expected containing the file contents.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: Submits files only if the view with the provided slughas a public file field.
        required: true
      tags:
      - Database table form view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_FILE
                    - ERROR_FILE_SIZE_TOO_LARGE
                    - ERROR_VIEW_HAS_NO_PUBLIC_FILE_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/gallery/{slug}/public/rows/:
    get:
      operationId: public_list_database_table_gallery_view_rows
      description: 'Lists the requested rows of the view''s table related to the provided `slug` if the
        gallery view is public.The response is paginated either by a limit/offset or page/size style.
        The style depends on the provided GET parameters. The properties of the returned rows depends
        on which fields the table has. For a complete overview of fields use the **list_database_table_fields**
        endpoint to list them all. In the example all field types are listed, but normally the number
        in field_{id} key is going to be the id of the field. The value is what the user has provided
        and the format of it depends on the fields type.


        '
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the exclude_fields query parameter. If you for example provide the following
          GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going
          to be excluded from the selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` which will add the
          object/objects with the same name to the response if included. The `field_options` object contains
          user defined view settings for each field. For example the field's width is included in here.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can select a subset of
          fields by providing the fields query parameter. If you for example provide the following GET
          parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going
          to be selected and included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and defines from which
          offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated by comma. By default
          a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be
          ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page` or `limit` can be
          provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and defines how many rows
          should be returned.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table gallery view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GALLERY_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/gallery/{view_id}/:
    get:
      operationId: list_database_table_gallery_view_rows
      description: Lists the requested rows of the view's table related to the provided `view_id` if the
        authorized user has access to the database's workspace. The response is paginated by a limit/offset
        style.
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n\n\n**Please note that by passing the filter parameters the view filters saved for the\
          \ view itself will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**\n\n**Please note that by passing the\
          \ filters parameter the view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` and `row_metadata`
          which will add the object/objects with the same name to the response if included. The `field_options`
          object contains user defined view settings for each field. For example the field's width is
          included in here. The `row_metadata` object includes extra row specific data on a per row basis.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and defines from which
          offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated by comma. By default
          a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be
          ordered descending (Z-A).
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table gallery view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GALLERY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/grid/{slug}/public/aggregations/:
    get:
      operationId: get_database_table_public_grid_view_field_aggregations
      description: Returns all field aggregations values previously defined for this grid view. If filters
        exist for this view, the aggregations are computed only on filtered rows.
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The aggregation can optionally be filtered by the same view filters available for\
          \ the views. Multiple filters can be provided if they follow the same format. The field and\
          \ filter variable indicate how to filter and the value indicates where to filter on.\n\nFor\
          \ example if you provide the following GET parameter `filter__field_1__equal=test` then only\
          \ rows where the value of field_1 is equal to test are going to be returned.\n\nThe following\
          \ filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type,\
          \ contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than,\
          \ higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,\
          \ date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal,\
          \ date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks,\
          \ date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,\
          \ date_equals_month, date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,\
          \ date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within, single_select_equal,\
          \ single_select_not_equal, single_select_is_any_of, single_select_is_none_of, link_row_has,\
          \ link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has,\
          \ multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is,\
          \ user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
          \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
          \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
          \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,\
          \ has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal,\
          \ has_date_before, has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the aggregated rows must match all the provided filters.


          `OR`: Indicates that the aggregated rows only have to match one of the filters.


          '
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply for the aggregation.\
          \ The filter tree is a nested structure containing the filters that need to be applied. \n\n\
          An example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\":\
          \ [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the\
          \ ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\n\
          The following filters are available: equal, not_equal, filename_contains, files_lower_than,\
          \ has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,\
          \ higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal,\
          \ date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal,\
          \ date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks,\
          \ date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,\
          \ date_equals_month, date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,\
          \ date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within, single_select_equal,\
          \ single_select_not_equal, single_select_is_any_of, single_select_is_none_of, link_row_has,\
          \ link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has,\
          \ multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is,\
          \ user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
          \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
          \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
          \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,\
          \ has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal,\
          \ has_date_before, has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: if `include` is set to `total`, the total row count will be returned with the result.
      - in: query
        name: search
        schema:
          type: string
        description: If provided the aggregations are calculated only for matching rows.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: slug
        schema:
          type: string
        description: Select the view you want the aggregations for.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_{id}:
                    anyOf:
                    - type: number
                      description: The aggregation result for the field with id {id}.
                      example: 5
                    - type: string
                      description: The aggregation result for the field with id {id}.
                    - type: array
                      items: {}
                      description: The aggregation result for the field with id {id}.
                    - type: object
                      description: The aggregation result for the field with id {id}.
                  total:
                    type: integer
                    description: The total value count. Only returned if `include=total` is specified
                      as GET parameter.
                    example: 7
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/grid/{slug}/public/rows/:
    get:
      operationId: public_list_database_table_grid_view_rows
      description: 'Lists the requested rows of the view''s table related to the provided `slug` if the
        grid view is public.The response is paginated either by a limit/offset or page/size style. The
        style depends on the provided GET parameters. The properties of the returned rows depends on which
        fields the table has. For a complete overview of fields use the **list_database_table_fields**
        endpoint to list them all. In the example all field types are listed, but normally the number
        in field_{id} key is going to be the id of the field. The value is what the user has provided
        and the format of it depends on the fields type.


        '
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the exclude_fields query parameter. If you for example provide the following
          GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going
          to be excluded from the selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: group_by
        schema:
          type: string
        description: Optionally the rows can be grouped by provided field ids separated by comma. By default
          no groups are applied. This doesn't actually responds with the rows groups, this is just what's
          needed for the Baserow group by feature.
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` which will add the
          object/objects with the same name to the response if included. The `field_options` object contains
          user defined view settings for each field. For example the field's width is included in here.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can select a subset of
          fields by providing the fields query parameter. If you for example provide the following GET
          parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going
          to be selected and included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and defines from which
          offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated by comma. By default
          a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be
          ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page` or `limit` can be
          provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and defines how many rows
          should be returned.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/grid/{view_id}/:
    get:
      operationId: list_database_table_grid_view_rows
      description: 'Lists the requested rows of the view''s table related to the provided `view_id` if
        the authorized user has access to the database''s workspace. The response is paginated either
        by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties
        of the returned rows depends on which fields the table has. For a complete overview of fields
        use the **list_database_table_fields** endpoint to list them all. In the example all field types
        are listed, but normally the number in field_{id} key is going to be the id of the field. The
        value is what the user has provided and the format of it depends on the fields type.


        The filters and sortings are automatically applied. To get a full overview of the applied filters
        and sortings you can use the `list_database_table_view_filters` and `list_database_table_view_sortings`
        endpoints.'
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the exclude_fields query parameter. If you for example provide the following
          GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going
          to be excluded from the selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n\n\n**Please note that by passing the filter parameters the view filters saved for the\
          \ view itself will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**\n\n**Please note that by passing the\
          \ filters parameter the view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` and `row_metadata`
          which will add the object/objects with the same name to the response if included. The `field_options`
          object contains user defined view settings for each field. For example the field's width is
          included in here. The `row_metadata` object includes extra row specific data on a per row basis.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can select a subset of
          fields by providing the fields query parameter. If you for example provide the following GET
          parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going
          to be selected and included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and defines from which
          offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated by comma. By default
          a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be
          ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page` or `limit` can be
          provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and defines how many rows
          should be returned.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerWithGridViewFieldOptionsExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: filter_database_table_grid_view_rows
      description: Lists only the rows and fields that match the request. Only the rows with the ids that
        are in the `row_ids` list are going to be returned. Same goes for the fields, only the fields
        with the ids in the `field_ids` are going to be returned. This endpoint could be used to refresh
        data after changes something. For example in the web frontend after changing a field type, the
        data of the related cells will be refreshed using this endpoint. In the example all field types
        are listed, but normally  the number in field_{id} key is going to be the id of the field. The
        value is what the user has provided and the format of it depends on the fields type.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table grid view
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GridViewFilter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GridViewFilter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GridViewFilter'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/grid/{view_id}/aggregation/{field_id}/:
    get:
      operationId: get_database_table_grid_view_field_aggregation
      description: Computes the aggregation of all the values for a specified field from the selected
        grid view. You must select the aggregation type by setting the `type` GET parameter. If filters
        are configured for the selected view, the aggregation is calculated only on filtered rows. You
        need to have read permissions on the view to request an aggregation.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field id you want to aggregate
        required: true
      - in: query
        name: include
        schema:
          type: string
        description: if `include` is set to `total`, the total row count will be returned with the result.
      - in: query
        name: type
        schema:
          type: string
        description: 'The aggregation type you want. Available aggregation types: count, empty_count,
          not_empty_count, unique_count, min, max, sum, average, median, decile, variance, std_dev, distribution'
      - in: path
        name: view_id
        schema:
          type: integer
        description: Select the view you want the aggregation for.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    anyOf:
                    - type: number
                      description: The aggregation result for the specified field.
                      example: 5
                    - type: string
                      description: The aggregation result for the specified field.
                    - type: array
                      items: {}
                      description: The aggregation result for the specified field.
                    - type: object
                      description: The aggregation result for the specified field.
                  total:
                    type: integer
                    description: The total value count. Only returned if `include=total` is specified
                      as GET parameter.
                    example: 7
                required:
                - value
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_AGGREGATION_TYPE_DOES_NOT_EXIST
                    - ERROR_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/grid/{view_id}/aggregations/:
    get:
      operationId: get_database_table_grid_view_field_aggregations
      description: Returns all field aggregations values previously defined for this grid view. If filters
        exist for this view, the aggregations are computed only on filtered rows.You need to have read
        permissions on the view to request aggregations.
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The aggregation can optionally be filtered by the same view filters available for\
          \ the views. Multiple filters can be provided if they follow the same format. The field and\
          \ filter variable indicate how to filter and the value indicates where to filter on.\n\nFor\
          \ example if you provide the following GET parameter `filter__field_1__equal=test` then only\
          \ rows where the value of field_1 is equal to test are going to be returned.\n\nThe following\
          \ filters are available: equal, not_equal, filename_contains, files_lower_than, has_file_type,\
          \ contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than,\
          \ higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,\
          \ date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal,\
          \ date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks,\
          \ date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,\
          \ date_equals_month, date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,\
          \ date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within, single_select_equal,\
          \ single_select_not_equal, single_select_is_any_of, single_select_is_none_of, link_row_has,\
          \ link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has,\
          \ multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is,\
          \ user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
          \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
          \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
          \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,\
          \ has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal,\
          \ has_date_before, has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n\n\n**Please note that by passing the filter parameters the view filters saved for the\
          \ view itself will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the aggregated rows must match all the provided filters.


          `OR`: Indicates that the aggregated rows only have to match one of the filters.


          '
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply for the aggregation.\
          \ The filter tree is a nested structure containing the filters that need to be applied. \n\n\
          An example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\":\
          \ [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the\
          \ ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\n\
          The following filters are available: equal, not_equal, filename_contains, files_lower_than,\
          \ has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,\
          \ higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal,\
          \ date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal, date_not_equal,\
          \ date_equals_today, date_before_today, date_after_today, date_within_days, date_within_weeks,\
          \ date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,\
          \ date_equals_month, date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,\
          \ date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within, single_select_equal,\
          \ single_select_not_equal, single_select_is_any_of, single_select_is_none_of, link_row_has,\
          \ link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty, not_empty, multiple_select_has,\
          \ multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not, user_is,\
          \ user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
          \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
          \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
          \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,\
          \ has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal,\
          \ has_date_before, has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**\n\n**Please note that by passing the\
          \ filters parameter the view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: if `include` is set to `total`, the total row count will be returned with the result.
      - in: query
        name: search
        schema:
          type: string
        description: If provided the aggregations are calculated only for matching rows.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Select the view you want the aggregations for.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_{id}:
                    anyOf:
                    - type: number
                      description: The aggregation result for the field with id {id}.
                      example: 5
                    - type: string
                      description: The aggregation result for the field with id {id}.
                    - type: array
                      items: {}
                      description: The aggregation result for the field with id {id}.
                    - type: object
                      description: The aggregation result for the field with id {id}.
                  total:
                    type: integer
                    description: The total value count. Only returned if `include=total` is specified
                      as GET parameter.
                    example: 7
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/group_by/{view_group_by_id}/:
    get:
      operationId: get_database_table_view_group
      description: Returns the existing view group by if the authorized user has access to the related
        database's workspace.
      parameters:
      - in: path
        name: view_group_by_id
        schema:
          type: integer
        description: Returns the view group by related to the provided value.
        required: true
      tags:
      - Database table view groupings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGroupBy'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_group
      description: Updates the existing group by if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_group_by_id
        schema:
          type: integer
        description: Updates the view group by related to the provided value.
        required: true
      tags:
      - Database table view groupings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewGroupBy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewGroupBy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewGroupBy'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewGroupBy'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_group
      description: Deletes the existing group by if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_group_by_id
        schema:
          type: integer
        description: Deletes the group by related to the provided value.
        required: true
      tags:
      - Database table view groupings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/kanban/{slug}/public/rows/:
    get:
      operationId: public_list_database_table_kanban_view_rows
      description: "Responds with serialized rows grouped by the view's single select field options related\
        \ to the `slug` if the kanban view is publicly shared. Additional query parameters can be provided\
        \ to control the `limit` and `offset` per select option. \n\nThis is a **premium** feature."
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned by default. This value can be overwritten
          per select option.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines from which offset the rows should be returned.This value can be overwritten
          per select option.
      - in: query
        name: select_option
        schema:
          type: string
        description: Accepts multiple `select_option` parameters. If not provided, the rows of all select
          options will be returned. If one or more `select_option` parameters are provided, then only
          the rows of those will be included in the response. `?select_option=1&select_option=null` will
          only include the rows for both select option with id `1` and `null`. `?select_option=1,10,20`
          will only include the rows of select option id `1` with a limit of `10` and and offset of `20`.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table kanban view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KanbanViewExampleResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_KANBAN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/kanban/{view_id}/:
    get:
      operationId: list_database_table_kanban_view_rows
      description: 'Responds with serialized rows grouped by the view''s single select field options if
        the user is authenticated and has access to the related workspace. Additional query parameters
        can be provided to control the `limit` and `offset` per select option.


        This is a **premium** feature.'
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n\n\n**Please note that by passing the filter parameters the view filters saved for the\
          \ view itself will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**\n\n**Please note that by passing the\
          \ filters parameter the view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` and `row_metadata`
          which will add the object/objects with the same name to the response if included. The `field_options`
          object contains user defined view settings for each field. For example the field's width is
          included in here. The `row_metadata` object includes extra row specific data on a per row basis.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned by default. This value can be overwritten
          per select option.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines from which offset the rows should be returned.This value can be overwritten
          per select option.
      - in: query
        name: select_option
        schema:
          type: string
        description: Accepts multiple `select_option` parameters. If not provided, the rows of all select
          options will be returned. If one or more `select_option` parameters are provided, then only
          the rows of those will be included in the response. `?select_option=1&select_option=null` will
          only include the rows for both select option with id `1` and `null`. `?select_option=1,10,20`
          will only include the rows of select option id `1` with a limit of `10` and and offset of `20`.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table kanban view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KanbanViewExampleResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD
                    - ERROR_INVALID_SELECT_OPTION_PARAMETER
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_KANBAN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/sort/{view_sort_id}/:
    get:
      operationId: get_database_table_view_sort
      description: Returns the existing view sort if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: path
        name: view_sort_id
        schema:
          type: integer
        description: Returns the view sort related to the provided value.
        required: true
      tags:
      - Database table view sortings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSort'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_SORT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_sort
      description: Updates the existing sort if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_sort_id
        schema:
          type: integer
        description: Updates the view sort related to the provided value.
        required: true
      tags:
      - Database table view sortings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewSort'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewSort'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateViewSort'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewSort'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_SORT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_sort
      description: Deletes the existing sort if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: view_sort_id
        schema:
          type: integer
        description: Deletes the sort related to the provided value.
        required: true
      tags:
      - Database table view sortings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_SORT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/table/{table_id}/:
    get:
      operationId: list_database_table_views
      description: Lists all views of the table related to the provided `table_id`. If the workspace is
        related to a template, then this endpoint will be publicly accessible. A table can have multiple
        views. Each view can display the data in a different way. For example the `grid` view shows the
        in a spreadsheet like way. That type has custom endpoints for data retrieval and manipulation.
        In the future other views types like a calendar or Kanban are going to be added. Each type can
        have different properties.
      parameters:
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on each view in the response.
          The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings`
          will add the attributes `filters` and `sortings` to every returned view, containing a list of
          the views filters and sortings respectively.
      - in: query
        name: limit
        schema:
          type: integer
        description: The maximum amount of views that must be returned. This endpoint doesn't support
          pagination, but if you for example just need to fetch the first view, you can do that by setting
          a limit. There isn't a limit by default.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns only views of the table related to the provided value.
        required: true
      - in: query
        name: type
        schema:
          type: string
        description: Optionally filter on the view type. If provided, only views of that type will be
          returned.
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view
      description: Creates a new view for the table related to the provided `table_id` parameter. Depending
        on the type, different properties can optionally be set.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on each view in the response.
          The supported attributes are `filters`, `sortings` and `decorations`. For example `include=filters,sortings`
          will add the attributes `filters` and `sortings` to every returned view, containing a list of
          the views filters and sortings respectively.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a view for the table related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ViewCreateView'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ViewCreateView'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ViewCreateView'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViewView'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/table/{table_id}/order/:
    post:
      operationId: order_database_table_views
      description: Changes the order of the provided view ids to the matching position that the id has
        in the list. The order of the not provided views will be set to `0`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular client session. Then using the undo/redo endpoints with the same ClientSessionId
          header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request as having occurred
          in a particular action group.Then calling the undo/redo endpoint with the same ClientSessionId
          header, all the actions belonging to the same action group can be undone/redone together in
          a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the order of the views in the table related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderViews'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderViews'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderViews'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_VIEW_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/timeline/{slug}/public/rows/:
    get:
      operationId: public_list_database_table_timeline_view_rows
      description: 'Lists the requested rows of the view''s table related to the provided `slug` if the
        timeline view is public.The response is paginated either by a limit/offset or page/size style.
        The style depends on the provided GET parameters. The properties of the returned rows depends
        on which fields the table has. For a complete overview of fields use the **list_database_table_fields**
        endpoint to list them all. In the example all field types are listed, but normally the number
        in field_{id} key is going to be the id of the field. The value is what the user has provided
        and the format of it depends on the fields type.


        '
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the exclude_fields query parameter. If you for example provide the following
          GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going
          to be excluded from the selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` which will add the
          object/objects with the same name to the response if included. The `field_options` object contains
          user defined view settings for each field. For example the field's width is included in here.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can select a subset of
          fields by providing the fields query parameter. If you for example provide the following GET
          parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going
          to be selected and included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and defines from which
          offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated by comma. By default
          a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be
          ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page` or `limit` can be
          provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and defines how many rows
          should be returned.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table timeline view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicPaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TIMELINE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/views/timeline/{view_id}/:
    get:
      operationId: list_database_table_timeline_view_rows
      description: 'Lists the requested rows of the view''s table related to the provided `view_id` if
        the authorized user has access to the database''s workspace. The response is paginated either
        by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties
        of the returned rows depends on which fields the table has. For a complete overview of fields
        use the **list_database_table_fields** endpoint to list them all. In the example all field types
        are listed, but normally the number in field_{id} key is going to be the id of the field. The
        value is what the user has provided and the format of it depends on the fields type.


        The filters and sortings are automatically applied. To get a full overview of the applied filters
        and sortings you can use the `list_database_table_view_filters` and `list_database_table_view_sortings`
        endpoints.


        This is a **premium** feature.'
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You can select a subset
          of fields by providing the exclude_fields query parameter. If you for example provide the following
          GET parameter `exclude_fields=field_1,field_2` then the fields with id `1` and id `2` are going
          to be excluded from the selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters available for the views.\
          \ Multiple filters can be provided if they follow the same format. The field and filter variable\
          \ indicate how to filter and the value indicates where to filter on.\n\nFor example if you provide\
          \ the following GET parameter `filter__field_1__equal=test` then only rows where the value of\
          \ field_1 is equal to test are going to be returned.\n\nThe following filters are available:\
          \ equal, not_equal, filename_contains, files_lower_than, has_file_type, contains, contains_not,\
          \ contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if the `filters` parameter is provided, this parameter will be ignored.**\
          \ \n\n\n\n**Please note that by passing the filter parameters the view filters saved for the\
          \ view itself will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: '`AND`: Indicates that the rows must match all the provided filters.


          `OR`: Indicates that the rows only have to match one of the filters.


          This works only if two or more filters are provided.


          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**'
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply to this view. The filter\
          \ tree is a nested structure containing the filters that need to be applied. \n\nAn example\
          \ of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\"\
          : 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of the field\
          \ to filter on, or the name of the field if `user_field_names` is true.\n\nThe following filters\
          \ are available: equal, not_equal, filename_contains, files_lower_than, has_file_type, contains,\
          \ contains_not, contains_word, doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,\
          \ lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before, date_before_or_equal,\
          \ date_after_days_ago, date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,\
          \ date_after_today, date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,\
          \ date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month, date_equals_day_of_month,\
          \ date_equals_year, date_is, date_is_not, date_is_before, date_is_on_or_before, date_is_after,\
          \ date_is_on_or_after, date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,\
          \ single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,\
          \ boolean, empty, not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has,\
          \ multiple_collaborators_has_not, user_is, user_is_not, has_value_equal, has_not_value_equal,\
          \ has_value_contains, has_not_value_contains, has_value_contains_word, has_not_value_contains_word,\
          \ has_value_length_is_lower_than, has_all_values_equal, has_empty_value, has_not_empty_value,\
          \ has_any_select_option_equal, has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,\
          \ has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal, has_not_value_higher,\
          \ has_not_value_lower_or_equal, has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,\
          \ has_not_date_before, has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,\
          \ has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within, has_not_date_within.\n\
          \n**Please note that if this parameter is provided, all other `filter__{field}__{filter}` will\
          \ be ignored, as well as the `filter_type` parameter.**\n\n**Please note that by passing the\
          \ filters parameter the view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options` and `row_metadata`
          which will add the object/objects with the same name to the response if included. The `field_options`
          object contains user defined view settings for each field. For example the field's width is
          included in here. The `row_metadata` object includes extra row specific data on a per row basis.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can select a subset of
          fields by providing the fields query parameter. If you for example provide the following GET
          parameter `include_fields=field_1,field_2` then only the fields with id `1` and id `2` are going
          to be selected and included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and defines from which
          offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated by comma. By default
          a field is ordered in ascending (A-Z) order, but by prepending the field with a '-' it can be
          ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page` or `limit` can be
          provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search experience they
          wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT` is used, then Postgres full-text
          search is used. If `SearchModes.MODE_COMPAT` is provided then the search term will be exactly
          searched for including whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and defines how many rows
          should be returned.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table timeline view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TIMELINE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/webhooks/{webhook_id}/:
    get:
      operationId: get_database_table_webhook
      description: Returns the existing webhook if the authorized user has access to the related database
        workspace.
      parameters:
      - in: path
        name: webhook_id
        schema:
          type: integer
        description: Returns the webhook related to the provided value.
        required: true
      tags:
      - Database table webhooks
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_webhook
      description: Updates the existing view if the authorized user has access to the related database
        workspace.
      parameters:
      - in: path
        name: webhook_id
        schema:
          type: integer
        description: Updates the webhook related to the provided value.
        required: true
      tags:
      - Database table webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTableWebhookUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTableWebhookUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTableWebhookUpdateRequest'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_webhook
      description: Deletes the existing webhook if the authorized user has access to the related database's
        workspace.
      parameters:
      - in: path
        name: webhook_id
        schema:
          type: integer
        description: Deletes the webhook related to the provided value.
        required: true
      tags:
      - Database table webhooks
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/webhooks/table/{table_id}/:
    get:
      operationId: list_database_table_webhooks
      description: Lists all webhooks of the table related to the provided `table_id` if the user has
        access to the related database workspace.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns only webhooks of the table related to this value.
        required: true
      tags:
      - Database table webhooks
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TableWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_webhook
      description: Creates a new webhook for the table related to the provided `table_id` parameter if
        the authorized user has access to the related database workspace.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a webhook for the table related to the provided value.
        required: true
      tags:
      - Database table webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableWebhookCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableWebhookCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableWebhookCreateRequest'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhook'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TABLE_WEBHOOK_MAX_LIMIT_EXCEEDED
                    - ERROR_TABLE_WEBHOOK_EVENT_CONFIG_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  /api/database/webhooks/table/{table_id}/test-call/:
    post:
      operationId: test_call_database_table_webhook
      description: This endpoint triggers a test call based on the provided data if the user has access
        to the workspace related to the table. The test call will be made immediately and a copy of the
        request, response and status will be included in the response.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The id of the table that must be tested.
        required: true
      tags:
      - Database table webhooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableWebhookTestCallRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableWebhookTestCallRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableWebhookTestCallRequest'
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableWebhookTestCallResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
components:
  schemas:
    ExampleBatchRowsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames'
          maxItems: 200
          minItems: 1
      required:
      - items
    FormViewSubmitted:
      type: object
      properties:
        submit_action:
          allOf:
          - $ref: '#/components/schemas/SubmitActionEnum'
          description: 'The action that must be performed after the visitor has filled out the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect'
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be shown to the visitor
            after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be redirected to the
            this URL after submitting the form.
          maxLength: 2000
        row_id:
          type: integer
      required:
      - row_id
    PatchedData_SyncUpdateDataSync:
      oneOf:
      - $ref: '#/components/schemas/ICalCalendarDataSyncUpdateDataSync'
      - $ref: '#/components/schemas/PostgreSQLDataSyncUpdateDataSync'
      - $ref: '#/components/schemas/LocalBaserowTableDataSyncUpdateDataSync'
      - $ref: '#/components/schemas/JiraIssuesDataSyncUpdateDataSync'
      - $ref: '#/components/schemas/GitHubIssuesDataSyncUpdateDataSync'
      - $ref: '#/components/schemas/GitLabIssuesDataSyncUpdateDataSync'
      - $ref: '#/components/schemas/HubSpotContactsDataSyncUpdateDataSync'
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: '#/components/schemas/ICalCalendarDataSyncUpdateDataSync'
          postgresql: '#/components/schemas/PostgreSQLDataSyncUpdateDataSync'
          local_baserow_table: '#/components/schemas/LocalBaserowTableDataSyncUpdateDataSync'
          jira_issues: '#/components/schemas/JiraIssuesDataSyncUpdateDataSync'
          github_issues: '#/components/schemas/GitHubIssuesDataSyncUpdateDataSync'
          gitlab_issues: '#/components/schemas/GitLabIssuesDataSyncUpdateDataSync'
          hubspot_contacts: '#/components/schemas/HubSpotContactsDataSyncUpdateDataSync'
    DuplicateFieldJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_field:
          allOf:
          - $ref: '#/components/schemas/Field'
          readOnly: true
        duplicated_field:
          allOf:
          - $ref: '#/components/schemas/FieldSerializerWithRelatedFields'
          readOnly: true
      required:
      - duplicated_field
      - id
      - original_field
      - progress_percentage
      - state
      - type
    ExampleRowResponseSerializerWithUserFieldNames:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the row in the table.
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          description: Indicates the position of the row, lowest first and highest last.
        metadata:
          allOf:
          - $ref: '#/components/schemas/RowMetadata'
          description: Additional metadata for the row, if `include=metadata' is provided as query parameter.
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in field_2 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
          description: 'This field represents the `number` field. The number in field_5 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_9:
          type: string
          format: date-time
          description: 'This field represents the `last_modified` field. The number in field_9 is in a
            normal request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_10:
          allOf:
          - $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `last_modified_by` field. The number in field_10 is
            in a normal request or response the id of the field. If the GET parameter user_field_names
            is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
            empty, then the key will instead be the actual name of the field. '
        field_11:
          type: string
          format: date-time
          description: 'This field represents the `created_on` field. The number in field_11 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_12:
          allOf:
          - $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `created_by` field. The number in field_12 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in field_13 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. The provided value can be a string in
            one of the available formats or a number representing the duration in seconds. In any case,
            the value will be rounded to match the field''s duration format.'
        field_14:
          type: array
          items:
            $ref: '#/components/schemas/LinkRowValue'
          description: 'This field represents the `link_row` field. The number in field_14 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            the ids or the names of the related rows. A name is the value of the primary key of the related
            row. This field also accepts a string with names separated by a comma or an array of row names.
            You can also provide a unique row Id.The response contains a list of objects containing the
            `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items:
            $ref: '#/components/schemas/FileFieldResponse'
          description: 'This field represents the `file` field. The number in field_15 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of more detailed objects
            related to the files.'
        field_16:
          allOf:
          - $ref: '#/components/schemas/SelectOption'
          nullable: true
          description: 'This field represents the `single_select` field. The number in field_16 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts an `integer`
            representing the chosen select option id related to the field. Available ids can be found
            when getting or listing the field. The response represents chosen field, but also the value
            and color is exposed.'
        field_17:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          nullable: true
          description: 'This field represents the `multiple_select` field. The number in field_17 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts a list of `integer`
            each of which representing the chosen select option id related to the field. Available ids
            can be foundwhen getting or listing the field. You can also send a list of option names in
            which case the option are searched by name. The first one that matches is used. This field
            also accepts a string with names separated by a comma or an array of file names. The response
            represents chosen field, but also the value and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number in field_18 is in a
            normal request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 100
        field_19:
          type: string
          nullable: true
          description: 'This field represents the `formula` field. The number in field_19 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_20:
          type: string
          nullable: true
          description: 'This field represents the `count` field. The number in field_20 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_21:
          type: string
          nullable: true
          description: 'This field represents the `rollup` field. The number in field_21 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_22:
          type: string
          nullable: true
          description: 'This field represents the `lookup` field. The number in field_22 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_23:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `multiple_collaborators` field. The number in field_23
            is in a normal request or response the id of the field. If the GET parameter user_field_names
            is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
            empty, then the key will instead be the actual name of the field. This field accepts a list
            of objects representing the chosen collaborators through the object''s `id` property. The
            id is Baserow user id. The response objects also contains the collaborator name directly along
            with its id.'
        field_24:
          type: string
          format: uuid
          description: 'This field represents the `uuid` field. The number in field_24 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. Contains a unique and persistent UUID
            for every row.'
        field_25:
          type: integer
          description: 'This field represents the `autonumber` field. The number in field_25 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. Contains a unique and persistent incremental
            integer number for every row.'
        field_26:
          type: boolean
          description: 'This field represents the `password` field. The number in field_26 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. Allows setting a write only password
            value. Providing a string will set the password, `null` will unset it, `true` will be ignored.
            The response will respond with `true` is a password is set, but will never expose the password
            itself.'
        field_27:
          type: string
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
      required:
      - id
    ExampleRowResponse:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the row in the table.
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
          description: Indicates the position of the row, lowest first and highest last.
        metadata:
          allOf:
          - $ref: '#/components/schemas/RowMetadata'
          description: Additional metadata for the row, if `include=metadata' is provided as query parameter.
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1 is in a normal request
            or response the id of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in field_2 is in a normal
            request or response the id of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3 is in a normal request
            or response the id of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4 is in a normal
            request or response the id of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
          description: 'This field represents the `number` field. The number in field_5 is in a normal
            request or response the id of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6 is in a normal
            request or response the id of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7 is in a normal
            request or response the id of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8 is in a normal request
            or response the id of the field. '
        field_9:
          type: string
          format: date-time
          description: 'This field represents the `last_modified` field. The number in field_9 is in a
            normal request or response the id of the field. '
        field_10:
          allOf:
          - $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `last_modified_by` field. The number in field_10 is
            in a normal request or response the id of the field. '
        field_11:
          type: string
          format: date-time
          description: 'This field represents the `created_on` field. The number in field_11 is in a normal
            request or response the id of the field. '
        field_12:
          allOf:
          - $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `created_by` field. The number in field_12 is in a normal
            request or response the id of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: This field represents the `duration` field. The number in field_13 is in a normal
            request or response the id of the field. The provided value can be a string in one of the
            available formats or a number representing the duration in seconds. In any case, the value
            will be rounded to match the field's duration format.
        field_14:
          type: array
          items:
            $ref: '#/components/schemas/LinkRowValue'
          description: This field represents the `link_row` field. The number in field_14 is in a normal
            request or response the id of the field. This field accepts an `array` containing the ids
            or the names of the related rows. A name is the value of the primary key of the related row.
            This field also accepts a string with names separated by a comma or an array of row names.
            You can also provide a unique row Id.The response contains a list of objects containing the
            `id` and the primary field's `value` as a string for display purposes.
        field_15:
          type: array
          items:
            $ref: '#/components/schemas/FileFieldResponse'
          description: This field represents the `file` field. The number in field_15 is in a normal request
            or response the id of the field. This field accepts an `array` containing objects with the
            name of the file. The response contains an `array` of more detailed objects related to the
            files.
        field_16:
          allOf:
          - $ref: '#/components/schemas/SelectOption'
          nullable: true
          description: This field represents the `single_select` field. The number in field_16 is in a
            normal request or response the id of the field. This field accepts an `integer` representing
            the chosen select option id related to the field. Available ids can be found when getting
            or listing the field. The response represents chosen field, but also the value and color is
            exposed.
        field_17:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          nullable: true
          description: This field represents the `multiple_select` field. The number in field_17 is in
            a normal request or response the id of the field. This field accepts a list of `integer` each
            of which representing the chosen select option id related to the field. Available ids can
            be foundwhen getting or listing the field. You can also send a list of option names in which
            case the option are searched by name. The first one that matches is used. This field also
            accepts a string with names separated by a comma or an array of file names. The response represents
            chosen field, but also the value and color is exposed.
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number in field_18 is in a
            normal request or response the id of the field. '
          maxLength: 100
        field_19:
          type: string
          nullable: true
          description: 'This field represents the `formula` field. The number in field_19 is in a normal
            request or response the id of the field. '
        field_20:
          type: string
          nullable: true
          description: 'This field represents the `count` field. The number in field_20 is in a normal
            request or response the id of the field. '
        field_21:
          type: string
          nullable: true
          description: 'This field represents the `rollup` field. The number in field_21 is in a normal
            request or response the id of the field. '
        field_22:
          type: string
          nullable: true
          description: 'This field represents the `lookup` field. The number in field_22 is in a normal
            request or response the id of the field. '
        field_23:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          description: This field represents the `multiple_collaborators` field. The number in field_23
            is in a normal request or response the id of the field. This field accepts a list of objects
            representing the chosen collaborators through the object's `id` property. The id is Baserow
            user id. The response objects also contains the collaborator name directly along with its
            id.
        field_24:
          type: string
          format: uuid
          description: This field represents the `uuid` field. The number in field_24 is in a normal request
            or response the id of the field. Contains a unique and persistent UUID for every row.
        field_25:
          type: integer
          description: This field represents the `autonumber` field. The number in field_25 is in a normal
            request or response the id of the field. Contains a unique and persistent incremental integer
            number for every row.
        field_26:
          type: boolean
          description: This field represents the `password` field. The number in field_26 is in a normal
            request or response the id of the field. Allows setting a write only password value. Providing
            a string will set the password, `null` will unset it, `true` will be ignored. The response
            will respond with `true` is a password is set, but will never expose the password itself.
        field_27:
          type: string
          nullable: true
          description: This field represents the `ai` field. The number in field_27 is in a normal request
            or response the id of the field. Holds a value that is generated by a generative AI model
            using a dynamic prompt.
      required:
      - id
    ExportJob:
      type: object
      description: 'When mixed in to a model serializer for an ExportJob this will add an url field

        with the actual usable url of the export job''s file (if it has one).'
      properties:
        id:
          type: integer
          readOnly: true
        table:
          type: integer
          nullable: true
        view:
          type: integer
          nullable: true
        exporter_type:
          type: string
        state:
          $ref: '#/components/schemas/StateEnum'
        status:
          type: string
          readOnly: true
          description: 'DEPRECATED: Use state instead'
        exported_file_name:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        progress_percentage:
          type: number
          format: double
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - created_at
      - exporter_type
      - id
      - state
      - status
      - url
    PaginationSerializerRowHistory:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/RowHistory'
      required:
      - count
      - next
      - previous
      - results
    TableWebhookTestCallRequest:
      type: object
      properties:
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        event_type:
          allOf:
          - $ref: '#/components/schemas/EventTypeEnum'
          description: 'The event type that must be used for the test call.


            * `rows.created` - rows.created

            * `rows.updated` - rows.updated

            * `rows.deleted` - rows.deleted

            * `field.created` - field.created

            * `field.updated` - field.updated

            * `field.deleted` - field.deleted

            * `view.created` - view.created

            * `view.updated` - view.updated

            * `view.deleted` - view.deleted

            * `view.rows_entered` - view.rows_entered'
        request_method:
          allOf:
          - $ref: '#/components/schemas/RequestMethodEnum'
          description: 'The request method that be used when the event occurs.


            * `POST` - Post

            * `GET` - Get

            * `PUT` - Put

            * `PATCH` - Patch

            * `DELETE` - Delete'
        headers:
          type: object
          additionalProperties: {}
          description: The additional headers as an object where the key is the name and the value the
            value.
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key instead of the id.
      required:
      - event_type
      - url
    BatchDeleteRows:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
          maxItems: 200
          minItems: 1
      required:
      - items
    Table:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        database_id:
          type: integer
          readOnly: true
        data_sync:
          $ref: '#/components/schemas/DataSync'
      required:
      - data_sync
      - database_id
      - id
      - name
      - order
    View:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - table
      - table_id
      - type
    PaginationSerializerLinkRowValue:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/LinkRowValue'
      required:
      - count
      - next
      - previous
      - results
    PublicViewAuthResponse:
      type: object
      properties:
        access_token:
          type: string
      required:
      - access_token
    RelatedFields:
      type: object
      properties:
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - related_fields
    FieldField:
      oneOf:
      - $ref: '#/components/schemas/TextFieldField'
      - $ref: '#/components/schemas/LongTextFieldField'
      - $ref: '#/components/schemas/URLFieldField'
      - $ref: '#/components/schemas/EmailFieldField'
      - $ref: '#/components/schemas/NumberFieldField'
      - $ref: '#/components/schemas/RatingFieldField'
      - $ref: '#/components/schemas/BooleanFieldField'
      - $ref: '#/components/schemas/DateFieldField'
      - $ref: '#/components/schemas/LastModifiedFieldField'
      - $ref: '#/components/schemas/LastModifiedByFieldField'
      - $ref: '#/components/schemas/CreatedOnFieldField'
      - $ref: '#/components/schemas/CreatedByFieldField'
      - $ref: '#/components/schemas/DurationFieldField'
      - $ref: '#/components/schemas/LinkRowFieldField'
      - $ref: '#/components/schemas/FileFieldField'
      - $ref: '#/components/schemas/SingleSelectFieldField'
      - $ref: '#/components/schemas/MultipleSelectFieldField'
      - $ref: '#/components/schemas/PhoneNumberFieldField'
      - $ref: '#/components/schemas/FormulaFieldField'
      - $ref: '#/components/schemas/CountFieldField'
      - $ref: '#/components/schemas/RollupFieldField'
      - $ref: '#/components/schemas/LookupFieldField'
      - $ref: '#/components/schemas/MultipleCollaboratorsFieldField'
      - $ref: '#/components/schemas/UUIDFieldField'
      - $ref: '#/components/schemas/AutonumberFieldField'
      - $ref: '#/components/schemas/PasswordFieldField'
      - $ref: '#/components/schemas/AIFieldField'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldField'
          long_text: '#/components/schemas/LongTextFieldField'
          url: '#/components/schemas/URLFieldField'
          email: '#/components/schemas/EmailFieldField'
          number: '#/components/schemas/NumberFieldField'
          rating: '#/components/schemas/RatingFieldField'
          boolean: '#/components/schemas/BooleanFieldField'
          date: '#/components/schemas/DateFieldField'
          last_modified: '#/components/schemas/LastModifiedFieldField'
          last_modified_by: '#/components/schemas/LastModifiedByFieldField'
          created_on: '#/components/schemas/CreatedOnFieldField'
          created_by: '#/components/schemas/CreatedByFieldField'
          duration: '#/components/schemas/DurationFieldField'
          link_row: '#/components/schemas/LinkRowFieldField'
          file: '#/components/schemas/FileFieldField'
          single_select: '#/components/schemas/SingleSelectFieldField'
          multiple_select: '#/components/schemas/MultipleSelectFieldField'
          phone_number: '#/components/schemas/PhoneNumberFieldField'
          formula: '#/components/schemas/FormulaFieldField'
          count: '#/components/schemas/CountFieldField'
          rollup: '#/components/schemas/RollupFieldField'
          lookup: '#/components/schemas/LookupFieldField'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldField'
          uuid: '#/components/schemas/UUIDFieldField'
          autonumber: '#/components/schemas/AutonumberFieldField'
          password: '#/components/schemas/PasswordFieldField'
          ai: '#/components/schemas/AIFieldField'
    TableCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        data:
          type: array
          items: {}
          description: "A list of rows that needs to be created as initial table data. Each row is a list\
            \ of values that are going to be added in the new table in the same order as provided.\n\n\
            Ex: \n```json\n[\n  [\"row1_field1_value\", \"row1_field2_value\"],\n  [\"row2_field1_value\"\
            , \"row2_field2_value\"],\n]\n```\nfor creating a two rows table with two fields.\n\nIf not\
            \ provided, some example data is going to be created."
          minItems: 1
        first_row_header:
          type: boolean
          default: false
          description: Indicates if the first provided row is the header. If true the field names are
            going to be the values of the first row. Otherwise they will be called "Field N"
      required:
      - name
    PatchedTableWebhookUpdateRequest:
      type: object
      properties:
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        include_all_events:
          type: boolean
          description: Indicates whether this webhook should listen to all events.
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventsEnum'
          description: A list containing the events that will trigger this webhook.
        event_config:
          type: array
          items:
            $ref: '#/components/schemas/TableWebhookEventConfig'
          description: A list containing the addition event options.
        request_method:
          allOf:
          - $ref: '#/components/schemas/RequestMethodEnum'
          description: 'The request method that be used when the event occurs.


            * `POST` - Post

            * `GET` - Get

            * `PUT` - Put

            * `PATCH` - Patch

            * `DELETE` - Delete'
        headers:
          type: object
          additionalProperties: {}
          description: The additional headers as an object where the key is the name and the value the
            value.
        name:
          type: string
          description: An internal name of the webhook.
          maxLength: 255
        active:
          type: boolean
          description: Indicates whether the web hook is active. When a webhook has failed multiple times,
            it will automatically be deactivated.
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key instead of the id.
    GenerateFormulaWithAIRequest:
      type: object
      properties:
        ai_type:
          type: string
          description: The AI model type that must be used when generating the formula.
        ai_model:
          type: string
          description: The AI model that must be used when generating the formula.
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield focused answers,
            while higher values increase creativity.
        ai_prompt:
          type: string
          description: The human readable input used to generate the formula.
          maxLength: 1000
      required:
      - ai_model
      - ai_prompt
      - ai_type
    PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GalleryViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
        row_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
          description: An object keyed by row id with a value being an object containing additional metadata
            about that row. A row might not have metadata and will not be present as a key if so.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
      - count
      - next
      - previous
      - results
    DataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
      required:
      - id
      - synced_properties
      - type
    DuplicateTableJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_table:
          allOf:
          - $ref: '#/components/schemas/Table'
          readOnly: true
        duplicated_table:
          allOf:
          - $ref: '#/components/schemas/Table'
          readOnly: true
      required:
      - duplicated_table
      - id
      - original_table
      - progress_percentage
      - state
      - type
    OrderViews:
      type: object
      properties:
        view_ids:
          type: array
          items:
            type: integer
          description: View ids in the desired order.
          minItems: 1
      required:
      - view_ids
    Export:
      oneOf:
      - $ref: '#/components/schemas/CsvExporterOptions'
      - $ref: '#/components/schemas/BaseExporterOptions'
      - $ref: '#/components/schemas/BaseExporterOptions'
      - $ref: '#/components/schemas/ExcelExporterOptions'
      - $ref: '#/components/schemas/FileExporterOptions'
      discriminator:
        propertyName: exporter_type
        mapping:
          csv: '#/components/schemas/CsvExporterOptions'
          json: '#/components/schemas/BaseExporterOptions'
          xml: '#/components/schemas/BaseExporterOptions'
          excel: '#/components/schemas/ExcelExporterOptions'
          file: '#/components/schemas/FileExporterOptions'
    PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GalleryViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
      - count
      - next
      - previous
      - results
    PatchedUpdatePremiumViewAttributes:
      type: object
      properties:
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
    PublicViewAuthRequest:
      type: object
      properties:
        password:
          type: string
      required:
      - password
    Token:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The human readable name of the database token for the user.
          maxLength: 100
        workspace:
          type: integer
          description: Only the tables of the workspace can be accessed.
        key:
          type: string
          description: The unique token key that can be used to authorize for the table row endpoints.
          maxLength: 32
        permissions:
          type: object
          description: "Indicates per operation which permissions the database token has within the whole\
            \ workspace. If the value of for example `create` is `true`, then the token can create rows\
            \ in all tables related to the workspace. If a list is provided with for example `[[\"table\"\
            , 1]]` then the token only has create permissions for the table with id 1. Same goes for if\
            \ a database references is provided. `[['database', 1]]` means create permissions for all\
            \ tables in the database with id 1.\n\nExample:\n```json\n{\n  \"create\": true// Allows creating\
            \ rows in all tables.\n  // Allows reading rows from database 1 and table 10.\n  \"read\"\
            : [[\"database\", 1], [\"table\", 10]],\n  \"update\": false  // Denies updating rows in all\
            \ tables.\n  \"delete\": []  // Denies deleting rows in all tables.\n }\n```"
          properties:
            create:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            read:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            update:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            delete:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
      required:
      - id
      - key
      - name
      - permissions
      - workspace
    PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GridViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
      - count
      - next
      - previous
      - results
    CreateViewGroupBy:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          default: ASC
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 200
          description: The pixel width of the group by in the related view.
        type:
          type: string
          default: default
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
      required:
      - field
    PaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TimelineViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
        row_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
          description: An object keyed by row id with a value being an object containing additional metadata
            about that row. A row might not have metadata and will not be present as a key if so.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
      - count
      - next
      - previous
      - results
    SyncDataSyncTableJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        data_sync:
          allOf:
          - $ref: '#/components/schemas/DataSync'
          readOnly: true
      required:
      - data_sync
      - id
      - progress_percentage
      - state
      - type
    Data_SyncListDataSyncPropertiesRequest:
      oneOf:
      - $ref: '#/components/schemas/ICalCalendarDataSyncListDataSyncPropertiesRequest'
      - $ref: '#/components/schemas/PostgreSQLDataSyncListDataSyncPropertiesRequest'
      - $ref: '#/components/schemas/LocalBaserowTableDataSyncListDataSyncPropertiesRequest'
      - $ref: '#/components/schemas/JiraIssuesDataSyncListDataSyncPropertiesRequest'
      - $ref: '#/components/schemas/GitHubIssuesDataSyncListDataSyncPropertiesRequest'
      - $ref: '#/components/schemas/GitLabIssuesDataSyncListDataSyncPropertiesRequest'
      - $ref: '#/components/schemas/HubSpotContactsDataSyncListDataSyncPropertiesRequest'
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: '#/components/schemas/ICalCalendarDataSyncListDataSyncPropertiesRequest'
          postgresql: '#/components/schemas/PostgreSQLDataSyncListDataSyncPropertiesRequest'
          local_baserow_table: '#/components/schemas/LocalBaserowTableDataSyncListDataSyncPropertiesRequest'
          jira_issues: '#/components/schemas/JiraIssuesDataSyncListDataSyncPropertiesRequest'
          github_issues: '#/components/schemas/GitHubIssuesDataSyncListDataSyncPropertiesRequest'
          gitlab_issues: '#/components/schemas/GitLabIssuesDataSyncListDataSyncPropertiesRequest'
          hubspot_contacts: '#/components/schemas/HubSpotContactsDataSyncListDataSyncPropertiesRequest'
    TypeFormulaResult:
      type: object
      properties:
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        nullable:
          type: boolean
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        formula:
          type: string
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
      required:
      - formula
      - nullable
    TokenCreate:
      type: object
      properties:
        name:
          type: string
          description: The human readable name of the database token for the user.
          maxLength: 100
        workspace:
          type: integer
          description: Only the tables of the workspace can be accessed.
      required:
      - name
      - workspace
    ViewFieldOptions:
      anyOf:
      - $ref: '#/components/schemas/grid_view_field_options'
      - $ref: '#/components/schemas/gallery_view_field_options'
      - $ref: '#/components/schemas/form_view_field_options'
      - $ref: '#/components/schemas/kanban_view_field_options'
      - $ref: '#/components/schemas/calendar_view_field_options'
      - $ref: '#/components/schemas/timeline_view_field_options'
    TableWebhookTestCallResponse:
      type: object
      properties:
        request:
          type: string
          readOnly: true
          description: A text copy of the request headers and body.
        response:
          type: string
          readOnly: true
          description: A text copy of the response headers and body.
        status_code:
          type: integer
          readOnly: true
          description: The HTTP response status code.
        is_unreachable:
          type: boolean
          readOnly: true
          description: Indicates whether the provided URL could be reached.
      required:
      - is_unreachable
      - request
      - response
      - status_code
    ChangePrimaryFieldParams:
      type: object
      properties:
        new_primary_field_id:
          type: integer
          description: The ID of the new primary field.
      required:
      - new_primary_field_id
    PublicPaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TimelineViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
      - count
      - next
      - previous
      - results
    PatchedUpdateViewGroupBy:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The pixel width of the group by in the related view.
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
    TableWebhook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        events:
          type: object
          additionalProperties: {}
          readOnly: true
          description: A list containing the events that will trigger this webhook.
        event_config:
          type: array
          items:
            $ref: '#/components/schemas/TableWebhookEventConfig'
          readOnly: true
          description: A list containing the addition event options.
        headers:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The additional headers as an object where the key is the name and the value the
            value.
        calls:
          type: array
          items:
            $ref: '#/components/schemas/TableWebhookCall'
          description: All the calls that this webhook made.
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key instead of the id.
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        request_method:
          allOf:
          - $ref: '#/components/schemas/RequestMethodEnum'
          description: 'The request method that be used when the event occurs.


            * `POST` - Post

            * `GET` - Get

            * `PUT` - Put

            * `PATCH` - Patch

            * `DELETE` - Delete'
        name:
          type: string
          description: An internal name of the webhook.
          maxLength: 255
        include_all_events:
          type: boolean
          description: Indicates whether this webhook should listen to all events.
        failed_triggers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The amount of failed webhook calls.
        active:
          type: boolean
          description: Indicates whether the web hook is active. When a webhook has failed multiple times,
            it will automatically be deactivated.
      required:
      - calls
      - created_on
      - event_config
      - events
      - headers
      - id
      - name
      - updated_on
      - url
    PublicViewInfo:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PublicField'
          readOnly: true
        view:
          allOf:
          - $ref: '#/components/schemas/PublicView'
          readOnly: true
      required:
      - fields
      - view
    PublicFormView:
      type: object
      properties:
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - $ref: '#/components/schemas/Mode51eEnum'
          description: 'Configurable mode of the form.


            * `form` - form

            * `survey` - survey'
        cover_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The user file cover image that is displayed at the top of the form.
        logo_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The user file logo image that is displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        fields:
          type: array
          items:
            $ref: '#/components/schemas/PublicFormViewFieldOptions'
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
      required:
      - fields
    Decorator_Value_Provider_TypeViewDecoration:
      oneOf:
      - $ref: '#/components/schemas/GeneratedSingle_select_colorViewDecoration'
      - $ref: '#/components/schemas/GeneratedConditional_colorViewDecoration'
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: '#/components/schemas/GeneratedSingle_select_colorViewDecoration'
          conditional_color: '#/components/schemas/GeneratedConditional_colorViewDecoration'
    CreateViewSort:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          default: ASC
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
      required:
      - field
    PatchedDecorator_Value_Provider_TypeUpdateViewDecoration:
      oneOf:
      - $ref: '#/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration'
      - $ref: '#/components/schemas/GeneratedConditional_colorUpdateViewDecoration'
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: '#/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration'
          conditional_color: '#/components/schemas/GeneratedConditional_colorUpdateViewDecoration'
    OrderTables:
      type: object
      properties:
        table_ids:
          type: array
          items:
            type: integer
          description: Table ids in the desired order.
      required:
      - table_ids
    ViewCreateView:
      oneOf:
      - $ref: '#/components/schemas/GridViewCreateView'
      - $ref: '#/components/schemas/GalleryViewCreateView'
      - $ref: '#/components/schemas/FormViewCreateView'
      - $ref: '#/components/schemas/KanbanViewCreateView'
      - $ref: '#/components/schemas/CalendarViewCreateView'
      - $ref: '#/components/schemas/TimelineViewCreateView'
      discriminator:
        propertyName: type
        mapping:
          grid: '#/components/schemas/GridViewCreateView'
          gallery: '#/components/schemas/GalleryViewCreateView'
          form: '#/components/schemas/FormViewCreateView'
          kanban: '#/components/schemas/KanbanViewCreateView'
          calendar: '#/components/schemas/CalendarViewCreateView'
          timeline: '#/components/schemas/TimelineViewCreateView'
    Data_SyncCreateDataSync:
      oneOf:
      - $ref: '#/components/schemas/ICalCalendarDataSyncCreateDataSync'
      - $ref: '#/components/schemas/PostgreSQLDataSyncCreateDataSync'
      - $ref: '#/components/schemas/LocalBaserowTableDataSyncCreateDataSync'
      - $ref: '#/components/schemas/JiraIssuesDataSyncCreateDataSync'
      - $ref: '#/components/schemas/GitHubIssuesDataSyncCreateDataSync'
      - $ref: '#/components/schemas/GitLabIssuesDataSyncCreateDataSync'
      - $ref: '#/components/schemas/HubSpotContactsDataSyncCreateDataSync'
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: '#/components/schemas/ICalCalendarDataSyncCreateDataSync'
          postgresql: '#/components/schemas/PostgreSQLDataSyncCreateDataSync'
          local_baserow_table: '#/components/schemas/LocalBaserowTableDataSyncCreateDataSync'
          jira_issues: '#/components/schemas/JiraIssuesDataSyncCreateDataSync'
          github_issues: '#/components/schemas/GitHubIssuesDataSyncCreateDataSync'
          gitlab_issues: '#/components/schemas/GitLabIssuesDataSyncCreateDataSync'
          hubspot_contacts: '#/components/schemas/HubSpotContactsDataSyncCreateDataSync'
    ViewSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the sort applies. Each view can have his own sortings.
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    FileImportJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        database_id:
          type: integer
          description: Database id where the table will be created.
        name:
          type: string
          description: The name of the new table.
          maxLength: 255
        table_id:
          type: integer
          description: Table id where the data will be imported.
        first_row_header:
          type: boolean
          default: false
        report:
          allOf:
          - $ref: '#/components/schemas/Report'
          description: Import error report.
      required:
      - database_id
      - id
      - progress_percentage
      - report
      - state
      - type
    PatchedExampleUpdateRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in field_2 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
          description: 'This field represents the `number` field. The number in field_5 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in field_13 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. The provided value can be a string in
            one of the available formats or a number representing the duration in seconds. In any case,
            the value will be rounded to match the field''s duration format.'
        field_14:
          type: array
          items: {}
          description: 'This field represents the `link_row` field. The number in field_14 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            the ids or the names of the related rows. A name is the value of the primary key of the related
            row. This field also accepts a string with names separated by a comma or an array of row names.
            You can also provide a unique row Id.The response contains a list of objects containing the
            `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items: {}
          nullable: true
          description: 'This field represents the `file` field. The number in field_15 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of more detailed objects
            related to the files.'
        field_16:
          type: integer
          nullable: true
          description: 'This field represents the `single_select` field. The number in field_16 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts an `integer`
            representing the chosen select option id related to the field. Available ids can be found
            when getting or listing the field. The response represents chosen field, but also the value
            and color is exposed.'
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: 'This field represents the `multiple_select` field. The number in field_17 is
              in a normal request or response the id of the field. If the GET parameter user_field_names
              is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
              empty, then the key will instead be the actual name of the field. This field accepts a list
              of `integer` each of which representing the chosen select option id related to the field.
              Available ids can be foundwhen getting or listing the field. You can also send a list of
              option names in which case the option are searched by name. The first one that matches is
              used. This field also accepts a string with names separated by a comma or an array of file
              names. The response represents chosen field, but also the value and color is exposed.'
          description: 'This field represents the `multiple_select` field. The number in field_17 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts a list of `integer`
            each of which representing the chosen select option id related to the field. Available ids
            can be foundwhen getting or listing the field. You can also send a list of option names in
            which case the option are searched by name. The first one that matches is used. This field
            also accepts a string with names separated by a comma or an array of file names. The response
            represents chosen field, but also the value and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number in field_18 is in a
            normal request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `multiple_collaborators` field. The number in field_23
            is in a normal request or response the id of the field. If the GET parameter user_field_names
            is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
            empty, then the key will instead be the actual name of the field. This field accepts a list
            of objects representing the chosen collaborators through the object''s `id` property. The
            id is Baserow user id. The response objects also contains the collaborator name directly along
            with its id.'
        field_26:
          type: string
          nullable: true
          description: 'This field represents the `password` field. The number in field_26 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. Allows setting a write only password
            value. Providing a string will set the password, `null` will unset it, `true` will be ignored.
            The response will respond with `true` is a password is set, but will never expose the password
            itself.'
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
    GenerateFormulaWithAIResponse:
      type: object
      properties:
        formula:
          type: string
          description: The formula generated by the AI.
      required:
      - formula
    CreateViewFilter:
      type: object
      properties:
        field:
          type: integer
          description: The field of which the value must be compared to the filter value.
        type:
          allOf:
          - $ref: '#/components/schemas/Type508Enum'
          description: 'Indicates how the field''s value must be compared to the filter''s value. The
            filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).


            * `equal` - equal

            * `not_equal` - not_equal

            * `filename_contains` - filename_contains

            * `files_lower_than` - files_lower_than

            * `has_file_type` - has_file_type

            * `contains` - contains

            * `contains_not` - contains_not

            * `contains_word` - contains_word

            * `doesnt_contain_word` - doesnt_contain_word

            * `length_is_lower_than` - length_is_lower_than

            * `higher_than` - higher_than

            * `higher_than_or_equal` - higher_than_or_equal

            * `lower_than` - lower_than

            * `lower_than_or_equal` - lower_than_or_equal

            * `is_even_and_whole` - is_even_and_whole

            * `date_equal` - date_equal

            * `date_before` - date_before

            * `date_before_or_equal` - date_before_or_equal

            * `date_after_days_ago` - date_after_days_ago

            * `date_after` - date_after

            * `date_after_or_equal` - date_after_or_equal

            * `date_not_equal` - date_not_equal

            * `date_equals_today` - date_equals_today

            * `date_before_today` - date_before_today

            * `date_after_today` - date_after_today

            * `date_within_days` - date_within_days

            * `date_within_weeks` - date_within_weeks

            * `date_within_months` - date_within_months

            * `date_equals_days_ago` - date_equals_days_ago

            * `date_equals_months_ago` - date_equals_months_ago

            * `date_equals_years_ago` - date_equals_years_ago

            * `date_equals_week` - date_equals_week

            * `date_equals_month` - date_equals_month

            * `date_equals_day_of_month` - date_equals_day_of_month

            * `date_equals_year` - date_equals_year

            * `date_is` - date_is

            * `date_is_not` - date_is_not

            * `date_is_before` - date_is_before

            * `date_is_on_or_before` - date_is_on_or_before

            * `date_is_after` - date_is_after

            * `date_is_on_or_after` - date_is_on_or_after

            * `date_is_within` - date_is_within

            * `single_select_equal` - single_select_equal

            * `single_select_not_equal` - single_select_not_equal

            * `single_select_is_any_of` - single_select_is_any_of

            * `single_select_is_none_of` - single_select_is_none_of

            * `link_row_has` - link_row_has

            * `link_row_has_not` - link_row_has_not

            * `link_row_contains` - link_row_contains

            * `link_row_not_contains` - link_row_not_contains

            * `boolean` - boolean

            * `empty` - empty

            * `not_empty` - not_empty

            * `multiple_select_has` - multiple_select_has

            * `multiple_select_has_not` - multiple_select_has_not

            * `multiple_collaborators_has` - multiple_collaborators_has

            * `multiple_collaborators_has_not` - multiple_collaborators_has_not

            * `user_is` - user_is

            * `user_is_not` - user_is_not

            * `has_value_equal` - has_value_equal

            * `has_not_value_equal` - has_not_value_equal

            * `has_value_contains` - has_value_contains

            * `has_not_value_contains` - has_not_value_contains

            * `has_value_contains_word` - has_value_contains_word

            * `has_not_value_contains_word` - has_not_value_contains_word

            * `has_value_length_is_lower_than` - has_value_length_is_lower_than

            * `has_all_values_equal` - has_all_values_equal

            * `has_empty_value` - has_empty_value

            * `has_not_empty_value` - has_not_empty_value

            * `has_any_select_option_equal` - has_any_select_option_equal

            * `has_none_select_option_equal` - has_none_select_option_equal

            * `has_value_lower` - has_value_lower

            * `has_value_lower_or_equal` - has_value_lower_or_equal

            * `has_value_higher` - has_value_higher

            * `has_value_higher_or_equal` - has_value_higher_or_equal

            * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal

            * `has_not_value_higher` - has_not_value_higher

            * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal

            * `has_not_value_lower` - has_not_value_lower

            * `has_date_equal` - has_date_equal

            * `has_not_date_equal` - has_not_date_equal

            * `has_date_before` - has_date_before

            * `has_not_date_before` - has_not_date_before

            * `has_date_on_or_before` - has_date_on_or_before

            * `has_not_date_on_or_before` - has_not_date_on_or_before

            * `has_date_on_or_after` - has_date_on_or_after

            * `has_not_date_on_or_after` - has_not_date_on_or_after

            * `has_date_after` - has_date_after

            * `has_not_date_after` - has_not_date_after

            * `has_date_within` - has_date_within

            * `has_not_date_within` - has_not_date_within'
        value:
          type: string
          default: ''
          description: The filter value that must be compared to the field's value.
        group:
          type: integer
          nullable: true
          description: The id of the filter group the new filter will belong to. If this is null, the
            filter will not be part of a filter group, but directly part of the view.
      required:
      - field
      - type
    ExampleRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in field_2 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
          description: 'This field represents the `number` field. The number in field_5 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in field_13 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. The provided value can be a string in
            one of the available formats or a number representing the duration in seconds. In any case,
            the value will be rounded to match the field''s duration format.'
        field_14:
          type: array
          items: {}
          description: 'This field represents the `link_row` field. The number in field_14 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            the ids or the names of the related rows. A name is the value of the primary key of the related
            row. This field also accepts a string with names separated by a comma or an array of row names.
            You can also provide a unique row Id.The response contains a list of objects containing the
            `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items: {}
          nullable: true
          description: 'This field represents the `file` field. The number in field_15 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of more detailed objects
            related to the files.'
        field_16:
          type: integer
          nullable: true
          description: 'This field represents the `single_select` field. The number in field_16 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts an `integer`
            representing the chosen select option id related to the field. Available ids can be found
            when getting or listing the field. The response represents chosen field, but also the value
            and color is exposed.'
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: 'This field represents the `multiple_select` field. The number in field_17 is
              in a normal request or response the id of the field. If the GET parameter user_field_names
              is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
              empty, then the key will instead be the actual name of the field. This field accepts a list
              of `integer` each of which representing the chosen select option id related to the field.
              Available ids can be foundwhen getting or listing the field. You can also send a list of
              option names in which case the option are searched by name. The first one that matches is
              used. This field also accepts a string with names separated by a comma or an array of file
              names. The response represents chosen field, but also the value and color is exposed.'
          description: 'This field represents the `multiple_select` field. The number in field_17 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts a list of `integer`
            each of which representing the chosen select option id related to the field. Available ids
            can be foundwhen getting or listing the field. You can also send a list of option names in
            which case the option are searched by name. The first one that matches is used. This field
            also accepts a string with names separated by a comma or an array of file names. The response
            represents chosen field, but also the value and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number in field_18 is in a
            normal request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `multiple_collaborators` field. The number in field_23
            is in a normal request or response the id of the field. If the GET parameter user_field_names
            is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
            empty, then the key will instead be the actual name of the field. This field accepts a list
            of objects representing the chosen collaborators through the object''s `id` property. The
            id is Baserow user id. The response objects also contains the collaborator name directly along
            with its id.'
        field_26:
          type: string
          nullable: true
          description: 'This field represents the `password` field. The number in field_26 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. Allows setting a write only password
            value. Providing a string will set the password, `null` will unset it, `true` will be ignored.
            The response will respond with `true` is a password is set, but will never expose the password
            itself.'
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
      required:
      - field_27
    ExampleBatchRowsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
          maxItems: 200
          minItems: 1
      required:
      - items
    FieldCreateField:
      oneOf:
      - $ref: '#/components/schemas/TextFieldCreateField'
      - $ref: '#/components/schemas/LongTextFieldCreateField'
      - $ref: '#/components/schemas/URLFieldCreateField'
      - $ref: '#/components/schemas/EmailFieldCreateField'
      - $ref: '#/components/schemas/NumberFieldCreateField'
      - $ref: '#/components/schemas/RatingFieldCreateField'
      - $ref: '#/components/schemas/BooleanFieldCreateField'
      - $ref: '#/components/schemas/DateFieldCreateField'
      - $ref: '#/components/schemas/LastModifiedFieldCreateField'
      - $ref: '#/components/schemas/LastModifiedByFieldCreateField'
      - $ref: '#/components/schemas/CreatedOnFieldCreateField'
      - $ref: '#/components/schemas/CreatedByFieldCreateField'
      - $ref: '#/components/schemas/DurationFieldCreateField'
      - $ref: '#/components/schemas/LinkRowFieldCreateField'
      - $ref: '#/components/schemas/FileFieldCreateField'
      - $ref: '#/components/schemas/SingleSelectFieldCreateField'
      - $ref: '#/components/schemas/MultipleSelectFieldCreateField'
      - $ref: '#/components/schemas/PhoneNumberFieldCreateField'
      - $ref: '#/components/schemas/FormulaFieldCreateField'
      - $ref: '#/components/schemas/CountFieldCreateField'
      - $ref: '#/components/schemas/RollupFieldCreateField'
      - $ref: '#/components/schemas/LookupFieldCreateField'
      - $ref: '#/components/schemas/MultipleCollaboratorsFieldCreateField'
      - $ref: '#/components/schemas/UUIDFieldCreateField'
      - $ref: '#/components/schemas/AutonumberFieldCreateField'
      - $ref: '#/components/schemas/PasswordFieldCreateField'
      - $ref: '#/components/schemas/AIFieldCreateField'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldCreateField'
          long_text: '#/components/schemas/LongTextFieldCreateField'
          url: '#/components/schemas/URLFieldCreateField'
          email: '#/components/schemas/EmailFieldCreateField'
          number: '#/components/schemas/NumberFieldCreateField'
          rating: '#/components/schemas/RatingFieldCreateField'
          boolean: '#/components/schemas/BooleanFieldCreateField'
          date: '#/components/schemas/DateFieldCreateField'
          last_modified: '#/components/schemas/LastModifiedFieldCreateField'
          last_modified_by: '#/components/schemas/LastModifiedByFieldCreateField'
          created_on: '#/components/schemas/CreatedOnFieldCreateField'
          created_by: '#/components/schemas/CreatedByFieldCreateField'
          duration: '#/components/schemas/DurationFieldCreateField'
          link_row: '#/components/schemas/LinkRowFieldCreateField'
          file: '#/components/schemas/FileFieldCreateField'
          single_select: '#/components/schemas/SingleSelectFieldCreateField'
          multiple_select: '#/components/schemas/MultipleSelectFieldCreateField'
          phone_number: '#/components/schemas/PhoneNumberFieldCreateField'
          formula: '#/components/schemas/FormulaFieldCreateField'
          count: '#/components/schemas/CountFieldCreateField'
          rollup: '#/components/schemas/RollupFieldCreateField'
          lookup: '#/components/schemas/LookupFieldCreateField'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldCreateField'
          uuid: '#/components/schemas/UUIDFieldCreateField'
          autonumber: '#/components/schemas/AutonumberFieldCreateField'
          password: '#/components/schemas/PasswordFieldCreateField'
          ai: '#/components/schemas/AIFieldCreateField'
    PatchedTableUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
    PatchedViewUpdateView:
      anyOf:
      - $ref: '#/components/schemas/grid_view_update'
      - $ref: '#/components/schemas/gallery_view_update'
      - $ref: '#/components/schemas/form_view_update'
      - $ref: '#/components/schemas/kanban_view_update'
      - $ref: '#/components/schemas/calendar_view_update'
      - $ref: '#/components/schemas/timeline_view_update'
    PaginationSerializerExampleRowResponseSerializerWithUserFieldNames:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames'
      required:
      - count
      - next
      - previous
      - results
    PatchedTokenUpdate:
      type: object
      properties:
        name:
          type: string
          description: The human readable name of the database token for the user.
          maxLength: 100
        permissions:
          type: object
          description: "Indicates per operation which permissions the database token has within the whole\
            \ workspace. If the value of for example `create` is `true`, then the token can create rows\
            \ in all tables related to the workspace. If a list is provided with for example `[[\"table\"\
            , 1]]` then the token only has create permissions for the table with id 1. Same goes for if\
            \ a database references is provided. `[['database', 1]]` means create permissions for all\
            \ tables in the database with id 1.\n\nExample:\n```json\n{\n  \"create\": true// Allows creating\
            \ rows in all tables.\n  // Allows reading rows from database 1 and table 10.\n  \"read\"\
            : [[\"database\", 1], [\"table\", 10]],\n  \"update\": false  // Denies updating rows in all\
            \ tables.\n  \"delete\": []  // Denies deleting rows in all tables.\n }\n```"
          properties:
            create:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            read:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            update:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            delete:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
        rotate_key:
          type: boolean
          default: false
          description: Indicates if a new key must be generated.
    ViewFilterGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or'
        view:
          type: integer
          description: The view to which the filter group applies to. Each view can have its own filter
            groups.
        parent_group:
          type: integer
          nullable: true
      required:
      - id
      - view
    ViewView:
      oneOf:
      - $ref: '#/components/schemas/GridViewView'
      - $ref: '#/components/schemas/GalleryViewView'
      - $ref: '#/components/schemas/FormViewView'
      - $ref: '#/components/schemas/KanbanViewView'
      - $ref: '#/components/schemas/CalendarViewView'
      - $ref: '#/components/schemas/TimelineViewView'
      discriminator:
        propertyName: type
        mapping:
          grid: '#/components/schemas/GridViewView'
          gallery: '#/components/schemas/GalleryViewView'
          form: '#/components/schemas/FormViewView'
          kanban: '#/components/schemas/KanbanViewView'
          calendar: '#/components/schemas/CalendarViewView'
          timeline: '#/components/schemas/TimelineViewView'
    TableImport:
      type: object
      properties:
        data:
          type: array
          items: {}
          description: "A list of rows you want to add to the specified table. Each row is a list of values,\
            \ one for each **writable** field. The field values must be ordered according to the field\
            \ order in the table. All values must be compatible with the corresponding field type.\n\n\
            Ex: \n```json\n[\n  [\"row1_field1_value\", \"row1_field2_value\"],\n  [\"row2_field1_value\"\
            , \"row2_field2_value\"],\n]\n```\nfor adding two rows to a table with two writable fields."
          minItems: 1
        configuration:
          $ref: '#/components/schemas/TableImportConfiguration'
      required:
      - data
    UserFile:
      type: object
      properties:
        size:
          type: integer
          maximum: 2147483647
          minimum: 0
        mime_type:
          type: string
          maxLength: 127
        is_image:
          type: boolean
        image_width:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        image_height:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          type: string
          readOnly: true
        original_name:
          type: string
          maxLength: 255
      required:
      - name
      - original_name
      - size
      - thumbnails
      - uploaded_at
      - url
    PatchedViewFieldOptions:
      anyOf:
      - $ref: '#/components/schemas/grid_view_field_options'
      - $ref: '#/components/schemas/gallery_view_field_options'
      - $ref: '#/components/schemas/form_view_field_options'
      - $ref: '#/components/schemas/kanban_view_field_options'
      - $ref: '#/components/schemas/calendar_view_field_options'
      - $ref: '#/components/schemas/timeline_view_field_options'
    ViewFilter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the filter applies. Each view can have his own filters.
        field:
          type: integer
          description: The field of which the value must be compared to the filter value.
        type:
          type: string
          description: 'Indicates how the field''s value must be compared to the filter''s value. The
            filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).'
          maxLength: 48
        value:
          type: string
          description: The filter value that must be compared to the field's value.
        preload_values:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Can contain unique preloaded values per filter. This is for example used by the
            `link_row_has` filter to communicate the display name if a value is provided.
        group:
          type: integer
          nullable: true
          description: The id of the filter group this filter belongs to. If this is null, the filter
            is not part of a filter group.
      required:
      - field
      - id
      - preload_values
      - type
      - view
    CreateViewFilterGroup:
      type: object
      properties:
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or'
        parent_group:
          type: integer
          nullable: true
    PatchedExampleBatchUpdateRowsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExampleBatchUpdateRowRequestSerializerWithUserFieldNames'
          maxItems: 200
          minItems: 1
    GridViewFilter:
      type: object
      properties:
        field_ids:
          type: array
          items:
            type: integer
          description: Only the fields related to the provided ids are added to the response. If None
            are provided all fields will be returned.
        row_ids:
          type: array
          items:
            type: integer
          description: Only rows related to the provided ids are added to the response.
      required:
      - row_ids
    ListDataSyncProperty:
      type: object
      properties:
        unique_primary:
          type: boolean
        key:
          type: string
        name:
          type: string
        field_type:
          type: string
          readOnly: true
        initially_selected:
          type: boolean
      required:
      - field_type
      - initially_selected
      - key
      - name
      - unique_primary
    KanbanViewExampleResponse:
      type: object
      properties:
        rows:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KanbanViewExampleResponseStack'
          description: Every select option related to the view's single select field can have its own
            entry like this.
        field_options:
          type: array
          items:
            $ref: '#/components/schemas/KanbanViewFieldOptions'
        row_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
          description: An object keyed by row id with a value being an object containing additional metadata
            about that row. A row might not have metadata and will not be present as a key if so.
      required:
      - field_options
      - rows
    PatchedFieldUpdateField:
      oneOf:
      - $ref: '#/components/schemas/TextFieldUpdateField'
      - $ref: '#/components/schemas/LongTextFieldUpdateField'
      - $ref: '#/components/schemas/URLFieldUpdateField'
      - $ref: '#/components/schemas/EmailFieldUpdateField'
      - $ref: '#/components/schemas/NumberFieldUpdateField'
      - $ref: '#/components/schemas/RatingFieldUpdateField'
      - $ref: '#/components/schemas/BooleanFieldUpdateField'
      - $ref: '#/components/schemas/DateFieldUpdateField'
      - $ref: '#/components/schemas/LastModifiedFieldUpdateField'
      - $ref: '#/components/schemas/LastModifiedByFieldUpdateField'
      - $ref: '#/components/schemas/CreatedOnFieldUpdateField'
      - $ref: '#/components/schemas/CreatedByFieldUpdateField'
      - $ref: '#/components/schemas/DurationFieldUpdateField'
      - $ref: '#/components/schemas/LinkRowFieldUpdateField'
      - $ref: '#/components/schemas/FileFieldUpdateField'
      - $ref: '#/components/schemas/SingleSelectFieldUpdateField'
      - $ref: '#/components/schemas/MultipleSelectFieldUpdateField'
      - $ref: '#/components/schemas/PhoneNumberFieldUpdateField'
      - $ref: '#/components/schemas/FormulaFieldUpdateField'
      - $ref: '#/components/schemas/CountFieldUpdateField'
      - $ref: '#/components/schemas/RollupFieldUpdateField'
      - $ref: '#/components/schemas/LookupFieldUpdateField'
      - $ref: '#/components/schemas/MultipleCollaboratorsFieldUpdateField'
      - $ref: '#/components/schemas/UUIDFieldUpdateField'
      - $ref: '#/components/schemas/AutonumberFieldUpdateField'
      - $ref: '#/components/schemas/PasswordFieldUpdateField'
      - $ref: '#/components/schemas/AIFieldUpdateField'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldUpdateField'
          long_text: '#/components/schemas/LongTextFieldUpdateField'
          url: '#/components/schemas/URLFieldUpdateField'
          email: '#/components/schemas/EmailFieldUpdateField'
          number: '#/components/schemas/NumberFieldUpdateField'
          rating: '#/components/schemas/RatingFieldUpdateField'
          boolean: '#/components/schemas/BooleanFieldUpdateField'
          date: '#/components/schemas/DateFieldUpdateField'
          last_modified: '#/components/schemas/LastModifiedFieldUpdateField'
          last_modified_by: '#/components/schemas/LastModifiedByFieldUpdateField'
          created_on: '#/components/schemas/CreatedOnFieldUpdateField'
          created_by: '#/components/schemas/CreatedByFieldUpdateField'
          duration: '#/components/schemas/DurationFieldUpdateField'
          link_row: '#/components/schemas/LinkRowFieldUpdateField'
          file: '#/components/schemas/FileFieldUpdateField'
          single_select: '#/components/schemas/SingleSelectFieldUpdateField'
          multiple_select: '#/components/schemas/MultipleSelectFieldUpdateField'
          phone_number: '#/components/schemas/PhoneNumberFieldUpdateField'
          formula: '#/components/schemas/FormulaFieldUpdateField'
          count: '#/components/schemas/CountFieldUpdateField'
          rollup: '#/components/schemas/RollupFieldUpdateField'
          lookup: '#/components/schemas/LookupFieldUpdateField'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldUpdateField'
          uuid: '#/components/schemas/UUIDFieldUpdateField'
          autonumber: '#/components/schemas/AutonumberFieldUpdateField'
          password: '#/components/schemas/PasswordFieldUpdateField'
          ai: '#/components/schemas/AIFieldUpdateField'
    PaginationSerializerWithGridViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GridViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
        row_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
          description: An object keyed by row id with a value being an object containing additional metadata
            about that row. A row might not have metadata and will not be present as a key if so.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
      required:
      - count
      - next
      - previous
      - results
    FieldFieldSerializerWithRelatedFields:
      oneOf:
      - $ref: '#/components/schemas/TextFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/URLFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/EmailFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/NumberFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/RatingFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/DateFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/DurationFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/FileFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/CountFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/RollupFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/LookupFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/PasswordFieldFieldSerializerWithRelatedFields'
      - $ref: '#/components/schemas/AIFieldFieldSerializerWithRelatedFields'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextFieldFieldSerializerWithRelatedFields'
          long_text: '#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields'
          url: '#/components/schemas/URLFieldFieldSerializerWithRelatedFields'
          email: '#/components/schemas/EmailFieldFieldSerializerWithRelatedFields'
          number: '#/components/schemas/NumberFieldFieldSerializerWithRelatedFields'
          rating: '#/components/schemas/RatingFieldFieldSerializerWithRelatedFields'
          boolean: '#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields'
          date: '#/components/schemas/DateFieldFieldSerializerWithRelatedFields'
          last_modified: '#/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields'
          last_modified_by: '#/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields'
          created_on: '#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields'
          created_by: '#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields'
          duration: '#/components/schemas/DurationFieldFieldSerializerWithRelatedFields'
          link_row: '#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields'
          file: '#/components/schemas/FileFieldFieldSerializerWithRelatedFields'
          single_select: '#/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields'
          multiple_select: '#/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields'
          phone_number: '#/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields'
          formula: '#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields'
          count: '#/components/schemas/CountFieldFieldSerializerWithRelatedFields'
          rollup: '#/components/schemas/RollupFieldFieldSerializerWithRelatedFields'
          lookup: '#/components/schemas/LookupFieldFieldSerializerWithRelatedFields'
          multiple_collaborators: '#/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields'
          uuid: '#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields'
          autonumber: '#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields'
          password: '#/components/schemas/PasswordFieldFieldSerializerWithRelatedFields'
          ai: '#/components/schemas/AIFieldFieldSerializerWithRelatedFields'
    TableWebhookCreateRequest:
      type: object
      properties:
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        include_all_events:
          type: boolean
          description: Indicates whether this webhook should listen to all events.
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventsEnum'
          description: A list containing the events that will trigger this webhook.
        event_config:
          type: array
          items:
            $ref: '#/components/schemas/TableWebhookEventConfig'
          description: A list containing the addition event options.
        request_method:
          allOf:
          - $ref: '#/components/schemas/RequestMethodEnum'
          description: 'The request method that be used when the event occurs.


            * `POST` - Post

            * `GET` - Get

            * `PUT` - Put

            * `PATCH` - Patch

            * `DELETE` - Delete'
        headers:
          type: object
          additionalProperties: {}
          description: The additional headers as an object where the key is the name and the value the
            value.
        name:
          type: string
          description: An internal name of the webhook.
          maxLength: 255
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key instead of the id.
      required:
      - name
      - url
    PatchedUpdateViewFilter:
      type: object
      properties:
        field:
          type: integer
          description: The field of which the value must be compared to the filter value.
        type:
          allOf:
          - $ref: '#/components/schemas/Type508Enum'
          description: 'Indicates how the field''s value must be compared to the filter''s value. The
            filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).


            * `equal` - equal

            * `not_equal` - not_equal

            * `filename_contains` - filename_contains

            * `files_lower_than` - files_lower_than

            * `has_file_type` - has_file_type

            * `contains` - contains

            * `contains_not` - contains_not

            * `contains_word` - contains_word

            * `doesnt_contain_word` - doesnt_contain_word

            * `length_is_lower_than` - length_is_lower_than

            * `higher_than` - higher_than

            * `higher_than_or_equal` - higher_than_or_equal

            * `lower_than` - lower_than

            * `lower_than_or_equal` - lower_than_or_equal

            * `is_even_and_whole` - is_even_and_whole

            * `date_equal` - date_equal

            * `date_before` - date_before

            * `date_before_or_equal` - date_before_or_equal

            * `date_after_days_ago` - date_after_days_ago

            * `date_after` - date_after

            * `date_after_or_equal` - date_after_or_equal

            * `date_not_equal` - date_not_equal

            * `date_equals_today` - date_equals_today

            * `date_before_today` - date_before_today

            * `date_after_today` - date_after_today

            * `date_within_days` - date_within_days

            * `date_within_weeks` - date_within_weeks

            * `date_within_months` - date_within_months

            * `date_equals_days_ago` - date_equals_days_ago

            * `date_equals_months_ago` - date_equals_months_ago

            * `date_equals_years_ago` - date_equals_years_ago

            * `date_equals_week` - date_equals_week

            * `date_equals_month` - date_equals_month

            * `date_equals_day_of_month` - date_equals_day_of_month

            * `date_equals_year` - date_equals_year

            * `date_is` - date_is

            * `date_is_not` - date_is_not

            * `date_is_before` - date_is_before

            * `date_is_on_or_before` - date_is_on_or_before

            * `date_is_after` - date_is_after

            * `date_is_on_or_after` - date_is_on_or_after

            * `date_is_within` - date_is_within

            * `single_select_equal` - single_select_equal

            * `single_select_not_equal` - single_select_not_equal

            * `single_select_is_any_of` - single_select_is_any_of

            * `single_select_is_none_of` - single_select_is_none_of

            * `link_row_has` - link_row_has

            * `link_row_has_not` - link_row_has_not

            * `link_row_contains` - link_row_contains

            * `link_row_not_contains` - link_row_not_contains

            * `boolean` - boolean

            * `empty` - empty

            * `not_empty` - not_empty

            * `multiple_select_has` - multiple_select_has

            * `multiple_select_has_not` - multiple_select_has_not

            * `multiple_collaborators_has` - multiple_collaborators_has

            * `multiple_collaborators_has_not` - multiple_collaborators_has_not

            * `user_is` - user_is

            * `user_is_not` - user_is_not

            * `has_value_equal` - has_value_equal

            * `has_not_value_equal` - has_not_value_equal

            * `has_value_contains` - has_value_contains

            * `has_not_value_contains` - has_not_value_contains

            * `has_value_contains_word` - has_value_contains_word

            * `has_not_value_contains_word` - has_not_value_contains_word

            * `has_value_length_is_lower_than` - has_value_length_is_lower_than

            * `has_all_values_equal` - has_all_values_equal

            * `has_empty_value` - has_empty_value

            * `has_not_empty_value` - has_not_empty_value

            * `has_any_select_option_equal` - has_any_select_option_equal

            * `has_none_select_option_equal` - has_none_select_option_equal

            * `has_value_lower` - has_value_lower

            * `has_value_lower_or_equal` - has_value_lower_or_equal

            * `has_value_higher` - has_value_higher

            * `has_value_higher_or_equal` - has_value_higher_or_equal

            * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal

            * `has_not_value_higher` - has_not_value_higher

            * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal

            * `has_not_value_lower` - has_not_value_lower

            * `has_date_equal` - has_date_equal

            * `has_not_date_equal` - has_not_date_equal

            * `has_date_before` - has_date_before

            * `has_not_date_before` - has_not_date_before

            * `has_date_on_or_before` - has_date_on_or_before

            * `has_not_date_on_or_before` - has_not_date_on_or_before

            * `has_date_on_or_after` - has_date_on_or_after

            * `has_not_date_on_or_after` - has_not_date_on_or_after

            * `has_date_after` - has_date_after

            * `has_not_date_after` - has_not_date_after

            * `has_date_within` - has_date_within

            * `has_not_date_within` - has_not_date_within'
        value:
          type: string
          description: The filter value that must be compared to the field's value.
    Decorator_Value_Provider_TypeCreateViewDecoration:
      oneOf:
      - $ref: '#/components/schemas/GeneratedSingle_select_colorCreateViewDecoration'
      - $ref: '#/components/schemas/GeneratedConditional_colorCreateViewDecoration'
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: '#/components/schemas/GeneratedSingle_select_colorCreateViewDecoration'
          conditional_color: '#/components/schemas/GeneratedConditional_colorCreateViewDecoration'
    UniqueRowValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      required:
      - values
    ViewGroupBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the group by applies. Each view can have his own group bys.
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The pixel width of the group by in the related view.
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    PatchedUpdateViewSort:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
    Data_SyncDataSync:
      oneOf:
      - $ref: '#/components/schemas/ICalCalendarDataSyncDataSync'
      - $ref: '#/components/schemas/PostgreSQLDataSyncDataSync'
      - $ref: '#/components/schemas/LocalBaserowTableDataSyncDataSync'
      - $ref: '#/components/schemas/JiraIssuesDataSyncDataSync'
      - $ref: '#/components/schemas/GitHubIssuesDataSyncDataSync'
      - $ref: '#/components/schemas/GitLabIssuesDataSyncDataSync'
      - $ref: '#/components/schemas/HubSpotContactsDataSyncDataSync'
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: '#/components/schemas/ICalCalendarDataSyncDataSync'
          postgresql: '#/components/schemas/PostgreSQLDataSyncDataSync'
          local_baserow_table: '#/components/schemas/LocalBaserowTableDataSyncDataSync'
          jira_issues: '#/components/schemas/JiraIssuesDataSyncDataSync'
          github_issues: '#/components/schemas/GitHubIssuesDataSyncDataSync'
          gitlab_issues: '#/components/schemas/GitLabIssuesDataSyncDataSync'
          hubspot_contacts: '#/components/schemas/HubSpotContactsDataSyncDataSync'
    CalendarViewExampleResponse:
      type: object
      properties:
        rows:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CalendarViewExampleResponseStack'
          description: Every date bucket (e.g. '2023-01-01') related to the view's date field can have
            its own entry like this.
        field_options:
          type: array
          items:
            $ref: '#/components/schemas/CalendarViewFieldOptions'
        row_metadata:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RowMetadata'
          description: An object keyed by row id with a value being an object containing additional metadata
            about that row. A row might not have metadata and will not be present as a key if so.
      required:
      - field_options
      - rows
    TypeFormulaRequest:
      type: object
      properties:
        formula:
          type: string
        name:
          type: string
          maxLength: 255
      required:
      - formula
      - name
    PatchedUpdateViewFilterGroup:
      type: object
      properties:
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or'
    ExampleRowRequest:
      type: object
      properties:
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1 is in a normal request
            or response the id of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in field_2 is in a normal
            request or response the id of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3 is in a normal request
            or response the id of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4 is in a normal
            request or response the id of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
          description: 'This field represents the `number` field. The number in field_5 is in a normal
            request or response the id of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6 is in a normal
            request or response the id of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7 is in a normal
            request or response the id of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8 is in a normal request
            or response the id of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: This field represents the `duration` field. The number in field_13 is in a normal
            request or response the id of the field. The provided value can be a string in one of the
            available formats or a number representing the duration in seconds. In any case, the value
            will be rounded to match the field's duration format.
        field_14:
          type: array
          items: {}
          description: This field represents the `link_row` field. The number in field_14 is in a normal
            request or response the id of the field. This field accepts an `array` containing the ids
            or the names of the related rows. A name is the value of the primary key of the related row.
            This field also accepts a string with names separated by a comma or an array of row names.
            You can also provide a unique row Id.The response contains a list of objects containing the
            `id` and the primary field's `value` as a string for display purposes.
        field_15:
          type: array
          items: {}
          nullable: true
          description: This field represents the `file` field. The number in field_15 is in a normal request
            or response the id of the field. This field accepts an `array` containing objects with the
            name of the file. The response contains an `array` of more detailed objects related to the
            files.
        field_16:
          type: integer
          nullable: true
          description: This field represents the `single_select` field. The number in field_16 is in a
            normal request or response the id of the field. This field accepts an `integer` representing
            the chosen select option id related to the field. Available ids can be found when getting
            or listing the field. The response represents chosen field, but also the value and color is
            exposed.
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: This field represents the `multiple_select` field. The number in field_17 is
              in a normal request or response the id of the field. This field accepts a list of `integer`
              each of which representing the chosen select option id related to the field. Available ids
              can be foundwhen getting or listing the field. You can also send a list of option names
              in which case the option are searched by name. The first one that matches is used. This
              field also accepts a string with names separated by a comma or an array of file names. The
              response represents chosen field, but also the value and color is exposed.
          description: This field represents the `multiple_select` field. The number in field_17 is in
            a normal request or response the id of the field. This field accepts a list of `integer` each
            of which representing the chosen select option id related to the field. Available ids can
            be foundwhen getting or listing the field. You can also send a list of option names in which
            case the option are searched by name. The first one that matches is used. This field also
            accepts a string with names separated by a comma or an array of file names. The response represents
            chosen field, but also the value and color is exposed.
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number in field_18 is in a
            normal request or response the id of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          description: This field represents the `multiple_collaborators` field. The number in field_23
            is in a normal request or response the id of the field. This field accepts a list of objects
            representing the chosen collaborators through the object's `id` property. The id is Baserow
            user id. The response objects also contains the collaborator name directly along with its
            id.
        field_26:
          type: string
          nullable: true
          description: This field represents the `password` field. The number in field_26 is in a normal
            request or response the id of the field. Allows setting a write only password value. Providing
            a string will set the password, `null` will unset it, `true` will be ignored. The response
            will respond with `true` is a password is set, but will never expose the password itself.
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: This field represents the `ai` field. The number in field_27 is in a normal request
            or response the id of the field. Holds a value that is generated by a generative AI model
            using a dynamic prompt.
      required:
      - field_27
    SubmitActionEnum:
      enum:
      - MESSAGE
      - REDIRECT
      type: string
      description: '* `MESSAGE` - Message

        * `REDIRECT` - Redirect'
    GitHubIssuesDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
    LocalBaserowTableDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching the filters will be
            synced.
      required:
      - source_table_id
    GitLabIssuesDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
    JiraIssuesDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - jira_url
      - jira_username
    PostgreSQLDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          $ref: '#/components/schemas/PostgresqlSslmodeEnum'
      required:
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
    ICalCalendarDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
    HubSpotContactsDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
    Field:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    FieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    RowMetadata:
      type: object
      properties:
        row_comment_count:
          type: integer
          minimum: 0
          description: How many row comments exist for this row.
        row_comments_notification_mode:
          $ref: '#/components/schemas/RowCommentsNotificationModeEnum'
    FileFieldResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        visible_name:
          type: string
        name:
          type: string
        size:
          type: integer
        mime_type:
          type: string
        is_image:
          type: boolean
        image_width:
          type: integer
        image_height:
          type: integer
        uploaded_at:
          type: string
          format: date-time
      required:
      - image_height
      - image_width
      - is_image
      - mime_type
      - name
      - size
      - thumbnails
      - uploaded_at
      - url
      - visible_name
    SelectOption:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
          maxLength: 255
        color:
          type: string
          maxLength: 255
      required:
      - color
      - value
    Collaborator:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    LinkRowValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique identifier of the row in the related table.
        value:
          type: string
          description: The primary field's value as a string of the row in the related table.
        order:
          type: string
          format: decimal
          pattern: ^-?\d{0,20}(?:\.\d{0,20})?$
      required:
      - id
    StateEnum:
      enum:
      - pending
      - exporting
      - cancelled
      - finished
      - failed
      - expired
      type: string
      description: '* `pending` - pending

        * `exporting` - exporting

        * `cancelled` - cancelled

        * `finished` - finished

        * `failed` - failed

        * `expired` - expired'
    RowHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action_type:
          type: string
          description: The type of the action that was performed.
        user:
          allOf:
          - $ref: '#/components/schemas/RowHistoryUser'
          description: The user that performed the action.
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the action that was performed.
        before:
          description: The mapping between field_ids and values for the row before the action was performed.
        after:
          description: The mapping between field_ids and values for the row after the action was performed.
        fields_metadata:
          description: The metadata of the fields that were changed.
      required:
      - action_type
      - after
      - before
      - fields_metadata
      - id
      - timestamp
      - user
    EventTypeEnum:
      enum:
      - rows.created
      - rows.updated
      - rows.deleted
      - field.created
      - field.updated
      - field.deleted
      - view.created
      - view.updated
      - view.deleted
      - view.rows_entered
      type: string
      description: '* `rows.created` - rows.created

        * `rows.updated` - rows.updated

        * `rows.deleted` - rows.deleted

        * `field.created` - field.created

        * `field.updated` - field.updated

        * `field.deleted` - field.deleted

        * `view.created` - view.created

        * `view.updated` - view.updated

        * `view.deleted` - view.deleted

        * `view.rows_entered` - view.rows_entered'
    RequestMethodEnum:
      enum:
      - POST
      - GET
      - PUT
      - PATCH
      - DELETE
      type: string
      description: '* `POST` - Post

        * `GET` - Get

        * `PUT` - Put

        * `PATCH` - Patch

        * `DELETE` - Delete'
    ViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the decoration applies. Each view can have his own decorations.
        type:
          type: string
          description: The decorator type. This is then interpreted by the frontend to display the decoration.
          maxLength: 255
        value_provider_type:
          type: string
          description: The value provider type that gives the value to the decorator.
          maxLength: 255
        value_provider_conf:
          description: The configuration consumed by the value provider.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
      required:
      - id
    TableWithoutDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        database_id:
          type: integer
          readOnly: true
      required:
      - database_id
      - id
      - name
      - order
    ConditionTypeEnum:
      enum:
      - AND
      - OR
      type: string
      description: '* `AND` - And

        * `OR` - Or'
    CountFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - table_id
      - type
    CreatedByFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    NumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        number_decimal_places:
          allOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    SingleSelectFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    EmailFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LinkRowFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_related_field_id:
          type: integer
          nullable: true
          description: The id of the related field.
          readOnly: true
        link_row_table:
          type: integer
          nullable: true
          description: (Deprecated) The id of the linked table.
        link_row_related_field:
          type: integer
          readOnly: true
          description: (Deprecated) The id of the related field.
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          description: The ID of the view in the related table where row selection must be limited to.
        link_row_table_primary_field:
          type: string
          readOnly: true
          description: The primary field of the table that is linked to.
      required:
      - id
      - immutable_properties
      - immutable_type
      - link_row_related_field
      - link_row_related_field_id
      - link_row_table_primary_field
      - name
      - order
      - read_only
      - table_id
      - type
    FormulaFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - available_collaborators
      - error
      - formula
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - select_options
      - table_id
      - type
    MultipleCollaboratorsFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          description: A list of all the available collaborators.
        notify_user_when_added:
          type: boolean
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    RatingFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: 'Rating style. Allowed values: star, heart, thumbs-up, flag, smile.


            * `star` - Star

            * `heart` - Heart

            * `thumbs-up` - Thumbs Up

            * `flag` - Flag

            * `smile` - Smile'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    DateFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    PhoneNumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    UUIDFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    DurationFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        duration_format:
          allOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    PasswordFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    URLFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    CreatedOnFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LookupFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override the `through_field_name`
            parameter if both are provided, however only one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to lookup. Will
            override the `target_field_id` parameter if both are provided, however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field to lookup.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - available_collaborators
      - error
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - select_options
      - table_id
      - type
    LastModifiedByFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    BooleanFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    TextFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row created.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    AIFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - $ref: '#/components/schemas/AiOutputTypeEnum'
          description: 'The desired output type of the field. It will try to force the response of the
            prompt to match it.


            * `text` - text

            * `choice` - choice'
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield focused answers,
            while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI model.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LongTextFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LastModifiedFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    RollupFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - table_id
      - type
    AutonumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    FileFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    MultipleSelectFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    EventsEnum:
      enum:
      - rows.created
      - rows.updated
      - rows.deleted
      - field.created
      - field.updated
      - field.deleted
      - view.created
      - view.updated
      - view.deleted
      - view.rows_entered
      type: string
      description: '* `rows.created` - rows.created

        * `rows.updated` - rows.updated

        * `rows.deleted` - rows.deleted

        * `field.created` - field.created

        * `field.updated` - field.updated

        * `field.deleted` - field.deleted

        * `view.created` - view.created

        * `view.updated` - view.updated

        * `view.deleted` - view.deleted

        * `view.rows_entered` - view.rows_entered'
    TableWebhookEventConfig:
      type: object
      properties:
        event_type:
          allOf:
          - $ref: '#/components/schemas/EventTypeEnum'
          description: 'The type of the event.


            * `rows.created` - rows.created

            * `rows.updated` - rows.updated

            * `rows.deleted` - rows.deleted

            * `field.created` - field.created

            * `field.updated` - field.updated

            * `field.deleted` - field.deleted

            * `view.created` - view.created

            * `view.updated` - view.updated

            * `view.deleted` - view.deleted

            * `view.rows_entered` - view.rows_entered'
        fields:
          type: array
          items:
            type: integer
          description: A list of field IDs that are related to the event.
        views:
          type: array
          items:
            type: integer
          description: A list of view IDs that are related to the event.
      required:
      - event_type
    GalleryViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the form. Lower value is first.
    DataSyncSyncedProperty:
      type: object
      properties:
        field_id:
          type: integer
          readOnly: true
        key:
          type: string
          description: The matching `key` of the `DataSyncProperty`.
          maxLength: 255
        unique_primary:
          type: boolean
          description: Indicates whether the data sync property is used for unique identification when
            syncing.
      required:
      - field_id
      - key
    BaseExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters, sorts and other
            view specific settings.'
        exporter_type:
          allOf:
          - $ref: '#/components/schemas/ExporterTypeEnum'
          description: 'The file type to export to.


            * `csv` - csv

            * `json` - json

            * `xml` - xml

            * `excel` - excel

            * `file` - file'
        export_charset:
          allOf:
          - $ref: '#/components/schemas/ExportCharsetEnum'
          default: utf-8
          description: 'The character set to use when creating the export file.


            * `utf-8` - utf-8

            * `iso-8859-6` - iso-8859-6

            * `windows-1256` - windows-1256

            * `iso-8859-4` - iso-8859-4

            * `windows-1257` - windows-1257

            * `iso-8859-14` - iso-8859-14

            * `iso-8859-2` - iso-8859-2

            * `windows-1250` - windows-1250

            * `gbk` - gbk

            * `gb18030` - gb18030

            * `big5` - big5

            * `koi8-r` - koi8-r

            * `koi8-u` - koi8-u

            * `iso-8859-5` - iso-8859-5

            * `windows-1251` - windows-1251

            * `x-mac-cyrillic` - mac-cyrillic

            * `iso-8859-7` - iso-8859-7

            * `windows-1253` - windows-1253

            * `iso-8859-8` - iso-8859-8

            * `windows-1255` - windows-1255

            * `euc-jp` - euc-jp

            * `iso-2022-jp` - iso-2022-jp

            * `shift-jis` - shift-jis

            * `euc-kr` - euc-kr

            * `macintosh` - macintosh

            * `iso-8859-10` - iso-8859-10

            * `iso-8859-16` - iso-8859-16

            * `windows-874` - cp874

            * `windows-1254` - windows-1254

            * `windows-1258` - windows-1258

            * `iso-8859-1` - iso-8859-1

            * `windows-1252` - windows-1252

            * `iso-8859-3` - iso-8859-3'
        filters:
          allOf:
          - $ref: '#/components/schemas/PublicViewFilters'
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply to this view. The\
            \ filter tree is a nested structure containing the filters that need to be applied. \n\nAn\
            \ example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\"\
            : [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be\
            \ the ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\
            \nThe following filters are available: equal, not_equal, filename_contains, files_lower_than,\
            \ has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,\
            \ higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal,\
            \ date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,\
            \ date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days,\
            \ date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago,\
            \ date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, date_is,\
            \ date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,\
            \ single_select_equal, single_select_not_equal, single_select_is_any_of, single_select_is_none_of,\
            \ link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty,\
            \ not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,\
            \ user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
            \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
            \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
            \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,\
            \ has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,\
            \ has_date_equal, has_not_date_equal, has_date_before, has_not_date_before, has_date_on_or_before,\
            \ has_not_date_on_or_before, has_date_on_or_after, has_not_date_on_or_after, has_date_after,\
            \ has_not_date_after, has_date_within, has_not_date_within.\n\n**Please note that if this\
            \ parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as\
            \ the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated by comma. By
            default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-'
            it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the desired order.
      required:
      - exporter_type
    FileExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters, sorts and other
            view specific settings.'
        exporter_type:
          allOf:
          - $ref: '#/components/schemas/ExporterTypeEnum'
          description: 'The file type to export to.


            * `csv` - csv

            * `json` - json

            * `xml` - xml

            * `excel` - excel

            * `file` - file'
        export_charset:
          allOf:
          - $ref: '#/components/schemas/ExportCharsetEnum'
          default: utf-8
          description: 'The character set to use when creating the export file.


            * `utf-8` - utf-8

            * `iso-8859-6` - iso-8859-6

            * `windows-1256` - windows-1256

            * `iso-8859-4` - iso-8859-4

            * `windows-1257` - windows-1257

            * `iso-8859-14` - iso-8859-14

            * `iso-8859-2` - iso-8859-2

            * `windows-1250` - windows-1250

            * `gbk` - gbk

            * `gb18030` - gb18030

            * `big5` - big5

            * `koi8-r` - koi8-r

            * `koi8-u` - koi8-u

            * `iso-8859-5` - iso-8859-5

            * `windows-1251` - windows-1251

            * `x-mac-cyrillic` - mac-cyrillic

            * `iso-8859-7` - iso-8859-7

            * `windows-1253` - windows-1253

            * `iso-8859-8` - iso-8859-8

            * `windows-1255` - windows-1255

            * `euc-jp` - euc-jp

            * `iso-2022-jp` - iso-2022-jp

            * `shift-jis` - shift-jis

            * `euc-kr` - euc-kr

            * `macintosh` - macintosh

            * `iso-8859-10` - iso-8859-10

            * `iso-8859-16` - iso-8859-16

            * `windows-874` - cp874

            * `windows-1254` - windows-1254

            * `windows-1258` - windows-1258

            * `iso-8859-1` - iso-8859-1

            * `windows-1252` - windows-1252

            * `iso-8859-3` - iso-8859-3'
        filters:
          allOf:
          - $ref: '#/components/schemas/PublicViewFilters'
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply to this view. The\
            \ filter tree is a nested structure containing the filters that need to be applied. \n\nAn\
            \ example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\"\
            : [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be\
            \ the ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\
            \nThe following filters are available: equal, not_equal, filename_contains, files_lower_than,\
            \ has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,\
            \ higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal,\
            \ date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,\
            \ date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days,\
            \ date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago,\
            \ date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, date_is,\
            \ date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,\
            \ single_select_equal, single_select_not_equal, single_select_is_any_of, single_select_is_none_of,\
            \ link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty,\
            \ not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,\
            \ user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
            \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
            \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
            \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,\
            \ has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,\
            \ has_date_equal, has_not_date_equal, has_date_before, has_not_date_before, has_date_on_or_before,\
            \ has_not_date_on_or_before, has_date_on_or_after, has_not_date_on_or_after, has_date_after,\
            \ has_not_date_after, has_date_within, has_not_date_within.\n\n**Please note that if this\
            \ parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as\
            \ the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated by comma. By
            default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-'
            it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the desired order.
        organize_files:
          type: boolean
          default: true
          description: Whether or not to group files by row id in the export.
      required:
      - exporter_type
    ExcelExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters, sorts and other
            view specific settings.'
        exporter_type:
          allOf:
          - $ref: '#/components/schemas/ExporterTypeEnum'
          description: 'The file type to export to.


            * `csv` - csv

            * `json` - json

            * `xml` - xml

            * `excel` - excel

            * `file` - file'
        export_charset:
          allOf:
          - $ref: '#/components/schemas/ExportCharsetEnum'
          default: utf-8
          description: 'The character set to use when creating the export file.


            * `utf-8` - utf-8

            * `iso-8859-6` - iso-8859-6

            * `windows-1256` - windows-1256

            * `iso-8859-4` - iso-8859-4

            * `windows-1257` - windows-1257

            * `iso-8859-14` - iso-8859-14

            * `iso-8859-2` - iso-8859-2

            * `windows-1250` - windows-1250

            * `gbk` - gbk

            * `gb18030` - gb18030

            * `big5` - big5

            * `koi8-r` - koi8-r

            * `koi8-u` - koi8-u

            * `iso-8859-5` - iso-8859-5

            * `windows-1251` - windows-1251

            * `x-mac-cyrillic` - mac-cyrillic

            * `iso-8859-7` - iso-8859-7

            * `windows-1253` - windows-1253

            * `iso-8859-8` - iso-8859-8

            * `windows-1255` - windows-1255

            * `euc-jp` - euc-jp

            * `iso-2022-jp` - iso-2022-jp

            * `shift-jis` - shift-jis

            * `euc-kr` - euc-kr

            * `macintosh` - macintosh

            * `iso-8859-10` - iso-8859-10

            * `iso-8859-16` - iso-8859-16

            * `windows-874` - cp874

            * `windows-1254` - windows-1254

            * `windows-1258` - windows-1258

            * `iso-8859-1` - iso-8859-1

            * `windows-1252` - windows-1252

            * `iso-8859-3` - iso-8859-3'
        filters:
          allOf:
          - $ref: '#/components/schemas/PublicViewFilters'
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply to this view. The\
            \ filter tree is a nested structure containing the filters that need to be applied. \n\nAn\
            \ example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\"\
            : [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be\
            \ the ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\
            \nThe following filters are available: equal, not_equal, filename_contains, files_lower_than,\
            \ has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,\
            \ higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal,\
            \ date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,\
            \ date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days,\
            \ date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago,\
            \ date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, date_is,\
            \ date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,\
            \ single_select_equal, single_select_not_equal, single_select_is_any_of, single_select_is_none_of,\
            \ link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty,\
            \ not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,\
            \ user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
            \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
            \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
            \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,\
            \ has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,\
            \ has_date_equal, has_not_date_equal, has_date_before, has_not_date_before, has_date_on_or_before,\
            \ has_not_date_on_or_before, has_date_on_or_after, has_not_date_on_or_after, has_date_after,\
            \ has_not_date_after, has_date_within, has_not_date_within.\n\n**Please note that if this\
            \ parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as\
            \ the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated by comma. By
            default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-'
            it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the desired order.
        excel_include_header:
          type: boolean
          default: true
          description: Whether or not to generate the field names as header row at the top of the Excel
            file.
      required:
      - exporter_type
    CsvExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters, sorts and other
            view specific settings.'
        exporter_type:
          allOf:
          - $ref: '#/components/schemas/ExporterTypeEnum'
          description: 'The file type to export to.


            * `csv` - csv

            * `json` - json

            * `xml` - xml

            * `excel` - excel

            * `file` - file'
        export_charset:
          allOf:
          - $ref: '#/components/schemas/ExportCharsetEnum'
          default: utf-8
          description: 'The character set to use when creating the export file.


            * `utf-8` - utf-8

            * `iso-8859-6` - iso-8859-6

            * `windows-1256` - windows-1256

            * `iso-8859-4` - iso-8859-4

            * `windows-1257` - windows-1257

            * `iso-8859-14` - iso-8859-14

            * `iso-8859-2` - iso-8859-2

            * `windows-1250` - windows-1250

            * `gbk` - gbk

            * `gb18030` - gb18030

            * `big5` - big5

            * `koi8-r` - koi8-r

            * `koi8-u` - koi8-u

            * `iso-8859-5` - iso-8859-5

            * `windows-1251` - windows-1251

            * `x-mac-cyrillic` - mac-cyrillic

            * `iso-8859-7` - iso-8859-7

            * `windows-1253` - windows-1253

            * `iso-8859-8` - iso-8859-8

            * `windows-1255` - windows-1255

            * `euc-jp` - euc-jp

            * `iso-2022-jp` - iso-2022-jp

            * `shift-jis` - shift-jis

            * `euc-kr` - euc-kr

            * `macintosh` - macintosh

            * `iso-8859-10` - iso-8859-10

            * `iso-8859-16` - iso-8859-16

            * `windows-874` - cp874

            * `windows-1254` - windows-1254

            * `windows-1258` - windows-1258

            * `iso-8859-1` - iso-8859-1

            * `windows-1252` - windows-1252

            * `iso-8859-3` - iso-8859-3'
        filters:
          allOf:
          - $ref: '#/components/schemas/PublicViewFilters'
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply to this view. The\
            \ filter tree is a nested structure containing the filters that need to be applied. \n\nAn\
            \ example of a valid filter tree is the following:`{\"filter_type\": \"AND\", \"filters\"\
            : [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`. The `field` value must be\
            \ the ID of the field to filter on, or the name of the field if `user_field_names` is true.\n\
            \nThe following filters are available: equal, not_equal, filename_contains, files_lower_than,\
            \ has_file_type, contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,\
            \ higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole, date_equal,\
            \ date_before, date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,\
            \ date_not_equal, date_equals_today, date_before_today, date_after_today, date_within_days,\
            \ date_within_weeks, date_within_months, date_equals_days_ago, date_equals_months_ago, date_equals_years_ago,\
            \ date_equals_week, date_equals_month, date_equals_day_of_month, date_equals_year, date_is,\
            \ date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,\
            \ single_select_equal, single_select_not_equal, single_select_is_any_of, single_select_is_none_of,\
            \ link_row_has, link_row_has_not, link_row_contains, link_row_not_contains, boolean, empty,\
            \ not_empty, multiple_select_has, multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,\
            \ user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,\
            \ has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than, has_all_values_equal,\
            \ has_empty_value, has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,\
            \ has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,\
            \ has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,\
            \ has_date_equal, has_not_date_equal, has_date_before, has_not_date_before, has_date_on_or_before,\
            \ has_not_date_on_or_before, has_date_on_or_after, has_not_date_on_or_after, has_date_after,\
            \ has_not_date_after, has_date_within, has_not_date_within.\n\n**Please note that if this\
            \ parameter is provided, all other `filter__{field}__{filter}` will be ignored, as well as\
            \ the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated by comma. By
            default a field is ordered in ascending (A-Z) order, but by prepending the field with a '-'
            it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the desired order.
        csv_column_separator:
          allOf:
          - $ref: '#/components/schemas/CsvColumnSeparatorEnum'
          default: ','
          description: "The value used to separate columns in the resulting csv file.\n\n* `,` - ,\n*\
            \ `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator` - \x1F"
        csv_include_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv file.
      required:
      - exporter_type
    GridViewFieldOptions:
      type: object
      properties:
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The width of the table field in the related view.
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the current view.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position that the field has within the view, lowest first. If there is another
            field with the same order value then the field with the lowest id must be shown first.
        aggregation_type:
          type: string
          description: 'Indicates how the field value is aggregated. This value is different from the
            `aggregation_raw_type`. The `aggregation_raw_type` is the value extracted from the database,
            while the `aggregation_type` can implies further calculations. For example: if you want to
            compute an average, `sum` is going to be the `aggregation_raw_type`, the value extracted from
            database, and `sum / row_count` will be the aggregation result displayed to the user. This
            aggregation_type should be used by the client to compute the final value.'
          maxLength: 48
        aggregation_raw_type:
          description: 'Indicates how to compute the raw aggregation value from database. This type must
            be registered in the backend prior to use it.


            * `empty_count` - empty_count

            * `not_empty_count` - not_empty_count

            * `unique_count` - unique_count

            * `min` - min

            * `max` - max

            * `sum` - sum

            * `average` - average

            * `median` - median

            * `decile` - decile

            * `variance` - variance

            * `std_dev` - std_dev

            * `distribution` - distribution'
          oneOf:
          - $ref: '#/components/schemas/AggregationRawTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
    OrderEnum:
      enum:
      - ASC
      - DESC
      type: string
      description: '* `ASC` - Ascending

        * `DESC` - Descending'
    TimelineViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the view. Lower value is first.
    GitHubIssuesDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
      - type
    HubSpotContactsDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
      required:
      - type
    GitLabIssuesDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
      - type
    ICalCalendarDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
      - type
    PostgreSQLDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          $ref: '#/components/schemas/PostgresqlSslmodeEnum'
      required:
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
      - type
    LocalBaserowTableDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching the filters will be
            synced.
      required:
      - source_table_id
      - type
    JiraIssuesDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync to get the properties from.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - jira_url
      - jira_username
      - type
    DateFormatEnum:
      enum:
      - EU
      - US
      - ISO
      type: string
      description: '* `EU` - European (D/M/Y)

        * `US` - US (M/D/Y)

        * `ISO` - ISO (Y-M-D)'
    DateTimeFormatEnum:
      enum:
      - '24'
      - '12'
      type: string
      description: '* `24` - 24 hour

        * `12` - 12 hour'
    BlankEnum:
      enum:
      - ''
    NumberDecimalPlacesEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      type: integer
      description: '* `0` - 1

        * `1` - 1.0

        * `2` - 1.00

        * `3` - 1.000

        * `4` - 1.0000

        * `5` - 1.00000

        * `6` - 1.000000

        * `7` - 1.0000000

        * `8` - 1.00000000

        * `9` - 1.000000000

        * `10` - 1.0000000000'
    NullEnum:
      enum:
      - null
    DurationFormatEnum:
      enum:
      - h:mm
      - h:mm:ss
      - h:mm:ss.s
      - h:mm:ss.ss
      - h:mm:ss.sss
      - d h
      - d h:mm
      - d h:mm:ss
      - d h mm
      - d h mm ss
      type: string
      description: '* `h:mm` - hours:minutes

        * `h:mm:ss` - hours:minutes:seconds

        * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

        * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

        * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

        * `d h` - days:hours

        * `d h:mm` - days:hours:minutes

        * `d h:mm:ss` - days:hours:minutes:seconds

        * `d h mm` - days:hours:minutes:with_spaces

        * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
    NumberSeparatorEnum:
      enum:
      - SPACE_COMMA
      - SPACE_PERIOD
      - COMMA_PERIOD
      - PERIOD_COMMA
      type: string
      description: '* `` - No formatting

        * `SPACE_COMMA` - Space, comma

        * `SPACE_PERIOD` - Space, period

        * `COMMA_PERIOD` - Comma, period

        * `PERIOD_COMMA` - Period, comma'
    FormulaTypeEnum:
      enum:
      - invalid
      - text
      - char
      - button
      - link
      - date_interval
      - duration
      - date
      - boolean
      - number
      - array
      - single_select
      - multiple_select
      - single_file
      - url
      - multiple_collaborators
      type: string
      description: '* `invalid` - invalid

        * `text` - text

        * `char` - char

        * `button` - button

        * `link` - link

        * `date_interval` - date_interval

        * `duration` - duration

        * `date` - date

        * `boolean` - boolean

        * `number` - number

        * `array` - array

        * `single_select` - single_select

        * `multiple_select` - multiple_select

        * `single_file` - single_file

        * `url` - url

        * `multiple_collaborators` - multiple_collaborators'
    ArrayFormulaTypeEnum:
      enum:
      - invalid
      - text
      - char
      - button
      - link
      - date_interval
      - duration
      - date
      - boolean
      - number
      - single_select
      - multiple_select
      - single_file
      - url
      - multiple_collaborators
      type: string
      description: '* `invalid` - invalid

        * `text` - text

        * `char` - char

        * `button` - button

        * `link` - link

        * `date_interval` - date_interval

        * `duration` - duration

        * `date` - date

        * `boolean` - boolean

        * `number` - number

        * `single_select` - single_select

        * `multiple_select` - multiple_select

        * `single_file` - single_file

        * `url` - url

        * `multiple_collaborators` - multiple_collaborators'
    timeline_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/TimelineViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
      required:
      - field_options
    kanban_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/KanbanViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
      required:
      - field_options
    grid_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GridViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
      required:
      - field_options
    gallery_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GalleryViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
      required:
      - field_options
    calendar_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CalendarViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
      required:
      - field_options
    form_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FormViewFieldOptions'
          description: An object containing the field id as key and the properties related to view as
            value.
      required:
      - field_options
    TableWebhookCall:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event_id:
          type: string
          format: uuid
          readOnly: true
          description: Event ID where the call originated from.
        event_type:
          type: string
          maxLength: 50
        called_time:
          type: string
          format: date-time
          nullable: true
        called_url:
          type: string
          maxLength: 2000
        request:
          type: string
          readOnly: true
          description: A text copy of the request headers and body.
        response:
          type: string
          readOnly: true
          description: A text copy of the response headers and body.
        response_status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The HTTP response status code.
        error:
          type: string
          nullable: true
          description: An internal error reflecting what went wrong.
      required:
      - called_url
      - event_id
      - event_type
      - id
      - request
      - response
    PublicField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    PublicView:
      type: object
      properties:
        id:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        table:
          $ref: '#/components/schemas/PublicViewTable'
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/PublicViewSort'
          readOnly: true
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/PublicViewGroupBy'
          readOnly: true
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug where the view can be accessed publicly on.
          pattern: ^[-a-zA-Z0-9_]+$
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
      required:
      - group_bys
      - id
      - name
      - order
      - slug
      - sortings
      - table
      - type
    PublicFormViewFieldOptions:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: If provided, then this value will be visible above the field input.
        description:
          type: string
          description: If provided, then this value be will be shown under the field name.
        required:
          type: boolean
          description: Indicates whether the field is required for the visitor to fill out.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the form. Lower value is first.
        field:
          allOf:
          - $ref: '#/components/schemas/PublicFormViewField'
          readOnly: true
          description: The properties of the related field. These can be used to construct the correct
            input. Additional properties could be added depending on the field type.
        show_when_matching_conditions:
          type: boolean
          description: Indicates whether this field is visible when the conditions are met.
        condition_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all (AND) or any (OR) of the conditions should match before
            shown.


            * `AND` - And

            * `OR` - Or'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsCondition'
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsConditionGroup'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsConditionGroup'
        field_component:
          type: string
          description: Indicates which field input component is used in the form. The value is only used
            in the frontend, and can differ per field.
          maxLength: 32
      required:
      - field
      - name
    Mode51eEnum:
      enum:
      - form
      - survey
      type: string
      description: '* `form` - form

        * `survey` - survey'
    GeneratedSingle_select_colorViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the decoration applies. Each view can have his own decorations.
        type:
          type: string
          description: The decorator type. This is then interpreted by the frontend to display the decoration.
          maxLength: 255
        value_provider_type:
          type: string
          description: The value provider type that gives the value to the decorator.
          maxLength: 255
        value_provider_conf:
          allOf:
          - $ref: '#/components/schemas/SelectColorValueProviderConf'
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
      required:
      - id
    GeneratedConditional_colorViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the decoration applies. Each view can have his own decorations.
        type:
          type: string
          description: The decorator type. This is then interpreted by the frontend to display the decoration.
          maxLength: 255
        value_provider_type:
          type: string
          description: The value provider type that gives the value to the decorator.
          maxLength: 255
        value_provider_conf:
          allOf:
          - $ref: '#/components/schemas/ConditionalColorValueProviderConfColors'
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
      required:
      - id
    GeneratedConditional_colorUpdateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type9c4Enum'
          description: 'The decorator type. This is then interpreted by the frontend to display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color'
        value_provider_type:
          description: "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color`\
            \ - single_select_color\n* `conditional_color` - conditional_color"
          oneOf:
          - $ref: '#/components/schemas/ValueProviderTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          allOf:
          - $ref: '#/components/schemas/ConditionalColorValueProviderConfColors'
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
    GeneratedSingle_select_colorUpdateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type9c4Enum'
          description: 'The decorator type. This is then interpreted by the frontend to display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color'
        value_provider_type:
          description: "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color`\
            \ - single_select_color\n* `conditional_color` - conditional_color"
          oneOf:
          - $ref: '#/components/schemas/ValueProviderTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          allOf:
          - $ref: '#/components/schemas/SelectColorValueProviderConf'
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
    FormViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeBc4Enum'
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          default: collaborative
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - $ref: '#/components/schemas/Mode51eEnum'
          description: 'Configurable mode of the form.


            * `form` - form

            * `survey` - survey'
        cover_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The cover image that must be displayed at the top of the form.
        logo_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The logo image that must be displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        submit_action:
          allOf:
          - $ref: '#/components/schemas/SubmitActionEnum'
          description: 'The action that must be performed after the visitor has filled out the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect'
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be shown to the visitor
            after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be redirected to the
            this URL after submitting the form.
          maxLength: 2000
        receive_notification_on_submit:
          type: boolean
          readOnly: true
          description: A boolean indicating if the current user should be notified when the form is submitted.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - receive_notification_on_submit
      - slug
      - type
    GridViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeBc4Enum'
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          default: collaborative
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        row_identifier_type:
          $ref: '#/components/schemas/RowIdentifierTypeEnum'
        row_height_size:
          $ref: '#/components/schemas/RowHeightSizeEnum'
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    TimelineViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeBc4Enum'
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          default: collaborative
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        start_date_field:
          type: integer
          nullable: true
        end_date_field:
          type: integer
          nullable: true
        timescale:
          allOf:
          - $ref: '#/components/schemas/TimescaleEnum'
          description: 'The timescale that the timeline should be displayed in.


            * `day` - Day

            * `week` - Week

            * `month` - Month

            * `year` - Year'
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    KanbanViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeBc4Enum'
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          default: collaborative
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    CalendarViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeBc4Enum'
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          default: collaborative
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        date_field:
          type: integer
          nullable: true
        ical_feed_url:
          type: string
          readOnly: true
          description: 'Read-only field with ICal feed endpoint. Note: this url will not be active if
            ical_public value is set to False.'
        ical_public:
          type: boolean
          nullable: true
          description: A flag to show if ical feed is exposed. Set this field to True when modifying this
            resource to enable ICal feed url.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - ical_feed_url
      - name
      - slug
      - type
    GalleryViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/TypeBc4Enum'
        ownership_type:
          allOf:
          - $ref: '#/components/schemas/OwnershipTypeEnum'
          default: collaborative
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    ICalCalendarDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
      - synced_properties
      - table_name
      - type
    PostgreSQLDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          $ref: '#/components/schemas/PostgresqlSslmodeEnum'
      required:
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
      - synced_properties
      - table_name
      - type
    GitLabIssuesDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
      - synced_properties
      - table_name
      - type
    GitHubIssuesDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
      - synced_properties
      - table_name
      - type
    LocalBaserowTableDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching the filters will be
            synced.
      required:
      - source_table_id
      - synced_properties
      - table_name
      - type
    HubSpotContactsDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
      required:
      - synced_properties
      - table_name
      - type
    JiraIssuesDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - $ref: '#/components/schemas/TypeD46Enum'
          description: 'The type of the data sync table that must be created.


            * `ical_calendar` - ical_calendar

            * `postgresql` - postgresql

            * `local_baserow_table` - local_baserow_table

            * `jira_issues` - jira_issues

            * `github_issues` - github_issues

            * `gitlab_issues` - gitlab_issues

            * `hubspot_contacts` - hubspot_contacts'
        table_name:
          type: string
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - jira_url
      - jira_username
      - synced_properties
      - table_name
      - type
    Report:
      type: object
      properties:
        failing_rows:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
              description: Error messages for this field.
            description: An object containing error messages by fields. The key is the field name and
              the value is an array of error messages for this field. These messages are localized for
              the user who has created the job when the translation is available.
          description: An object containing field in error by rows. The keys are the row indexes from
            original file and values are objects of errors by fields.
      required:
      - failing_rows
    Type508Enum:
      enum:
      - equal
      - not_equal
      - filename_contains
      - files_lower_than
      - has_file_type
      - contains
      - contains_not
      - contains_word
      - doesnt_contain_word
      - length_is_lower_than
      - higher_than
      - higher_than_or_equal
      - lower_than
      - lower_than_or_equal
      - is_even_and_whole
      - date_equal
      - date_before
      - date_before_or_equal
      - date_after_days_ago
      - date_after
      - date_after_or_equal
      - date_not_equal
      - date_equals_today
      - date_before_today
      - date_after_today
      - date_within_days
      - date_within_weeks
      - date_within_months
      - date_equals_days_ago
      - date_equals_months_ago
      - date_equals_years_ago
      - date_equals_week
      - date_equals_month
      - date_equals_day_of_month
      - date_equals_year
      - date_is
      - date_is_not
      - date_is_before
      - date_is_on_or_before
      - date_is_after
      - date_is_on_or_after
      - date_is_within
      - single_select_equal
      - single_select_not_equal
      - single_select_is_any_of
      - single_select_is_none_of
      - link_row_has
      - link_row_has_not
      - link_row_contains
      - link_row_not_contains
      - boolean
      - empty
      - not_empty
      - multiple_select_has
      - multiple_select_has_not
      - multiple_collaborators_has
      - multiple_collaborators_has_not
      - user_is
      - user_is_not
      - has_value_equal
      - has_not_value_equal
      - has_value_contains
      - has_not_value_contains
      - has_value_contains_word
      - has_not_value_contains_word
      - has_value_length_is_lower_than
      - has_all_values_equal
      - has_empty_value
      - has_not_empty_value
      - has_any_select_option_equal
      - has_none_select_option_equal
      - has_value_lower
      - has_value_lower_or_equal
      - has_value_higher
      - has_value_higher_or_equal
      - has_not_value_higher_or_equal
      - has_not_value_higher
      - has_not_value_lower_or_equal
      - has_not_value_lower
      - has_date_equal
      - has_not_date_equal
      - has_date_before
      - has_not_date_before
      - has_date_on_or_before
      - has_not_date_on_or_before
      - has_date_on_or_after
      - has_not_date_on_or_after
      - has_date_after
      - has_not_date_after
      - has_date_within
      - has_not_date_within
      type: string
      description: '* `equal` - equal

        * `not_equal` - not_equal

        * `filename_contains` - filename_contains

        * `files_lower_than` - files_lower_than

        * `has_file_type` - has_file_type

        * `contains` - contains

        * `contains_not` - contains_not

        * `contains_word` - contains_word

        * `doesnt_contain_word` - doesnt_contain_word

        * `length_is_lower_than` - length_is_lower_than

        * `higher_than` - higher_than

        * `higher_than_or_equal` - higher_than_or_equal

        * `lower_than` - lower_than

        * `lower_than_or_equal` - lower_than_or_equal

        * `is_even_and_whole` - is_even_and_whole

        * `date_equal` - date_equal

        * `date_before` - date_before

        * `date_before_or_equal` - date_before_or_equal

        * `date_after_days_ago` - date_after_days_ago

        * `date_after` - date_after

        * `date_after_or_equal` - date_after_or_equal

        * `date_not_equal` - date_not_equal

        * `date_equals_today` - date_equals_today

        * `date_before_today` - date_before_today

        * `date_after_today` - date_after_today

        * `date_within_days` - date_within_days

        * `date_within_weeks` - date_within_weeks

        * `date_within_months` - date_within_months

        * `date_equals_days_ago` - date_equals_days_ago

        * `date_equals_months_ago` - date_equals_months_ago

        * `date_equals_years_ago` - date_equals_years_ago

        * `date_equals_week` - date_equals_week

        * `date_equals_month` - date_equals_month

        * `date_equals_day_of_month` - date_equals_day_of_month

        * `date_equals_year` - date_equals_year

        * `date_is` - date_is

        * `date_is_not` - date_is_not

        * `date_is_before` - date_is_before

        * `date_is_on_or_before` - date_is_on_or_before

        * `date_is_after` - date_is_after

        * `date_is_on_or_after` - date_is_on_or_after

        * `date_is_within` - date_is_within

        * `single_select_equal` - single_select_equal

        * `single_select_not_equal` - single_select_not_equal

        * `single_select_is_any_of` - single_select_is_any_of

        * `single_select_is_none_of` - single_select_is_none_of

        * `link_row_has` - link_row_has

        * `link_row_has_not` - link_row_has_not

        * `link_row_contains` - link_row_contains

        * `link_row_not_contains` - link_row_not_contains

        * `boolean` - boolean

        * `empty` - empty

        * `not_empty` - not_empty

        * `multiple_select_has` - multiple_select_has

        * `multiple_select_has_not` - multiple_select_has_not

        * `multiple_collaborators_has` - multiple_collaborators_has

        * `multiple_collaborators_has_not` - multiple_collaborators_has_not

        * `user_is` - user_is

        * `user_is_not` - user_is_not

        * `has_value_equal` - has_value_equal

        * `has_not_value_equal` - has_not_value_equal

        * `has_value_contains` - has_value_contains

        * `has_not_value_contains` - has_not_value_contains

        * `has_value_contains_word` - has_value_contains_word

        * `has_not_value_contains_word` - has_not_value_contains_word

        * `has_value_length_is_lower_than` - has_value_length_is_lower_than

        * `has_all_values_equal` - has_all_values_equal

        * `has_empty_value` - has_empty_value

        * `has_not_empty_value` - has_not_empty_value

        * `has_any_select_option_equal` - has_any_select_option_equal

        * `has_none_select_option_equal` - has_none_select_option_equal

        * `has_value_lower` - has_value_lower

        * `has_value_lower_or_equal` - has_value_lower_or_equal

        * `has_value_higher` - has_value_higher

        * `has_value_higher_or_equal` - has_value_higher_or_equal

        * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal

        * `has_not_value_higher` - has_not_value_higher

        * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal

        * `has_not_value_lower` - has_not_value_lower

        * `has_date_equal` - has_date_equal

        * `has_not_date_equal` - has_not_date_equal

        * `has_date_before` - has_date_before

        * `has_not_date_before` - has_not_date_before

        * `has_date_on_or_before` - has_date_on_or_before

        * `has_not_date_on_or_before` - has_not_date_on_or_before

        * `has_date_on_or_after` - has_date_on_or_after

        * `has_not_date_on_or_after` - has_not_date_on_or_after

        * `has_date_after` - has_date_after

        * `has_not_date_after` - has_not_date_after

        * `has_date_within` - has_date_within

        * `has_not_date_within` - has_not_date_within'
    EmailFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    SingleSelectFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
      - name
      - type
    FormulaFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - error
      - formula
      - name
      - nullable
      - type
    AutonumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        view_id:
          type: integer
          nullable: true
          description: The id of the view to use for the initial ordering.
      required:
      - name
      - type
    RollupFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - name
      - nullable
      - type
    BooleanFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    LastModifiedByFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    AIFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - $ref: '#/components/schemas/AiOutputTypeEnum'
          description: 'The desired output type of the field. It will try to force the response of the
            prompt to match it.


            * `text` - text

            * `choice` - choice'
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield focused answers,
            while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI model.
      required:
      - name
      - type
    URLFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    LastModifiedFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: ('A UTC offset in minutes to add to all the field datetimes values.',)
      required:
      - type
    CreatedByFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    PasswordFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    DurationFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        duration_format:
          allOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
      required:
      - name
      - type
    CountFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - name
      - nullable
      - type
    FileFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    TextFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row created.
          maxLength: 255
      required:
      - name
      - type
    NumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        number_decimal_places:
          allOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - name
      - type
    DateFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: ('A UTC offset in minutes to add to all the field datetimes values.',)
      required:
      - type
    LinkRowFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_table:
          type: integer
          nullable: true
          description: (Deprecated) The id of the linked table.
        has_related_field:
          type: boolean
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          default: -1
          description: The ID of the view in the related table where row selection must be limited to.
      required:
      - name
      - type
    LongTextFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
      required:
      - name
      - type
    UUIDFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    LookupFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override the `through_field_name`
            parameter if both are provided, however only one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to lookup. Will
            override the `target_field_id` parameter if both are provided, however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field to lookup.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - error
      - name
      - nullable
      - type
    PhoneNumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    MultipleCollaboratorsFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        notify_user_when_added:
          type: boolean
      required:
      - name
      - type
    CreatedOnFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: ('A UTC offset in minutes to add to all the field datetimes values.',)
      required:
      - type
    RatingFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: 'Rating style. Allowed values: star, heart, thumbs-up, flag, smile.


            * `star` - Star

            * `heart` - Heart

            * `thumbs-up` - Thumbs Up

            * `flag` - Flag

            * `smile` - Smile'
      required:
      - name
      - type
    MultipleSelectFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
      - name
      - type
    grid_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous password from the view
            and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default, views are collaborative
            and shared for all users that have access to the table.
          maxLength: 255
        row_identifier_type:
          $ref: '#/components/schemas/RowIdentifierTypeEnum'
        row_height_size:
          $ref: '#/components/schemas/RowHeightSizeEnum'
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    timeline_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous password from the view
            and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default, views are collaborative
            and shared for all users that have access to the table.
          maxLength: 255
        start_date_field:
          type: integer
          nullable: true
        end_date_field:
          type: integer
          nullable: true
        timescale:
          allOf:
          - $ref: '#/components/schemas/TimescaleEnum'
          description: 'The timescale that the timeline should be displayed in.


            * `day` - Day

            * `week` - Week

            * `month` - Month

            * `year` - Year'
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    gallery_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous password from the view
            and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default, views are collaborative
            and shared for all users that have access to the table.
          maxLength: 255
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    kanban_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous password from the view
            and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default, views are collaborative
            and shared for all users that have access to the table.
          maxLength: 255
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    form_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous password from the view
            and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default, views are collaborative
            and shared for all users that have access to the table.
          maxLength: 255
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - $ref: '#/components/schemas/Mode51eEnum'
          description: 'Configurable mode of the form.


            * `form` - form

            * `survey` - survey'
        cover_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The cover image that must be displayed at the top of the form.
        logo_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The logo image that must be displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        submit_action:
          allOf:
          - $ref: '#/components/schemas/SubmitActionEnum'
          description: 'The action that must be performed after the visitor has filled out the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect'
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be shown to the visitor
            after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be redirected to the
            this URL after submitting the form.
          maxLength: 2000
        receive_notification_on_submit:
          type: boolean
          readOnly: true
          description: A boolean indicating if the current user should be notified when the form is submitted.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - receive_notification_on_submit
      - slug
    calendar_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous password from the view
            and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default, views are collaborative
            and shared for all users that have access to the table.
          maxLength: 255
        date_field:
          type: integer
          nullable: true
        ical_feed_url:
          type: string
          readOnly: true
          description: 'Read-only field with ICal feed endpoint. Note: this url will not be active if
            ical_public value is set to False.'
        ical_public:
          type: boolean
          nullable: true
          description: A flag to show if ical feed is exposed. Set this field to True when modifying this
            resource to enable ICal feed url.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - ical_feed_url
      - slug
    KanbanViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    GalleryViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    FormViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - $ref: '#/components/schemas/Mode51eEnum'
          description: 'Configurable mode of the form.


            * `form` - form

            * `survey` - survey'
        cover_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The cover image that must be displayed at the top of the form.
        logo_image:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: The logo image that must be displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        submit_action:
          allOf:
          - $ref: '#/components/schemas/SubmitActionEnum'
          description: 'The action that must be performed after the visitor has filled out the form.


            * `MESSAGE` - Message

            * `REDIRECT` - Redirect'
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be shown to the visitor
            after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be redirected to the
            this URL after submitting the form.
          maxLength: 2000
        receive_notification_on_submit:
          type: boolean
          readOnly: true
          description: A boolean indicating if the current user should be notified when the form is submitted.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - receive_notification_on_submit
      - slug
      - table
      - table_id
      - type
    CalendarViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        date_field:
          type: integer
          nullable: true
        ical_feed_url:
          type: string
          readOnly: true
          description: 'Read-only field with ICal feed endpoint. Note: this url will not be active if
            ical_public value is set to False.'
        ical_public:
          type: boolean
          nullable: true
          description: A flag to show if ical feed is exposed. Set this field to True when modifying this
            resource to enable ICal feed url.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - ical_feed_url
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    TimelineViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        start_date_field:
          type: integer
          nullable: true
        end_date_field:
          type: integer
          nullable: true
        timescale:
          allOf:
          - $ref: '#/components/schemas/TimescaleEnum'
          description: 'The timescale that the timeline should be displayed in.


            * `day` - Day

            * `week` - Week

            * `month` - Month

            * `year` - Year'
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    GridViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          $ref: '#/components/schemas/TableWithoutDataSync'
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR).


            * `AND` - And

            * `OR` - Or'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilter'
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ViewFilterGroup'
        sortings:
          type: array
          items:
            $ref: '#/components/schemas/ViewSort'
        group_bys:
          type: array
          items:
            $ref: '#/components/schemas/ViewGroupBy'
        decorations:
          type: array
          items:
            $ref: '#/components/schemas/ViewDecoration'
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping the filters saved for
            the view.
        public_view_has_password:
          type: boolean
          description: 'Indicates whether the public view is password protected or not.


            :return: True if the public view is password protected, False otherwise.'
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        row_identifier_type:
          $ref: '#/components/schemas/RowIdentifierTypeEnum'
        row_height_size:
          $ref: '#/components/schemas/RowHeightSizeEnum'
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    TableImportConfiguration:
      type: object
      description: Additional table import configuration.
      properties:
        upsert_fields:
          type: array
          items:
            type: integer
            minimum: 1
          nullable: true
          description: <function TableImportConfiguration.<lambda> at 0x7f1141fe1b20>
          minItems: 1
        upsert_values:
          type: array
          items:
            type: array
            items: {}
            minItems: 1
          nullable: true
          description: "A list of values that are identifying rows in imported data.\n The number of rows\
            \ in `upsert_values` should be equal to the number of rows in imported data. Each row in `upsert_values`\
            \ should contain a list of values that match the number and field types of fields selected\
            \ in `upsert_fields`. Based on `upsert_fields`, a similar upsert values will be calculated\
            \ for each row in the table.\n There's no guarantee of uniqueness of row identification calculated\
            \ from `upsert_values` nor from the table. Repeated upsert values are compared in order with\
            \ matching values in the table. The imported data must be in the same order as the table rows\
            \ for correct matching."
    ExampleBatchUpdateRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the row in the table.
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in field_2 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: ^-?\d{0,50}(?:\.\d{0,0})?$
          nullable: true
          description: 'This field represents the `number` field. The number in field_5 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in field_13 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. The provided value can be a string in
            one of the available formats or a number representing the duration in seconds. In any case,
            the value will be rounded to match the field''s duration format.'
        field_14:
          type: array
          items: {}
          description: 'This field represents the `link_row` field. The number in field_14 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            the ids or the names of the related rows. A name is the value of the primary key of the related
            row. This field also accepts a string with names separated by a comma or an array of row names.
            You can also provide a unique row Id.The response contains a list of objects containing the
            `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items: {}
          nullable: true
          description: 'This field represents the `file` field. The number in field_15 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of more detailed objects
            related to the files.'
        field_16:
          type: integer
          nullable: true
          description: 'This field represents the `single_select` field. The number in field_16 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts an `integer`
            representing the chosen select option id related to the field. Available ids can be found
            when getting or listing the field. The response represents chosen field, but also the value
            and color is exposed.'
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: 'This field represents the `multiple_select` field. The number in field_17 is
              in a normal request or response the id of the field. If the GET parameter user_field_names
              is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
              empty, then the key will instead be the actual name of the field. This field accepts a list
              of `integer` each of which representing the chosen select option id related to the field.
              Available ids can be foundwhen getting or listing the field. You can also send a list of
              option names in which case the option are searched by name. The first one that matches is
              used. This field also accepts a string with names separated by a comma or an array of file
              names. The response represents chosen field, but also the value and color is exposed.'
          description: 'This field represents the `multiple_select` field. The number in field_17 is in
            a normal request or response the id of the field. If the GET parameter user_field_names is
            provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field accepts a list of `integer`
            each of which representing the chosen select option id related to the field. Available ids
            can be foundwhen getting or listing the field. You can also send a list of option names in
            which case the option are searched by name. The first one that matches is used. This field
            also accepts a string with names separated by a comma or an array of file names. The response
            represents chosen field, but also the value and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number in field_18 is in a
            normal request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          description: 'This field represents the `multiple_collaborators` field. The number in field_23
            is in a normal request or response the id of the field. If the GET parameter user_field_names
            is provided and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or
            empty, then the key will instead be the actual name of the field. This field accepts a list
            of objects representing the chosen collaborators through the object''s `id` property. The
            id is Baserow user id. The response objects also contains the collaborator name directly along
            with its id.'
        field_26:
          type: string
          nullable: true
          description: 'This field represents the `password` field. The number in field_26 is in a normal
            request or response the id of the field. If the GET parameter user_field_names is provided
            and its value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
            the key will instead be the actual name of the field. Allows setting a write only password
            value. Providing a string will set the password, `null` will unset it, `true` will be ignored.
            The response will respond with `true` is a password is set, but will never expose the password
            itself.'
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27 is in a normal request
            or response the id of the field. If the GET parameter user_field_names is provided and its
            value is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
      required:
      - field_27
      - id
    KanbanViewExampleResponseStack:
      type: object
      properties:
        count:
          type: integer
          description: The total count of rows that are included in this group.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
          description: All the rows that belong in this group related with the provided `limit` and `offset`.
      required:
      - count
      - results
    KanbanViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the view. Lower value is first.
    TextFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row created.
          maxLength: 255
    BooleanFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    AutonumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        view_id:
          type: integer
          nullable: true
          description: The id of the view to use for the initial ordering.
    LongTextFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
    URLFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    DateFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: ('A UTC offset in minutes to add to all the field datetimes values.',)
    DurationFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        duration_format:
          allOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
    UUIDFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    PhoneNumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    CreatedOnFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: ('A UTC offset in minutes to add to all the field datetimes values.',)
    SingleSelectFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
    LastModifiedByFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    LookupFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override the `through_field_name`
            parameter if both are provided, however only one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to lookup. Will
            override the `target_field_id` parameter if both are provided, however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field to lookup.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - error
      - nullable
    MultipleCollaboratorsFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        notify_user_when_added:
          type: boolean
    LastModifiedFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: ('A UTC offset in minutes to add to all the field datetimes values.',)
    CountFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - nullable
    RatingFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: 'Rating style. Allowed values: star, heart, thumbs-up, flag, smile.


            * `star` - Star

            * `heart` - Heart

            * `thumbs-up` - Thumbs Up

            * `flag` - Flag

            * `smile` - Smile'
    LinkRowFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_table:
          type: integer
          nullable: true
          description: (Deprecated) The id of the linked table.
        has_related_field:
          type: boolean
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          default: -1
          description: The ID of the view in the related table where row selection must be limited to.
    CreatedByFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    NumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        number_decimal_places:
          allOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
    FileFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    FormulaFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - error
      - formula
      - nullable
    RollupFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - nullable
    PasswordFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    EmailFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
    MultipleSelectFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
    AIFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          $ref: '#/components/schemas/Type6ebEnum'
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - $ref: '#/components/schemas/AiOutputTypeEnum'
          description: 'The desired output type of the field. It will try to force the response of the
            prompt to match it.


            * `text` - text

            * `choice` - choice'
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield focused answers,
            while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI model.
    AIFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - $ref: '#/components/schemas/AiOutputTypeEnum'
          description: 'The desired output type of the field. It will try to force the response of the
            prompt to match it.


            * `text` - text

            * `choice` - choice'
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield focused answers,
            while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI model.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LastModifiedFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - order
      - read_only
      - related_fields
      - table_id
      - type
    TextFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row created.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    AutonumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    URLFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LastModifiedByFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    RollupFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - table_id
      - type
    BooleanFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LinkRowFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_related_field_id:
          type: integer
          nullable: true
          description: The id of the related field.
          readOnly: true
        link_row_table:
          type: integer
          nullable: true
          description: (Deprecated) The id of the linked table.
        link_row_related_field:
          type: integer
          readOnly: true
          description: (Deprecated) The id of the related field.
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          description: The ID of the view in the related table where row selection must be limited to.
        link_row_table_primary_field:
          type: string
          readOnly: true
          description: The primary field of the table that is linked to.
      required:
      - id
      - immutable_properties
      - immutable_type
      - link_row_related_field
      - link_row_related_field_id
      - link_row_table_primary_field
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    MultipleCollaboratorsFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          description: A list of all the available collaborators.
        notify_user_when_added:
          type: boolean
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    FormulaFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        formula:
          type: string
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - available_collaborators
      - error
      - formula
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - select_options
      - table_id
      - type
    LookupFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override the `through_field_name`
            parameter if both are provided, however only one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field to lookup. Will
            override the `target_field_id` parameter if both are provided, however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field to lookup.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - available_collaborators
      - error
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - select_options
      - table_id
      - type
    RatingFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - $ref: '#/components/schemas/StyleEnum'
          description: 'Rating style. Allowed values: star, heart, thumbs-up, flag, smile.


            * `star` - Star

            * `heart` - Heart

            * `thumbs-up` - Thumbs Up

            * `flag` - Flag

            * `smile` - Smile'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    DateFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - order
      - read_only
      - related_fields
      - table_id
      - type
    CreatedByFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        available_collaborators:
          type: array
          items:
            $ref: '#/components/schemas/Collaborator'
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    PasswordFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    DurationFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        duration_format:
          allOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    UUIDFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    FileFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    EmailFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    MultipleSelectFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    NumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        number_decimal_places:
          allOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LongTextFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    PhoneNumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    SingleSelectFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        select_options:
          type: array
          items:
            $ref: '#/components/schemas/SelectOption'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    CreatedOnFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        date_format:
          allOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - order
      - read_only
      - related_fields
      - table_id
      - type
    CountFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field cannot be deleted
            and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true, it's not possible to
            update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then it won't be possible
            to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true, then it won't be
            possible to change the properties and the type via the API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: 'The thousand and decimal separator to use for the field.


            * `` - No formatting

            * `SPACE_COMMA` - Space, comma

            * `SPACE_PERIOD` - Space, period

            * `COMMA_PERIOD` - Comma, period

            * `PERIOD_COMMA` - Period, comma'
          oneOf:
          - $ref: '#/components/schemas/NumberSeparatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        array_formula_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ArrayFormulaTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_format:
          nullable: true
          description: 'EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)


            * `EU` - European (D/M/Y)

            * `US` - US (M/D/Y)

            * `ISO` - ISO (Y-M-D)'
          oneOf:
          - $ref: '#/components/schemas/DateFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: 'The amount of digits allowed after the point.


            * `0` - 1

            * `1` - 1.0

            * `2` - 1.00

            * `3` - 1.000

            * `4` - 1.0000

            * `5` - 1.00000

            * `6` - 1.000000

            * `7` - 1.0000000

            * `8` - 1.00000000

            * `9` - 1.000000000

            * `10` - 1.0000000000'
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - $ref: '#/components/schemas/NumberDecimalPlacesEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_time_format:
          nullable: true
          description: '24 (14:30) or 12 (02:30 PM)


            * `24` - 24 hour

            * `12` - 12 hour'
          oneOf:
          - $ref: '#/components/schemas/DateTimeFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: 'The format of the duration.


            * `h:mm` - hours:minutes

            * `h:mm:ss` - hours:minutes:seconds

            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds

            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds

            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds

            * `d h` - days:hours

            * `d h:mm` - days:hours:minutes

            * `d h:mm:ss` - days:hours:minutes:seconds

            * `d h mm` - days:hours:minutes:with_spaces

            * `d h mm ss` - days:hours:minutes:seconds:with_spaces'
          oneOf:
          - $ref: '#/components/schemas/DurationFormatEnum'
          - $ref: '#/components/schemas/NullEnum'
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          $ref: '#/components/schemas/FormulaTypeEnum'
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - table_id
      - type
    GeneratedConditional_colorCreateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type9c4Enum'
          description: 'The decorator type. This is then interpreted by the frontend to display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color'
        value_provider_type:
          default: ''
          description: "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color`\
            \ - single_select_color\n* `conditional_color` - conditional_color"
          oneOf:
          - $ref: '#/components/schemas/ValueProviderTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          allOf:
          - $ref: '#/components/schemas/ConditionalColorValueProviderConfColors'
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
      required:
      - type
    GeneratedSingle_select_colorCreateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/Type9c4Enum'
          description: 'The decorator type. This is then interpreted by the frontend to display the decoration.


            * `left_border_color` - left_border_color

            * `background_color` - background_color'
        value_provider_type:
          default: ''
          description: "The value provider type that gives the value to the decorator.\n\n* `` - \n* `single_select_color`\
            \ - single_select_color\n* `conditional_color` - conditional_color"
          oneOf:
          - $ref: '#/components/schemas/ValueProviderTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        value_provider_conf:
          allOf:
          - $ref: '#/components/schemas/SelectColorValueProviderConf'
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first. If there is another
            decorator with the same order value then the decorator with the lowest id must be shown first.
      required:
      - type
    JiraIssuesDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - id
      - jira_url
      - jira_username
      - synced_properties
      - type
    PostgreSQLDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          $ref: '#/components/schemas/PostgresqlSslmodeEnum'
      required:
      - id
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
      - synced_properties
      - type
    LocalBaserowTableDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching the filters will be
            synced.
      required:
      - id
      - source_table_id
      - synced_properties
      - type
    HubSpotContactsDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
      required:
      - id
      - synced_properties
      - type
    ICalCalendarDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
      - id
      - synced_properties
      - type
    GitLabIssuesDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
      - id
      - synced_properties
      - type
    GitHubIssuesDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            $ref: '#/components/schemas/DataSyncSyncedProperty'
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
      - id
      - synced_properties
      - type
    CalendarViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the view. Lower value is first.
    CalendarViewExampleResponseStack:
      type: object
      properties:
        count:
          type: integer
          description: The total count of rows that are included in this group.
        results:
          type: array
          items:
            $ref: '#/components/schemas/ExampleRowResponse'
          description: All the rows that belong in this group and match provided `limit` and `offset`.
      required:
      - count
      - results
    PostgresqlSslmodeEnum:
      enum:
      - disable
      - allow
      - prefer
      - require
      - verify-ca
      - verify-full
      type: string
      description: '* `disable` - disable

        * `allow` - allow

        * `prefer` - prefer

        * `require` - require

        * `verify-ca` - verify-ca

        * `verify-full` - verify-full'
    RowCommentsNotificationModeEnum:
      enum:
      - all
      - mentions
      type: string
      description: '* `all` - all

        * `mentions` - mentions'
    RowHistoryUser:
      type: object
      properties:
        id:
          type: integer
          description: The id of the user.
        name:
          type: string
          description: The first name of the user.
      required:
      - id
      - name
    StyleEnum:
      enum:
      - star
      - heart
      - thumbs-up
      - flag
      - smile
      type: string
      description: '* `star` - Star

        * `heart` - Heart

        * `thumbs-up` - Thumbs Up

        * `flag` - Flag

        * `smile` - Smile'
    AiOutputTypeEnum:
      enum:
      - text
      - choice
      type: string
      description: '* `text` - text

        * `choice` - choice'
    ExportCharsetEnum:
      enum:
      - utf-8
      - iso-8859-6
      - windows-1256
      - iso-8859-4
      - windows-1257
      - iso-8859-14
      - iso-8859-2
      - windows-1250
      - gbk
      - gb18030
      - big5
      - koi8-r
      - koi8-u
      - iso-8859-5
      - windows-1251
      - x-mac-cyrillic
      - iso-8859-7
      - windows-1253
      - iso-8859-8
      - windows-1255
      - euc-jp
      - iso-2022-jp
      - shift-jis
      - euc-kr
      - macintosh
      - iso-8859-10
      - iso-8859-16
      - windows-874
      - windows-1254
      - windows-1258
      - iso-8859-1
      - windows-1252
      - iso-8859-3
      type: string
      description: '* `utf-8` - utf-8

        * `iso-8859-6` - iso-8859-6

        * `windows-1256` - windows-1256

        * `iso-8859-4` - iso-8859-4

        * `windows-1257` - windows-1257

        * `iso-8859-14` - iso-8859-14

        * `iso-8859-2` - iso-8859-2

        * `windows-1250` - windows-1250

        * `gbk` - gbk

        * `gb18030` - gb18030

        * `big5` - big5

        * `koi8-r` - koi8-r

        * `koi8-u` - koi8-u

        * `iso-8859-5` - iso-8859-5

        * `windows-1251` - windows-1251

        * `x-mac-cyrillic` - mac-cyrillic

        * `iso-8859-7` - iso-8859-7

        * `windows-1253` - windows-1253

        * `iso-8859-8` - iso-8859-8

        * `windows-1255` - windows-1255

        * `euc-jp` - euc-jp

        * `iso-2022-jp` - iso-2022-jp

        * `shift-jis` - shift-jis

        * `euc-kr` - euc-kr

        * `macintosh` - macintosh

        * `iso-8859-10` - iso-8859-10

        * `iso-8859-16` - iso-8859-16

        * `windows-874` - cp874

        * `windows-1254` - windows-1254

        * `windows-1258` - windows-1258

        * `iso-8859-1` - iso-8859-1

        * `windows-1252` - windows-1252

        * `iso-8859-3` - iso-8859-3'
    ExporterTypeEnum:
      enum:
      - csv
      - json
      - xml
      - excel
      - file
      type: string
      description: '* `csv` - csv

        * `json` - json

        * `xml` - xml

        * `excel` - excel

        * `file` - file'
    PublicViewFilters:
      type: object
      properties:
        filter_type:
          $ref: '#/components/schemas/PublicViewFiltersFilterTypeEnum'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/PublicViewFilter'
          description: The list of filters that should be applied in this group/public view.
      required:
      - filter_type
    CsvColumnSeparatorEnum:
      enum:
      - ','
      - ;
      - '|'
      - tab
      - record_separator
      - unit_separator
      type: string
      description: "* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n* `unit_separator`\
        \ - \x1F"
    AggregationRawTypeEnum:
      enum:
      - empty_count
      - not_empty_count
      - unique_count
      - min
      - max
      - sum
      - average
      - median
      - decile
      - variance
      - std_dev
      - distribution
      type: string
      description: '* `empty_count` - empty_count

        * `not_empty_count` - not_empty_count

        * `unique_count` - unique_count

        * `min` - min

        * `max` - max

        * `sum` - sum

        * `average` - average

        * `median` - median

        * `decile` - decile

        * `variance` - variance

        * `std_dev` - std_dev

        * `distribution` - distribution'
    TypeD46Enum:
      enum:
      - ical_calendar
      - postgresql
      - local_baserow_table
      - jira_issues
      - github_issues
      - gitlab_issues
      - hubspot_contacts
      type: string
      description: '* `ical_calendar` - ical_calendar

        * `postgresql` - postgresql

        * `local_baserow_table` - local_baserow_table

        * `jira_issues` - jira_issues

        * `github_issues` - github_issues

        * `gitlab_issues` - gitlab_issues

        * `hubspot_contacts` - hubspot_contacts'
    FormViewFieldOptions:
      type: object
      properties:
        name:
          type: string
          description: By default, the name of the related field will be shown to the visitor. Optionally
            another name can be used by setting this name.
          maxLength: 255
        description:
          type: string
          description: If provided, then this value be will be shown under the field name.
        enabled:
          type: boolean
          description: Indicates whether the field is included in the form.
        required:
          type: boolean
          description: Indicates whether the field is required for the visitor to fill out.
        show_when_matching_conditions:
          type: boolean
          description: Indicates whether this field is visible when the conditions are met.
        condition_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all (AND) or any (OR) of the conditions should match before
            shown.


            * `AND` - And

            * `OR` - Or'
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the form. Lower value is first.
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsCondition'
        condition_groups:
          type: array
          items:
            $ref: '#/components/schemas/FormViewFieldOptionsConditionGroup'
        field_component:
          type: string
          description: Indicates which field input component is used in the form. The value is only used
            in the frontend, and can differ per field.
          maxLength: 32
        include_all_select_options:
          type: boolean
          description: Indicates whether all fields must be included. Only works if the related field
            type can have select options.
        allowed_select_options:
          type: array
          items:
            type: integer
    PublicViewTable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          readOnly: true
      required:
      - database_id
      - id
    PublicViewGroupBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The pixel width of the group by in the related view.
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    PublicViewSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - $ref: '#/components/schemas/OrderEnum'
          description: 'Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending)
            is from Z to A.


            * `ASC` - Ascending

            * `DESC` - Descending'
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default` if incompatible
            with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    PublicFormViewField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        type:
          type: string
          readOnly: true
          description: The type of the related field.
      required:
      - id
      - name
      - type
    FormViewFieldOptionsCondition:
      type: object
      properties:
        id:
          type: integer
        field:
          type: integer
        type:
          type: string
          description: 'Indicates how the field''s value must be compared to the filter''s value. The
            filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).'
          maxLength: 48
        value:
          type: string
          description: The filter value that must be compared to the field's value.
        group:
          type: integer
          nullable: true
      required:
      - field
      - id
      - type
    FormViewFieldOptionsConditionGroup:
      type: object
      properties:
        id:
          type: integer
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          description: 'Indicates whether all the rows should apply to all filters (AND) or to any filter
            (OR) in the group to be shown.


            * `AND` - And

            * `OR` - Or'
        parent_group:
          type: integer
          nullable: true
      required:
      - id
    SelectColorValueProviderConf:
      type: object
      properties:
        field_id:
          type: integer
          nullable: true
          description: An id of a select field of the table. The value provider return the color of the
            selected option for each row.
      required:
      - field_id
    ConditionalColorValueProviderConfColors:
      type: object
      properties:
        colors:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalColorValueProviderConfColor'
          description: A list of color items. For each row, the value provider try to match the defined
            colors one by one in the given order. The first matching color is returned to the decorator.
      required:
      - colors
    Type9c4Enum:
      enum:
      - left_border_color
      - background_color
      type: string
      description: '* `left_border_color` - left_border_color

        * `background_color` - background_color'
    ValueProviderTypeEnum:
      enum:
      - single_select_color
      - conditional_color
      type: string
      description: "* `` - \n* `single_select_color` - single_select_color\n* `conditional_color` - conditional_color"
    OwnershipTypeEnum:
      enum:
      - collaborative
      - personal
      type: string
      description: '* `collaborative` - collaborative

        * `personal` - personal'
    TypeBc4Enum:
      enum:
      - grid
      - gallery
      - form
      - kanban
      - calendar
      - timeline
      type: string
      description: '* `grid` - grid

        * `gallery` - gallery

        * `form` - form

        * `kanban` - kanban

        * `calendar` - calendar

        * `timeline` - timeline'
    RowIdentifierTypeEnum:
      enum:
      - id
      - count
      type: string
      description: '* `id` - Id

        * `count` - Count'
    RowHeightSizeEnum:
      enum:
      - small
      - medium
      - large
      type: string
      description: '* `small` - Small

        * `medium` - Medium

        * `large` - Large'
    TimescaleEnum:
      enum:
      - day
      - week
      - month
      - year
      type: string
      description: '* `day` - Day

        * `week` - Week

        * `month` - Month

        * `year` - Year'
    Type6ebEnum:
      enum:
      - text
      - long_text
      - url
      - email
      - number
      - rating
      - boolean
      - date
      - last_modified
      - last_modified_by
      - created_on
      - created_by
      - duration
      - link_row
      - file
      - single_select
      - multiple_select
      - phone_number
      - formula
      - count
      - rollup
      - lookup
      - multiple_collaborators
      - uuid
      - autonumber
      - password
      - ai
      type: string
      description: '* `text` - text

        * `long_text` - long_text

        * `url` - url

        * `email` - email

        * `number` - number

        * `rating` - rating

        * `boolean` - boolean

        * `date` - date

        * `last_modified` - last_modified

        * `last_modified_by` - last_modified_by

        * `created_on` - created_on

        * `created_by` - created_by

        * `duration` - duration

        * `link_row` - link_row

        * `file` - file

        * `single_select` - single_select

        * `multiple_select` - multiple_select

        * `phone_number` - phone_number

        * `formula` - formula

        * `count` - count

        * `rollup` - rollup

        * `lookup` - lookup

        * `multiple_collaborators` - multiple_collaborators

        * `uuid` - uuid

        * `autonumber` - autonumber

        * `password` - password

        * `ai` - ai'
    PublicViewFiltersFilterTypeEnum:
      enum:
      - AND
      - OR
      type: string
      description: '* `AND` - AND

        * `OR` - OR'
    PublicViewFilter:
      type: object
      properties:
        field:
          type: integer
          description: The id of the field to filter on.
        type:
          type: string
          description: The filter type.
        value:
          type: string
          description: The filter value.
      required:
      - field
      - type
      - value
    ConditionalColorValueProviderConfColor:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this condition.
        color:
          type: string
          description: The color the decorator should take if the defined conditions apply.
        filters:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalColorValueProviderConfColorFilter'
          description: A list of conditions that the row must meet to get the selected color. This list
            of conditions can be empty, in that case, this color will always match the row values.
        filter_groups:
          type: array
          items:
            $ref: '#/components/schemas/ConditionalColorValueProviderConfColorFilterGroup'
          description: 'A list of filter groups that the row must meet to get the selected color. '
        operator:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          default: AND
          description: 'The boolean operator used to group all conditions.


            * `AND` - And

            * `OR` - Or'
      required:
      - color
      - filters
      - id
    ConditionalColorValueProviderConfColorFilter:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this condition.
        field:
          type: integer
          nullable: true
          description: The field of which the value must be compared to the filter value.
        type:
          nullable: true
          description: 'Indicates how the field''s value must be compared to the filter''s value. The
            filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).


            * `equal` - equal

            * `not_equal` - not_equal

            * `filename_contains` - filename_contains

            * `files_lower_than` - files_lower_than

            * `has_file_type` - has_file_type

            * `contains` - contains

            * `contains_not` - contains_not

            * `contains_word` - contains_word

            * `doesnt_contain_word` - doesnt_contain_word

            * `length_is_lower_than` - length_is_lower_than

            * `higher_than` - higher_than

            * `higher_than_or_equal` - higher_than_or_equal

            * `lower_than` - lower_than

            * `lower_than_or_equal` - lower_than_or_equal

            * `is_even_and_whole` - is_even_and_whole

            * `date_equal` - date_equal

            * `date_before` - date_before

            * `date_before_or_equal` - date_before_or_equal

            * `date_after_days_ago` - date_after_days_ago

            * `date_after` - date_after

            * `date_after_or_equal` - date_after_or_equal

            * `date_not_equal` - date_not_equal

            * `date_equals_today` - date_equals_today

            * `date_before_today` - date_before_today

            * `date_after_today` - date_after_today

            * `date_within_days` - date_within_days

            * `date_within_weeks` - date_within_weeks

            * `date_within_months` - date_within_months

            * `date_equals_days_ago` - date_equals_days_ago

            * `date_equals_months_ago` - date_equals_months_ago

            * `date_equals_years_ago` - date_equals_years_ago

            * `date_equals_week` - date_equals_week

            * `date_equals_month` - date_equals_month

            * `date_equals_day_of_month` - date_equals_day_of_month

            * `date_equals_year` - date_equals_year

            * `date_is` - date_is

            * `date_is_not` - date_is_not

            * `date_is_before` - date_is_before

            * `date_is_on_or_before` - date_is_on_or_before

            * `date_is_after` - date_is_after

            * `date_is_on_or_after` - date_is_on_or_after

            * `date_is_within` - date_is_within

            * `single_select_equal` - single_select_equal

            * `single_select_not_equal` - single_select_not_equal

            * `single_select_is_any_of` - single_select_is_any_of

            * `single_select_is_none_of` - single_select_is_none_of

            * `link_row_has` - link_row_has

            * `link_row_has_not` - link_row_has_not

            * `link_row_contains` - link_row_contains

            * `link_row_not_contains` - link_row_not_contains

            * `boolean` - boolean

            * `empty` - empty

            * `not_empty` - not_empty

            * `multiple_select_has` - multiple_select_has

            * `multiple_select_has_not` - multiple_select_has_not

            * `multiple_collaborators_has` - multiple_collaborators_has

            * `multiple_collaborators_has_not` - multiple_collaborators_has_not

            * `user_is` - user_is

            * `user_is_not` - user_is_not

            * `has_value_equal` - has_value_equal

            * `has_not_value_equal` - has_not_value_equal

            * `has_value_contains` - has_value_contains

            * `has_not_value_contains` - has_not_value_contains

            * `has_value_contains_word` - has_value_contains_word

            * `has_not_value_contains_word` - has_not_value_contains_word

            * `has_value_length_is_lower_than` - has_value_length_is_lower_than

            * `has_all_values_equal` - has_all_values_equal

            * `has_empty_value` - has_empty_value

            * `has_not_empty_value` - has_not_empty_value

            * `has_any_select_option_equal` - has_any_select_option_equal

            * `has_none_select_option_equal` - has_none_select_option_equal

            * `has_value_lower` - has_value_lower

            * `has_value_lower_or_equal` - has_value_lower_or_equal

            * `has_value_higher` - has_value_higher

            * `has_value_higher_or_equal` - has_value_higher_or_equal

            * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal

            * `has_not_value_higher` - has_not_value_higher

            * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal

            * `has_not_value_lower` - has_not_value_lower

            * `has_date_equal` - has_date_equal

            * `has_not_date_equal` - has_not_date_equal

            * `has_date_before` - has_date_before

            * `has_not_date_before` - has_not_date_before

            * `has_date_on_or_before` - has_date_on_or_before

            * `has_not_date_on_or_before` - has_not_date_on_or_before

            * `has_date_on_or_after` - has_date_on_or_after

            * `has_not_date_on_or_after` - has_not_date_on_or_after

            * `has_date_after` - has_date_after

            * `has_not_date_after` - has_not_date_after

            * `has_date_within` - has_date_within

            * `has_not_date_within` - has_not_date_within'
          oneOf:
          - $ref: '#/components/schemas/Type508Enum'
          - $ref: '#/components/schemas/NullEnum'
        value:
          type: string
          default: ''
          description: The field of which the value must be compared to the filter value.
        group:
          type: string
          nullable: true
          description: The id of the filter group this filter belongs to. If this is null, the filter
            is not part of a filter group.
      required:
      - field
      - id
      - type
    ConditionalColorValueProviderConfColorFilterGroup:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this condition.
        filter_type:
          allOf:
          - $ref: '#/components/schemas/ConditionTypeEnum'
          default: AND
          description: 'The boolean operator used to group all conditions.


            * `AND` - And

            * `OR` - Or'
        parent_group:
          type: string
          nullable: true
          description: The id of the parent filter group.
      required:
      - id
  securitySchemes:
    UserSource JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
    Database token:
      type: http
      scheme: bearer
      bearerFormat: Token your_token
tags:
- name: Database tables
- name: Database table fields
- name: Database table views
- name: Database table view filters
- name: Database table view sortings
- name: Database table view decorations
- name: Database table view groupings
- name: Database table view export
- name: Database table grid view
- name: Database table gallery view
- name: Database table form view
- name: Database table kanban view
- name: Database table calendar view
- name: Database table rows
- name: Database table export
- name: Database table webhooks
- name: Database tokens
