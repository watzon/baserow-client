---
openapi: 3.0.3
info:
  title: Baserow API spec
  version: 1.32.5
  description: |-
    For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).

    For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).
  contact:
    url: https://baserow.io/contact
  license:
    name: MIT
    url: https://gitlab.com/baserow/baserow/-/blob/master/LICENSE
paths:
  "/api/_health/celery-queue/":
    get:
      operationId: celery_queue_size_check
      description: Health check endpoint to check if the the celery and/or export
        celery queue has  exceeded the maximum healthy size. Responds with `200` if
        there there are less than 10 in all queues provided. Otherwise responds with
        a `503`.
      parameters:
      - in: query
        name: queue
        schema:
          type: string
        description: The name of the queues to check. Can be provided multiple times.
          Accepts either `celery` or `export`.
      tags:
      - Health
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          description: No response body
        '400':
          description: No response body
        '404':
          description: No response body
        '503':
          description: No response body
  "/api/_health/email/":
    post:
      operationId: email_tester
      description: Sends a test email to the provided email address. Useful for testing
        Baserow's email configuration as errors are clearly returned.
      tags:
      - Health
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/EmailTesterRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/EmailTesterRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/EmailTesterRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EmailTesterResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/_health/full/":
    get:
      operationId: full_health_check
      description: Runs a full health check testing as many services and systems as
        possible. These health checks can be expensive operations such as writing
        files to storage etc.
      tags:
      - Health
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FullHealthCheck"
          description: ''
  "/api/admin/audit-log/":
    get:
      operationId: audit_log_list
      description: |-
        Lists all audit log entries for the given workspace id.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: action_type
        schema:
          type: string
        description: Filter the audit log entries by action type.
      - in: query
        name: from_timestamp
        schema:
          type: string
        description: The ISO timestamp to filter the audit log entries from.
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many audit log entries should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute
          must be prefixed with `+` for a descending sort or a `-` for an ascending
          sort. The accepted attribute names are: `user, workspace, type, timestamp,
          ip_address`. For example `sorts=-user,-workspace` will sort the audit log
          entries first by descending user and then ascending workspace. A sortparameter
          with multiple instances of the same sort attribute will respond with the
          ERROR_INVALID_SORT_ATTRIBUTE error.'
      - in: query
        name: to_timestamp
        schema:
          type: string
        description: The ISO timestamp to filter the audit log entries to.
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter the audit log entries by user id.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Filter the audit log entries by workspace id. This filter works
          only for the admin audit log.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerAuditLog"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/admin/audit-log/action-types/":
    get:
      operationId: audit_log_action_types
      description: |-
        List all distinct action types related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: If provided only action_types with name that match the query
          will be returned.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Return action types related to the workspace.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AuditLogActionType"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/admin/audit-log/export/":
    post:
      operationId: async_audit_log_export
      description: |-
        Creates a job to export the filtered audit log to a CSV file.

        This is a **enterprise** feature.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      tags:
      - Audit log
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleAuditLogExportJobResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/admin/audit-log/users/":
    get:
      operationId: audit_log_users
      description: |-
        List all users that have performed an action in the audit log.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only users with email that match the query will be
          returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many users should be returned per page.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Return users belonging to the given workspace_id.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerAuditLogUser"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/admin/audit-log/workspaces/":
    get:
      operationId: audit_log_workspaces
      description: |-
        List all distinct workspace names related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only workspaces with name that match the query will
          be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many workspaces should be returned per page.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerAuditLogWorkspace"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/admin/auth-provider/":
    get:
      operationId: list_auth_providers
      description: List all the available authentication providers.
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
          description: ''
    post:
      operationId: create_auth_provider
      description: Creates a new authentication provider. This can be used to enable
        authentication with a third party service like Google or Facebook.
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/admin/auth-provider/{auth_provider_id}/":
    get:
      operationId: get_auth_provider
      description: Get an authentication provider.
      parameters:
      - in: path
        name: auth_provider_id
        schema:
          type: integer
        description: The authentication provider id to fetch.
        required: true
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_auth_provider
      description: Updates a new authentication provider. This can be used to enable
        authentication with a third party service like Google or Facebook.
      parameters:
      - in: path
        name: auth_provider_id
        schema:
          type: integer
        description: The authentication provider id to update.
        required: true
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Authentication_ProviderAuthProvider"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_auth_provider
      description: Delete an authentication provider.
      parameters:
      - in: path
        name: auth_provider_id
        schema:
          type: integer
        description: The authentication provider id to delete.
        required: true
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_AUTH_PROVIDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/admin/dashboard/":
    get:
      operationId: admin_dashboard
      description: Returns the new and active users for the last 24 hours, 7 days
        and 30 days. The `previous_` values are the values of the period before, so
        for example `previous_new_users_last_24_hours` are the new users that signed
        up from 48 to 24 hours ago. It can be used to calculate an increase or decrease
        in the amount of signups. A list of the new and active users for every day
        for the last 30 days is also included.
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminDashboard"
          description: ''
        '401':
          description: No response body
  "/api/admin/users/":
    get:
      operationId: admin_list_users
      description: Returns all users with detailed information on each user, if the
        requesting user is staff.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only users with id or username or first_name that
          match the query will be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many users should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute
          must be prefixed with `+` for a descending sort or a `-` for an ascending
          sort. The accepted attribute names are: `id, is_active, name, username,
          date_joined, last_login`. For example `sorts=-id,-is_active` will sort the
          users first by descending id and then ascending is_active. A sortparameter
          with multiple instances of the same sort attribute will respond with the
          ERROR_INVALID_SORT_ATTRIBUTE error.'
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerUserAdminResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
    post:
      operationId: admin_create_user
      description: Creates and returns a new user if the requesting user is staff.
        This works even if new signups are disabled.
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAdminCreate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/UserAdminCreate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/UserAdminCreate"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - USER_ADMIN_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/admin/users/{user_id}/":
    patch:
      operationId: admin_edit_user
      description: Updates specified user attributes and returns the updated user
        if the requesting user is staff. You cannot update yourself to no longer be
        an admin or active.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        description: The id of the user to edit
        required: true
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUserAdminUpdate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUserAdminUpdate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUserAdminUpdate"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAdminResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - USER_ADMIN_CANNOT_DEACTIVATE_SELF
                    - USER_ADMIN_UNKNOWN_USER
                    - USER_ADMIN_ALREADY_EXISTS
                    - ERROR_FEATURE_NOT_AVAILABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
    delete:
      operationId: admin_delete_user
      description: Deletes the specified user, if the requesting user has admin permissions.
        You cannot delete yourself.
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        description: The id of the user to delete
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - USER_ADMIN_CANNOT_DELETE_SELF
                    - USER_ADMIN_UNKNOWN_USER
                    - ERROR_FEATURE_NOT_AVAILABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/admin/users/impersonate/":
    post:
      operationId: admin_impersonate_user
      description: This endpoint allows staff to impersonate another user by requesting
        a JWT token and user object. The requesting user must have staff access in
        order to do this. It's not possible to impersonate a superuser or staff.
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BaserowImpersonateAuthToken"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BaserowImpersonateAuthToken"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BaserowImpersonateAuthToken"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always
                          an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant)
                          selected by the user. Ex: en-GB.'
                  token:
                    type: string
                    deprecated: true
                    description: Deprecated. Use the `access_token` instead.
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
          description: ''
  "/api/admin/workspaces/":
    get:
      operationId: admin_list_workspaces
      description: Returns all workspaces with detailed information on each workspace,
        if the requesting user is staff.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only workspaces with id or name that match the query
          will be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many workspaces should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute
          must be prefixed with `+` for a descending sort or a `-` for an ascending
          sort. The accepted attribute names are: `id, name, application_count, created_on,
          row_count, storage_usage`. For example `sorts=-id,-name` will sort the workspaces
          first by descending id and then ascending name. A sortparameter with multiple
          instances of the same sort attribute will respond with the ERROR_INVALID_SORT_ATTRIBUTE
          error.'
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerWorkspacesAdminResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/admin/workspaces/{workspace_id}/":
    delete:
      operationId: admin_delete_workspace
      description: Deletes the specified workspace and the applications inside that
        workspace, if the requesting user is staff.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id of the workspace to delete
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_FEATURE_NOT_AVAILABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/application/{application_id}/integrations/":
    get:
      operationId: list_application_integrations
      description: Lists all the integrations of the application related to the provided
        parameter if the user has access to the related application's workspace. If
        the workspace is related to a template, then this endpoint will be publicly
        accessible.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns only the integrations of the application related to the
          provided Id.
        required: true
      tags:
      - Integrations
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/IntegrationIntegration"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_application_integration
      description: Creates a new integration
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: application_id
        schema:
          type: integer
        description: Creates an integration for the application related to the provided
          value.
        required: true
      tags:
      - Integrations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/IntegrationCreateIntegration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/IntegrationCreateIntegration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/IntegrationCreateIntegration"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationIntegration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/application/{application_id}/list-user-source-users/":
    get:
      operationId: list_application_user_source_users
      description: List per user sources the first 5 users available.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: The application we want the users for.
        required: true
      tags:
      - User sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UsersPerUserSource"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/application/{application_id}/user-sources/":
    get:
      operationId: list_application_user_sources
      description: Lists all the user_sources of the application related to the provided
        parameter if the user has access to the related application's workspace. If
        the workspace is related to a template, then this endpoint will be publicly
        accessible.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns only the user_sources of the application related to the
          provided Id.
        required: true
      tags:
      - User sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User_SourceUserSource"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_application_user_source
      description: Creates a new user_source
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: application_id
        schema:
          type: integer
        description: Creates an user_source for the application related to the provided
          value.
        required: true
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/User_SourceCreateUserSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/User_SourceCreateUserSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/User_SourceCreateUserSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User_SourceUserSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/application/{application_id}/user-sources/roles/":
    get:
      operationId: list_application_user_source_roles
      description: Lists all the roles of the application related to the provided
        parameter if the user has access to the related application's workspace. If
        the workspace is related to a template, then this endpoint will be publicly
        accessible.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns only the roles of the application related to the provided
          Id.
        required: true
      tags:
      - User source roles
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User_SourceUserSourceRoles"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/applications/":
    get:
      operationId: list_all_applications
      description: Lists all the applications that the user has access to. The properties
        that belong to the application can differ per type. An application always
        belongs to a single workspace. All the applications of the workspaces that
        the user has access to are going to be listed here.
      tags:
      - Applications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ApplicationApplication"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/applications/{application_id}/":
    get:
      operationId: workspace_get_application
      description: Returns the requested application if the authorized user is in
        the application's workspace. The properties that belong to the application
        can differ per type.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Returns the application related to the provided value.
        required: true
      tags:
      - Applications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApplicationApplication"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_application
      description: Updates the existing application related to the provided `application_id`
        param if the authorized user is in the application's workspace. It is not
        possible to change the type, but properties like the name can be changed.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: application_id
        schema:
          type: integer
        description: Updates the application related to the provided value.
        required: true
      tags:
      - Applications
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedApplicationBaseApplicationUpdatePolymorphic"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedApplicationBaseApplicationUpdatePolymorphic"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedApplicationBaseApplicationUpdatePolymorphic"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApplicationApplication"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_application
      description: Deletes an application if the authorized user is in the application's
        workspace. All the related children are also going to be deleted. For example
        in case of a database application all the underlying tables, fields, views
        and rows are going to be deleted.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: application_id
        schema:
          type: integer
        description: Deletes the application related to the provided value.
        required: true
      tags:
      - Applications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/applications/{application_id}/duplicate/async/":
    post:
      operationId: duplicate_application_async
      description: Duplicate an application if the authorized user is in the application's
        workspace. All the related children are also going to be duplicated. For example
        in case of a database application all the underlying tables, fields, views
        and rows are going to be duplicated.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: application_id
        schema:
          type: integer
        description: The id of the application to duplicate.
        required: true
      tags:
      - Applications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DuplicateApplicationJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_NOT_IN_GROUP
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/applications/workspace/{workspace_id}/":
    get:
      operationId: workspace_list_applications
      description: Lists all the applications of the workspace related to the provided
        `workspace_id` parameter if the authorized user is in that workspace. If theworkspace
        is related to a template, then this endpoint will be publicly accessible.
        The properties that belong to the application can differ per type. An application
        always belongs to a single workspace.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Returns only applications that are in the workspace related to
          the provided value.
        required: true
      tags:
      - Applications
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ApplicationApplication"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: workspace_create_application
      description: Creates a new application based on the provided type. The newly
        created application is going to be added to the workspace related to the provided
        `workspace_id` parameter. If the authorized user does not belong to the workspace
        an error will be returned.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Creates an application for the workspace related to the provided
          value.
        required: true
      tags:
      - Applications
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ApplicationBaseApplicationCreatePolymorphic"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ApplicationBaseApplicationCreatePolymorphic"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ApplicationBaseApplicationCreatePolymorphic"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ApplicationApplication"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/applications/workspace/{workspace_id}/order/":
    post:
      operationId: workspace_order_applications
      description: Changes the order of the provided application ids to the matching
        position that the id has in the list. If the authorized user does not belong
        to the workspace it will be ignored. The order of the not provided tables
        will be set to `0`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Updates the order of the applications in the workspace related
          to the provided value.
        required: true
      tags:
      - Applications
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderApplications"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderApplications"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderApplications"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/audit-log/":
    get:
      operationId: audit_log_list_2
      description: |-
        Lists all audit log entries for the given workspace id.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: action_type
        schema:
          type: string
        description: Filter the audit log entries by action type.
      - in: query
        name: from_timestamp
        schema:
          type: string
        description: The ISO timestamp to filter the audit log entries from.
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many audit log entries should be returned per page.
      - in: query
        name: sorts
        schema:
          type: string
        description: 'A comma separated string of attributes to sort by, each attribute
          must be prefixed with `+` for a descending sort or a `-` for an ascending
          sort. The accepted attribute names are: `user, workspace, type, timestamp,
          ip_address`. For example `sorts=-user,-workspace` will sort the audit log
          entries first by descending user and then ascending workspace. A sortparameter
          with multiple instances of the same sort attribute will respond with the
          ERROR_INVALID_SORT_ATTRIBUTE error.'
      - in: query
        name: to_timestamp
        schema:
          type: string
        description: The ISO timestamp to filter the audit log entries to.
      - in: query
        name: user_id
        schema:
          type: integer
        description: Filter the audit log entries by user id.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Filter the audit log entries by workspace id. This filter works
          only for the admin audit log.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerAuditLog"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/audit-log/action-types/":
    get:
      operationId: audit_log_action_types_2
      description: |-
        List all distinct action types related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: If provided only action_types with name that match the query
          will be returned.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Return action types related to the workspace.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AuditLogActionType"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/audit-log/export/":
    post:
      operationId: async_audit_log_export_2
      description: |-
        Creates a job to export the filtered audit log to a CSV file.

        This is a **enterprise** feature.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      tags:
      - Audit log
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SingleAuditLogExportJobRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SingleAuditLogExportJobResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/audit-log/users/":
    get:
      operationId: audit_log_users_2
      description: |-
        List all users that have performed an action in the audit log.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only users with email that match the query will be
          returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many users should be returned per page.
      - in: query
        name: workspace_id
        schema:
          type: integer
        description: Return users belonging to the given workspace_id.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerAuditLogUser"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/audit-log/workspaces/":
    get:
      operationId: audit_log_workspaces_2
      description: |-
        List all distinct workspace names related to an audit log entry.

        This is a **enterprise** feature.
      parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only workspaces with name that match the query will
          be returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many workspaces should be returned per page.
      tags:
      - Audit log
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerAuditLogWorkspace"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          description: No response body
  "/api/auth-provider/login-options/":
    get:
      operationId: list_auth_providers_login_options
      description: Lists the available login options for the configured authentication
        providers.
      tags:
      - Auth
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  "/api/builder/{builder_id}/domains/":
    get:
      operationId: get_builder_domains
      description: Gets all the domains of a builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: builder_id
        schema:
          type: integer
        description: Gets all the domains for the specified builder
        required: true
      tags:
      - Builder domains
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Domain_TypeDomain"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_builder_domain
      description: Creates a new domain for an application builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: builder_id
        schema:
          type: integer
        description: Creates a domain for the application builder related tothe provided
          value
        required: true
      tags:
      - Builder domains
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Domain_TypeCreateDomain"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Domain_TypeCreateDomain"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Domain_TypeCreateDomain"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Domain_TypeDomain"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/{builder_id}/domains/order/":
    post:
      operationId: order_builder_domains
      description: Apply a new order to the domains of a builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: builder_id
        schema:
          type: integer
        description: The builder the domain belongs to
        required: true
      tags:
      - Builder domains
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderDomains"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderDomains"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderDomains"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_DOMAIN_NOT_IN_BUILDER
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                    - ERROR_DOMAIN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/{builder_id}/pages/":
    post:
      operationId: create_builder_page
      description: Creates a new page for an application builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: builder_id
        schema:
          type: integer
        description: Creates a page for the application builder related to the provided
          value.
        required: true
      tags:
      - Builder pages
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreatePage"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreatePage"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreatePage"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Page"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_PAGE_NAME_NOT_UNIQUE
                    - ERROR_PAGE_PATH_NOT_UNIQUE
                    - ERROR_PATH_PARAM_NOT_IN_PATH
                    - ERROR_PATH_PARAM_NOT_DEFINED
                    - ERROR_INVALID_QUERY_PARAM_NAME
                    - ERROR_DUPLICATE_QUERY_PARAMS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/{builder_id}/pages/order/":
    post:
      operationId: order_builder_pages
      description: Apply a new order to the pages of a builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: builder_id
        schema:
          type: integer
        description: The builder the page belongs to
        required: true
      tags:
      - Builder pages
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderPages"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderPages"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderPages"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_PAGE_NOT_IN_BUILDER
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/{builder_id}/theme/":
    patch:
      operationId: update_builder_theme
      description: Updates the theme properties for the provided id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: builder_id
        schema:
          type: integer
        description: Updates the theme for the application builder related to the
          provided value.
        required: true
      tags:
      - Builder theme
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedColorTypographyButtonImagePageInputTableLinklink_active_text_decoration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedColorTypographyButtonImagePageInputTableLinklink_active_text_decoration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedColorTypographyButtonImagePageInputTableLinklink_active_text_decoration"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ColorTypographyButtonImagePageInputTableLinklink_active_text_decoration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/data-source/{data_source_id}/":
    patch:
      operationId: update_builder_page_data_source
      description: Updates an existing builder data_source.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data_source
        required: true
      tags:
      - Builder data sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDataSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDataSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDataSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Integration_ServiceDataSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_builder_page_data_source
      description: Deletes the data_source related by the given id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data_source
        required: true
      tags:
      - Builder data sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/data-source/{data_source_id}/dispatch/":
    post:
      operationId: dispatch_builder_page_data_source
      description: Dispatches the service of the related data_source and returns the
        result.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data_source you want to call the dispatch for
        required: true
      tags:
      - Builder data sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DispatchDataSourceRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/DispatchDataSourceRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/DispatchDataSourceRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_DOES_NOT_EXIST
                    - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
                    - ERROR_IN_DISPATCH_CONTEXT
                    - ERROR_DATA_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/data-source/{data_source_id}/record-names/":
    get:
      operationId: get_record_names_builder_page_data_source
      description: Find the record names associated with a given list of record ids.
      parameters:
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data_source to find the record names.
        required: true
      - in: query
        name: record_ids
        schema:
          type: string
        description: A comma separated list of the record ids to search for.
        explode: false
      tags:
      - Builder data sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
                  description: Record name
                description: A dictionary mapping record ids to their names.
                example:
                  '1': Record name 1
                  '2': Record name 2
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/data_source/{data_source_id}/move/":
    patch:
      operationId: move_builder_page_data_source
      description: Moves the data_source in the page before another data_source or
        at the end of the page if no before data_source is given. The data_sources
        must belong to the same page.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data_source to move
        required: true
      tags:
      - Builder data sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedMoveDataSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedMoveDataSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedMoveDataSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Integration_ServiceDataSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_DATA_SOURCE_NOT_IN_SAME_PAGE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/{domain_id}/":
    patch:
      operationId: update_builder_domain
      description: Updates an existing domain of an application builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: domain_id
        schema:
          type: integer
        description: The id of the domain
        required: true
      tags:
      - Builder domains
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateDomain"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateDomain"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateDomain"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Domain_TypeDomain"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DOMAIN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_builder_domain
      description: Deletes an existing domain of an application builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: domain_id
        schema:
          type: integer
        description: The id of the domain
        required: true
      tags:
      - Builder domains
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DOMAIN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/{domain_id}/publish/async/":
    post:
      operationId: publish_builder_domain
      description: This endpoint starts an asynchronous job to publish the builder.
        The job clones the current version of the given builder and publish it for
        the given domain.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: domain_id
        schema:
          type: integer
        description: The builder application id the user wants to publish.
        required: true
      tags:
      - Builder domains
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/ask-public-domain-exists/":
    get:
      operationId: ask_public_builder_domain_exists
      description: 'This endpoint can be used to check whether a domain exists for
        SSL certificate purposes. It''s compatible with the Caddy on_demand TLS as
        described here: https://caddyserver.com/docs/json/apps/tls/automation/on_demand/ask/.
        It will respond with a 200 status code if it exists or a 404 if it doesn''t
        exist.'
      parameters:
      - in: query
        name: domain
        schema:
          type: integer
        description: The domain name for which
      tags:
      - Builder domains
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          description: No response body
        '404':
          description: No response body
  "/api/builder/domains/published/by_id/{builder_id}/":
    get:
      operationId: get_public_builder_by_id
      description: Returns the public serialized version of the builder and its pages
        for the given builder id.
      parameters:
      - in: path
        name: builder_id
        schema:
          type: integer
        description: Returns the builder related to the provided Id and its pages.
        required: true
      tags:
      - Builder public
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicBuilder"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_BUILDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/published/by_name/{domain_name}/":
    get:
      operationId: get_public_builder_by_domain_name
      description: Returns the public serialized version of the builder for the given
        domain name and its pages .
      parameters:
      - in: path
        name: domain_name
        schema:
          type: string
        description: Returns the builder published for the given domain name.
        required: true
      tags:
      - Builder public
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicBuilder"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_BUILDER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/published/data-source/{data_source_id}/dispatch/":
    post:
      operationId: dispatch_public_builder_page_data_source
      description: Dispatches the service of the related data_source and returns the
        result.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data_source you want to call the dispatch for
        required: true
      tags:
      - Builder data sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DispatchDataSourceRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/DispatchDataSourceRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/DispatchDataSourceRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_DOES_NOT_EXIST
                    - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
                    - ERROR_IN_DISPATCH_CONTEXT
                    - ERROR_DATA_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/published/page/{page_id}/data_sources/":
    get:
      operationId: list_public_builder_page_data_sources
      description: Lists all the data_sources of the page related to the provided
        parameter if the builder is public.
      parameters:
      - in: path
        name: page_id
        schema:
          type: integer
        description: Returns only the data_sources of the page related to the provided
          Id if the related builder is public.
        required: true
      tags:
      - Builder data sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Integration_ServicePublicDataSource"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/published/page/{page_id}/dispatch-data-sources/":
    post:
      operationId: dispatch_public_builder_page_data_sources
      description: Dispatches the service of the related page data_sources
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: The page we want to dispatch the data source for.
        required: true
      tags:
      - Builder data sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
                    - ERROR_IN_DISPATCH_CONTEXT
                    - ERROR_DATA_DOES_NOT_EXIST
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/published/page/{page_id}/elements/":
    get:
      operationId: list_public_builder_page_elements
      description: Lists all the elements of the page related to the provided parameter.
        If the user is Anonymous, the page must belong to a published builder instance
        to being accessible.
      parameters:
      - in: path
        name: page_id
        schema:
          type: integer
        description: Returns the elements of the page related to the provided Id.
        required: true
      tags:
      - Builder elements
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Element_TypePublicElement"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/domains/published/page/{page_id}/workflow_actions/":
    get:
      operationId: list_public_builder_page_workflow_actions
      description: Lists all the workflow actions with their public accessible data.
        Some configuration might be omitted for security reasons such as passwords
        or PII.
      parameters:
      - in: path
        name: page_id
        schema:
          type: integer
        description: Returns only the public workflow actions of the page related
          to the provided Id.
        required: true
      tags:
      - Builder workflow actions
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/public_Builder_Workflow_Action_TypeBuilderWorkflowAction"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/element/{element_id}/":
    patch:
      operationId: update_builder_page_element
      description: Updates an existing builder element.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: element_id
        schema:
          type: integer
        description: The id of the element
        required: true
      tags:
      - Builder elements
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedElement_TypeUpdateElement"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedElement_TypeUpdateElement"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedElement_TypeUpdateElement"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Element_TypeElement"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_ELEMENT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_builder_page_element
      description: Deletes the element related by the given id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: element_id
        schema:
          type: integer
        description: The id of the element
        required: true
      tags:
      - Builder elements
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_ELEMENT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/element/{element_id}/duplicate/":
    post:
      operationId: duplicate_builder_page_element
      description: Duplicates an element and all of the elements children and the
        associated workflow actions as well.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: element_id
        schema:
          type: integer
        description: The id of the element to duplicate
        required: true
      tags:
      - Builder elements
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DuplicateElement"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_ELEMENT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/element/{element_id}/move/":
    patch:
      operationId: move_builder_page_element
      description: Moves the element in the page before another element or at the
        end of the page if no before element is given. The elements must belong to
        the same page.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: element_id
        schema:
          type: integer
        description: The id of the element to move
        required: true
      tags:
      - Builder elements
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedMoveElement"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedMoveElement"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedMoveElement"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Element_TypeElement"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_ELEMENT_NOT_IN_SAME_PAGE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_ELEMENT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/page/{page_id}/data-sources/":
    get:
      operationId: list_builder_page_data_sources
      description: Lists all the data_sources of the page related to the provided
        parameter if the user has access to the related builder's workspace. If the
        workspace is related to a template, then this endpoint will be publicly accessible.
      parameters:
      - in: path
        name: page_id
        schema:
          type: integer
        description: Returns only the data_sources of the page related to the provided
          Id.
        required: true
      tags:
      - Builder data sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Integration_ServiceDataSource"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_builder_page_data_source
      description: Creates a new builder data_source
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: Creates a data_source for the builder page related to the provided
          value.
        required: true
      tags:
      - Builder data sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Integration_ServiceCreateDataSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Integration_ServiceCreateDataSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Integration_ServiceCreateDataSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Integration_ServiceDataSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/page/{page_id}/dispatch-data-sources/":
    post:
      operationId: dispatch_builder_page_data_sources
      description: Dispatches the service of the related page data_sources
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: The page we want to dispatch the data source for.
        required: true
      tags:
      - Builder data sources
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SOURCE_IMPROPERLY_CONFIGURED
                    - ERROR_IN_DISPATCH_CONTEXT
                    - ERROR_DATA_DOES_NOT_EXIST
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/page/{page_id}/elements/":
    get:
      operationId: list_builder_page_elements
      description: Lists all the elements of the page related to the provided parameter
        if the user has access to the related builder's workspace. If the workspace
        is related to a template, then this endpoint will be publicly accessible.
      parameters:
      - in: path
        name: page_id
        schema:
          type: integer
        description: Returns only the elements of the page related to the provided
          Id.
        required: true
      tags:
      - Builder elements
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Element_TypeElement"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_builder_page_element
      description: Creates a new builder element
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: Creates an element for the builder page related to the provided
          value.
        required: true
      tags:
      - Builder elements
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Element_TypeCreateElement"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Element_TypeCreateElement"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Element_TypeCreateElement"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Element_TypeElement"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/page/{page_id}/workflow_actions/":
    get:
      operationId: list_builder_page_workflow_actions
      description: Lists all the workflow actions of the page related to the provided
        parameter if the user has access to the related builder's workspace. If the
        workspace is related to a template, then this endpoint will be publicly accessible.
      parameters:
      - in: path
        name: page_id
        schema:
          type: integer
        description: Returns only the workflow actions of the page related to the
          provided Id.
        required: true
      tags:
      - Builder workflow actions
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_builder_page_workflow_action
      description: Creates a new builder workflow action
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: Creates a workflow action for the builder page related to the
          provided value.
        required: true
      tags:
      - Builder workflow actions
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Builder_Workflow_Action_TypeCreateBuilderWorkflowAction"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/page/{page_id}/workflow_actions/order/":
    post:
      operationId: order_builder_workflow_actions
      description: Apply a new order to the workflow actions of a page
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: The page the workflow actions belong to
        required: true
      tags:
      - Builder workflow actions
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderWorkflowActions"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderWorkflowActions"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderWorkflowActions"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                    - ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST
                    - ERROR_WORKFLOW_ACTION_NOT_IN_ELEMENT
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/pages/{page_id}/":
    patch:
      operationId: update_builder_page
      description: Updates an existing page of an application builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: The id of the page
        required: true
      tags:
      - Builder pages
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdatePage"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdatePage"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdatePage"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Page"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_PAGE_NAME_NOT_UNIQUE
                    - ERROR_PAGE_PATH_NOT_UNIQUE
                    - ERROR_PATH_PARAM_NOT_IN_PATH
                    - ERROR_PATH_PARAM_NOT_DEFINED
                    - ERROR_SHARED_PAGE_READ_ONLY
                    - ERROR_INVALID_QUERY_PARAM_NAME
                    - ERROR_DUPLICATE_QUERY_PARAMS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_builder_page
      description: Deletes an existing page of an application builder
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: The id of the page
        required: true
      tags:
      - Builder pages
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_SHARED_PAGE_READ_ONLY
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/pages/{page_id}/duplicate/async/":
    post:
      operationId: duplicate_builder_page_async
      description: Start a job to duplicate the page with the provided `page_id` parameter
        if the authorized user has access to the builder's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: page_id
        schema:
          type: integer
        description: The page to duplicate.
        required: true
      tags:
      - Builder pages
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DuplicatePageJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PAGE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/workflow_action/{workflow_action_id}/":
    patch:
      operationId: update_builder_page_workflow_action
      description: Updates an existing builder workflow action.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workflow_action_id
        schema:
          type: integer
        description: The id of the workflow action
        required: true
      tags:
      - Builder workflow actions
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Builder_Workflow_Action_TypeBuilderWorkflowAction"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_builder_page_workflow_action
      description: Deletes the workflow action related by the given id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workflow_action_id
        schema:
          type: integer
        description: The id of the workflow action
        required: true
      tags:
      - Builder workflow actions
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_WORKFLOW_ACTION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/builder/workflow_action/{workflow_action_id}/dispatch/":
    post:
      operationId: dispatch_builder_page_workflow_action
      description: Dispatches the service of the related workflow_action and returns
        the result.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workflow_action_id
        schema:
          type: integer
        description: The id of the workflow_action you want to call the dispatch for.
        required: true
      tags:
      - Builder workflow actions
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_WORKFLOW_ACTION_CANNOT_BE_DISPATCHED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/dashboard/{dashboard_id}/data-sources/":
    get:
      operationId: list_dashboard_data_sources
      description: Lists all the data sources of the dashboard if the user has access
        to the related dashboard's workspace.
      parameters:
      - in: path
        name: dashboard_id
        schema:
          type: integer
        description: Returns only the data sources of the dashboard related to the
          provided Id.
        required: true
      tags:
      - Dashboard data sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Integration_ServiceDashboardDataSource"
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DASHBOARD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/dashboard/{dashboard_id}/widgets/":
    get:
      operationId: list_dashboard_widgets
      description: 'Lists all the widgets of the dashboard related to the provided
        parameter if the user has access to the related workspace. '
      parameters:
      - in: path
        name: dashboard_id
        schema:
          type: integer
        description: Returns only the widgets of the dashboard related to the provided
          Id.
        required: true
      tags:
      - Dashboard widgets
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Dashboard_WidgetWidget"
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DASHBOARD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_dashboard_widget
      description: Creates a new dashboard widget
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: dashboard_id
        schema:
          type: integer
        description: Creates a widget for the dashboard related to the provided value.
        required: true
      tags:
      - Dashboard widgets
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Dashboard_WidgetCreateWidget"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Dashboard_WidgetCreateWidget"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Dashboard_WidgetCreateWidget"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Dashboard_WidgetWidget"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_WIDGET_TYPE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DASHBOARD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/dashboard/data-sources/{data_source_id}/":
    patch:
      operationId: update_dashboard_data_source
      description: Updates an existing dashboard data source.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the dashboard data source.
        required: true
      tags:
      - Dashboard data sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDashboardDataSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDashboardDataSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedIntegration_ServiceUpdateDashboardDataSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Integration_ServiceDashboardDataSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_SERVICE_INVALID_TYPE
                    - ERROR_SERVICE_CONFIGURATION_NOT_ALLOWED
                    - ERROR_DASHBOARD_DATA_SOURCE_CANNOT_USE_SERVICE_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DASHBOARD_DATA_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/dashboard/data-sources/{data_source_id}/dispatch/":
    post:
      operationId: dispatch_dashboard_data_source
      description: Dispatches the service of the related data source and returns the
        result.
      parameters:
      - in: path
        name: data_source_id
        schema:
          type: integer
        description: The id of the data source you want to call the dispatch for
        required: true
      tags:
      - Dashboard data sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DASHBOARD_DATA_SOURCE_IMPROPERLY_CONFIGURED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DASHBOARD_DATA_SOURCE_DOES_NOT_EXIST
                    - ERROR_DASHBOARD_DATA_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/dashboard/widgets/{widget_id}/":
    patch:
      operationId: update_dashboard_widget
      description: Updates an existing dashboard widget.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: widget_id
        schema:
          type: integer
        description: The id of the widget
        required: true
      tags:
      - Dashboard widgets
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedDashboard_WidgetUpdateWidget"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedDashboard_WidgetUpdateWidget"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedDashboard_WidgetUpdateWidget"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Dashboard_WidgetWidget"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_WIDGET_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_dashboard_widget
      description: Deletes the widget related to the given id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: widget_id
        schema:
          type: integer
        description: The id of the widget
        required: true
      tags:
      - Dashboard widgets
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_PERMISSION_DENIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_WIDGET_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/data-sync/{data_sync_id}/periodic-interval/":
    get:
      operationId: get_periodic_data_sync_interval
      description: |-
        Responds with the periodic data sync interval data, if the user has the right permissions.
        This is an **enterprise** feature.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: The data sync where to fetch the periodic settings for.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PeriodicDataSyncInterval"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_periodic_data_sync_interval
      description: |-
        Updates the periodic data sync interval, if the user has the right permissions.
        This is an **enterprise** feature.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Updates the data sync related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedPeriodicDataSyncInterval"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedPeriodicDataSyncInterval"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedPeriodicDataSyncInterval"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PeriodicDataSyncInterval"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/data-sync/{data_sync_id}/":
    get:
      operationId: get_table_data_sync
      description: Responds with the data sync, including the data sync type specific
        properties, if the user has the right permissions.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: The data sync that must be fetched.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Data_SyncDataSync"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_table_data_sync
      description: Updates the properties of the provided data sync, if the user has
        the right permissions. Note that if the `synced_properties` is not provided,
        the available properties change, then the unavailable ones will automatically
        be removed.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Updates the data sync related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedData_SyncUpdateDataSync"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedData_SyncUpdateDataSync"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedData_SyncUpdateDataSync"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DataSync"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_PROPERTY_NOT_FOUND
                    - ERROR_SYNC_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/data-sync/{data_sync_id}/properties/":
    get:
      operationId: get_table_data_sync_properties
      description: Lists all the available properties of the provided data sync.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Lists properties related to the provided ID.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ListDataSyncProperty"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SYNC_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/data-sync/{data_sync_id}/sync/async/":
    post:
      operationId: sync_data_sync_table_async
      description: Start a job to sync the data sync table with the provided `data_sync_id`
        parameter if the authorized user has access to the database's workspace.
      parameters:
      - in: path
        name: data_sync_id
        schema:
          type: integer
        description: Starts a job to sync the data sync table related to the provided
          value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SyncDataSyncTableJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DATA_SYNC_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/data-sync/database/{database_id}/":
    post:
      operationId: create_database_data_sync_table
      description: Creates a new data sync table with the given data sync type. This
        will technically create a table, but it's synchronized with the provided data
        sync information. This means that some fields related to it will automatically
        be created and will be read-only.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Creates a data sync table for the database related to theprovided
          value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Data_SyncCreateDataSync"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Data_SyncCreateDataSync"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Data_SyncCreateDataSync"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Table"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_SYNC_ERROR
                    - ERROR_PROPERTY_NOT_FOUND
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/data-sync/properties/":
    post:
      operationId: get_table_data_sync_type_properties
      description: Lists all the properties of the provided data sync type given the
        request data. This can be used to choose which properties should be included
        when creating the data sync.
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Data_SyncListDataSyncPropertiesRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Data_SyncListDataSyncPropertiesRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Data_SyncListDataSyncPropertiesRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ListDataSyncProperty"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SYNC_ERROR
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/export/{job_id}/":
    get:
      operationId: get_export_job
      description: Returns information such as export progress and state or the url
        of the exported file for the specified export job, only if the requesting
        user has access.
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        description: The job id to lookup information about.
        required: true
      tags:
      - Database table export
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportJob"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_EXPORT_JOB_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/export/table/{table_id}/":
    post:
      operationId: export_table
      description: Creates and starts a new export job for a table given some exporter
        options. Returns an error if the requesting user does not have permissionsto
        view the table.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table id to create and start an export job for
        required: true
      tags:
      - Database table export
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Export"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Export"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Export"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportJob"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_TABLE_ONLY_EXPORT_UNSUPPORTED
                    - ERROR_VIEW_UNSUPPORTED_FOR_EXPORT_TYPE
                    - ERROR_VIEW_NOT_IN_TABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/{field_id}/":
    get:
      operationId: get_database_table_field
      description: Returns the existing field if the authorized user has access to
        the related database's workspace. Depending on the type different properties
        could be returned.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: Returns the field related to the provided value.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldField"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_field
      description: Updates the existing field if the authorized user has access to
        the related database's workspace. The type can also be changed and depending
        on that type, different additional properties can optionally be set. If you
        change the field type it could happen that the data conversion fails, in that
        case the `ERROR_CANNOT_CHANGE_FIELD_TYPE` is returned, but this rarely happens.
        If a data value cannot be converted it is set to `null` so data might go lost.If
        updated the field causes other fields to change then the specificinstances
        of those fields will be included in the related fields response key.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: Updates the field related to the provided value.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedFieldUpdateField"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedFieldUpdateField"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedFieldUpdateField"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldFieldSerializerWithRelatedFields"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_CHANGE_FIELD_TYPE
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_RESERVED_BASEROW_FIELD_NAME
                    - ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS
                    - ERROR_INVALID_BASEROW_FIELD_NAME
                    - ERROR_FIELD_SELF_REFERENCE
                    - ERROR_FIELD_CIRCULAR_REFERENCE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_field
      description: Deletes the existing field if the authorized user has access to
        the related database's workspace. Note that all the related data to that field
        is also deleted. Primary fields cannot be deleted because their value represents
        the row. If deleting the field causes other fields to change then the specificinstances
        of those fields will be included in the related fields response key.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: Deletes the field related to the provided value.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RelatedFields"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_PRIMARY_FIELD
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/{field_id}/duplicate/async/":
    post:
      operationId: duplicate_table_field
      description: Duplicates the table with the provided `table_id` parameter if
        the authorized user has access to the database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field to duplicate.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DuplicateFieldJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/{field_id}/generate-ai-field-values/":
    post:
      operationId: generate_table_ai_field_value
      description: "Endpoint that's used by the AI field to start an sync task that
        will update the cell value of the provided row IDs based on the dynamically
        constructed prompt configured in the field settings. \nThis is a **premium**
        feature."
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field to generate the value for.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GENERATIVE_AI_DOES_NOT_EXIST
                    - ERROR_MODEL_DOES_NOT_BELONG_TO_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/{field_id}/unique_row_values/":
    get:
      operationId: get_database_field_unique_row_values
      description: Returns a list of all the unique row values for an existing field,
        sorted in order of frequency.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: Returns the values related to the provided field.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many values should be returned.
      - in: query
        name: split_comma_separated
        schema:
          type: boolean
        description: Indicates whether the original column values must be splitted
          by comma.
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UniqueRowValues"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/table/{table_id}/":
    get:
      operationId: list_database_table_fields
      description: Lists all the fields of the table related to the provided parameter
        if the user has access to the related database's workspace. If the workspace
        is related to a template, then this endpoint will be publicly accessible.
        A table consists of fields and each field can have a different type. Each
        type can have different properties. A field is comparable with a regular table's
        column.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns only the fields of the table related to the provided
          value.
        required: true
      tags:
      - Database table fields
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FieldField"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_field
      description: Creates a new field for the table related to the provided `table_id`
        parameter if the authorized user has access to the related database's workspace.
        Depending on the type, different properties can optionally be set.If creating
        the field causes other fields to change then the specificinstances of those
        fields will be included in the related fields response key.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a new field for the provided table related to the value.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/FieldCreateField"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/FieldCreateField"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/FieldCreateField"
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldFieldSerializerWithRelatedFields"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_FIELD_COUNT_EXCEEDED
                    - ERROR_RESERVED_BASEROW_FIELD_NAME
                    - ERROR_FIELD_WITH_SAME_NAME_ALREADY_EXISTS
                    - ERROR_INVALID_BASEROW_FIELD_NAME
                    - ERROR_FIELD_SELF_REFERENCE
                    - ERROR_FIELD_CIRCULAR_REFERENCE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/table/{table_id}/change-primary-field/":
    post:
      operationId: change_primary_field
      description: Changes the primary field of a table to the one provided in the
        body payload.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table where to update the primary field in.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangePrimaryFieldParams"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ChangePrimaryFieldParams"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ChangePrimaryFieldParams"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldField"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FIELD_IS_ALREADY_PRIMARY
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_INCOMPATIBLE_PRIMARY_FIELD_TYPE
                    - ERROR_TABLE_HAS_NO_PRIMARY_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/fields/table/{table_id}/generate-ai-formula/":
    post:
      operationId: generate_formula_with_ai
      description: |-
        This endpoint generates a Baserow formula for the table related to the provided id, based on the human readable input provided in the request body.
        This is a **premium** feature.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table to generate the formula for.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GenerateFormulaWithAIRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/GenerateFormulaWithAIRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/GenerateFormulaWithAIRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GenerateFormulaWithAIResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GENERATIVE_AI_DOES_NOT_EXIST
                    - ERROR_MODEL_DOES_NOT_BELONG_TO_TYPE
                    - ERROR_OUTPUT_PARSER
                    - ERROR_GENERATIVE_AI_PROMPT
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/formula/{table_id}/type/":
    post:
      operationId: type_formula_field
      description: Calculates and returns the type of the specified formula value.
        Does not change the state of the field in any way.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table id of the formula field to type.
        required: true
      tags:
      - Database table fields
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TypeFormulaRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TypeFormulaRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TypeFormulaRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TypeFormulaResult"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_WITH_FORMULA
                    - ERROR_FIELD_SELF_REFERENCE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/names/":
    get:
      operationId: list_database_table_row_names
      description: Returns the names of the given row of the given tables. The nameof
        a row is the primary field value for this row. The result can be usedfor example,
        when you want to display the name of a linked row from another table.
      parameters:
      - in: query
        name: table__{id}
        schema:
          type: string
        description: A list of comma separated row ids to query from the table with
          id {id}. For example, if you want the name of row `42` and `43` from table
          `28` this parameter will be `table__28=42,43`. You can specify multiple
          rows for different tables but every tables must be in the same database.
          You need at least read permission on all specified tables.
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  "{table_id}*":
                    type: object
                    description: An object containing the row names of table `table_id`.
                    properties:
                      "{row_id}*":
                        type: string
                        description: the name of the row with id `row_id` from table
                          with id `table_id`.
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/":
    get:
      operationId: list_database_table_rows
      description: Lists all the rows of the table related to the provided parameter
        if the user has access to the related database's workspace. The response is
        paginated by a page/size style. It is also possible to provide an optional
        search query, only rows where the data matches the search query are going
        to be returned then. The properties of the returned rows depends on which
        fields the table has. For a complete overview of fields use the **list_database_table_fields**
        endpoint to list them all. In the example all field types are listed, but
        normally the number in field_{id} key is going to be the id of the field.
        Or if the GET parameter `user_field_names` is provided then the keys will
        be the name of the field. The value is what the user has provided and the
        format of it depends on the fields type.
      parameters:
      - in: query
        name: exclude
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the exclude query parameter.
          If you for example provide the following GET parameter `exclude=field_1,field_2`
          then the fields with id `1` and id `2` are going to be excluded from the
          selection and response. If the `user_field_names` parameter is provided
          then instead exclude should be a comma separated list of the actual field
          names. For field names with commas you should surround the name with quotes
          like so: `exclude=My Field,"Field With , "`. A backslash can be used to
          escape field names which contain double quotes like so: `exclude=My Field,Field
          with \"`.'
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the include query parameter.
          If you for example provide the following GET parameter `include=field_1,field_2`
          then only the fields withid `1` and id `2` are going to be selected and
          included in the response. If the `user_field_names` parameter is provided
          then instead include should be a comma separated list of the actual field
          names. For field names with commas you should surround the name with quotes
          like so: `include=My Field,"Field With , "`. A backslash can be used to
          escape field names which contain double quotes like so: `include=My Field,Field
          with \"`.'
      - in: query
        name: order_by
        schema:
          type: string
        description: 'Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a ''-'' it can be ordered descending (Z-A). If
          the `user_field_names` parameter is provided then instead order_by should
          be a comma separated list of the actual field names. For field names with
          commas you should surround the name with quotes like so: `order_by=My Field,"Field
          With , "`. A backslash can be used to escape field names which contain double
          quotes like so: `order_by=My Field,Field with \"`.'
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many rows should be returned per page.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the rows of the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          the returned JSON to use the user-specified field names instead of the internal
          Baserow field names (e.g., field_123).'
      - in: query
        name: view_id
        schema:
          type: integer
        description: Includes all the filters and sorts of the provided view.
      - in: query
        name: "{link_row_field}__join={target_field},{target_field2}"
        schema:
          type: string
        description: This parameter allows you to request a lookup of field values
          from a target table through existing link row fields. The parameter name
          has to be the name of an existing link row field, followed by `__join`.
          The value should be a list of field names for which we want to lookup additional
          values. You can provide one or multiple target fields. It is not possible
          to lookup a value of a link row field in the target table. If `user_field_names`
          parameter is set, the names of the fields should be user field names. In
          this case the resulting field names in the output will also be user field
          names. The used link row field has to be among the requested fields if using
          the `include` or `exclude` parameters.
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerExampleRowResponseSerializerWithUserFieldNames"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_PAGE_SIZE_LIMIT
                    - ERROR_INVALID_PAGE
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_row
      description: Creates a new row in the table if the user has access to the related
        table's workspace. The accepted body fields are depending on the fields that
        the table has. For a complete overview of fields use the **list_database_table_fields**
        to list them all. None of the fields are required, if they are not provided
        the value is going to be `null` or `false` or some default value is that is
        set. If you want to add a value for the field with for example id `10`, the
        key must be named `field_10`. Or instead if the `user_field_names` GET param
        is provided the key must be the name of the field. Of course multiple fields
        can be provided in one request. In the examples below you will find all the
        different field types, the numbers/ids in the example are just there for example
        purposes, the field_ID must be replaced with the actual id of the field or
        the name of the field if `user_field_names` is provided.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: before
        schema:
          type: integer
        description: If provided then the newly created row will be positioned before
          the row with the provided id.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a row in the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          this endpoint to expect and return the user-specified field names instead
          of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/{row_id}/":
    get:
      operationId: get_database_table_row
      description: Fetches an existing row from the table if the user has access to
        the related table's workspace. The properties of the returned row depend on
        which fields the table has. For a complete overview of fields use the **list_database_table_fields**
        endpoint to list them all. In the example all field types are listed, but
        normally the number in field_{id} key is going to be the id of the field of
        the field. Or if the GET parameter `user_field_names` is provided then the
        keys will be the name of the field. The value is what the user has provided
        and the format of it depends on the fields type.
      parameters:
      - in: query
        name: include
        schema:
          type: string
        description: Optionally include row's `metadata` in the response. The `metadata`
          object includes extra row specific data like the 'row_comments_notification_mode'
          settings, if available.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Returns the row related the provided value.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the row of the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          the returned JSON to use the user-specified field names instead of the internal
          Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_row
      description: Updates an existing row in the table if the user has access to
        the related table's workspace. The accepted body fields are depending on the
        fields that the table has. For a complete overview of fields use the **list_database_table_fields**
        endpoint to list them all. None of the fields are required, if they are not
        provided the value is not going to be updated. When you want to update a value
        for the field with id `10`, the key must be named `field_10`. Or if the GET
        parameter `user_field_names` is provided the key of the field to update must
        be the name of the field. Multiple different fields to update can be provided
        in one request. In the examples below you will find all the different field
        types, the numbers/ids in the example are just there for example purposes,
        the field_ID must be replaced with the actual id of the field or the name
        of the field if `user_field_names` is provided.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Updates the row related to the value.
        required: true
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the row in the table related to the value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          this endpoint to expect and return the user-specified field names instead
          of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedExampleUpdateRowRequestSerializerWithUserFieldNames"
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_row
      description: Deletes an existing row in the table if the user has access to
        the table's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Deletes the row related to the value.
        required: true
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Deletes the row in the table related to the value.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/{row_id}/adjacent/":
    get:
      operationId: get_adjacent_database_table_row
      description: Fetches the adjacent row to a given row_id in the table with the
        given table_id. If the previous flag is set it will return the previous row,
        otherwise it will return the next row. You can specifya view_id and it will
        apply the filters and sorts of the provided view.
      parameters:
      - in: query
        name: previous
        schema:
          type: boolean
        description: A flag query parameter which if provided returns theprevious
          row to the specified row_id. If it's not setit will return the next row.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Returns the row adjacent the provided value.
        required: true
      - in: query
        name: search
        schema:
          type: string
        description: If provided, the adjacent row will be one that matchesthe search
          query.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the row of the table related to the provided value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          the returned JSON to use the user-specified field names instead of the internal
          Baserow field names (e.g., field_123).'
      - in: query
        name: view_id
        schema:
          type: integer
        description: Applies the filters and sorts of the provided view.
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
          description: ''
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/{row_id}/history/":
    get:
      operationId: get_database_table_row_history
      description: Fetches the row change history of a given row_id in the table with
        the given table_id. The row change history is paginated and can be limited
        with the limit and offset query parameters.
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: The maximum number of row change history entries to return.
      - in: query
        name: offset
        schema:
          type: integer
        description: The offset of the row change history entries to return.
      - in: path
        name: row_id
        schema:
          type: integer
        description: The id of the row to fetch the change history from.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: The id of the table to fetch the row change history from.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerRowHistory"
          description: ''
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/{row_id}/move/":
    patch:
      operationId: move_database_table_row
      description: Moves the row related to given `row_id` parameter to another position.
        It is only possible to move the row before another existing row or to the
        end. If the `before_id` is provided then the row related to the `row_id` parameter
        is moved before that row. If the `before_id` parameter is not provided, then
        the row will be moved to the end.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: before_id
        schema:
          type: integer
        description: Moves the row related to the given `row_id` before the row related
          to the provided value. If not provided, then the row will be moved to the
          end.
      - in: path
        name: row_id
        schema:
          type: integer
        description: Moves the row related to the value.
        required: true
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Moves the row in the table related to the value.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          the returned JSON to use the user-specified field names instead of the internal
          Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/batch/":
    post:
      operationId: batch_create_database_table_rows
      description: |-
        Creates new rows in the table if the user has access to the related table's workspace. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** to list them all. None of the fields are required, if they are not provided the value is going to be `null` or `false` or some default value is that is set. If you want to add a value for the field with for example id `10`, the key must be named `field_10`. Or instead if the `user_field_names` GET param is provided the key must be the name of the field. Of course multiple fields can be provided in one request. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.

         **WARNING:** This endpoint doesn't yet work with row created webhooks.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: before
        schema:
          type: integer
        description: If provided then the newly created rows will be positioned before
          the row with the provided id.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates the rows in the table.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          this endpoint to expect and return the user-specified field names instead
          of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExampleBatchRowsRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ExampleBatchRowsRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ExampleBatchRowsRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleBatchRowsResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_ROW_IDS_NOT_UNIQUE
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: batch_update_database_table_rows
      description: |-
        Updates existing rows in the table if the user has access to the related table's workspace. The accepted body fields are depending on the fields that the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. None of the fields are required, if they are not provided the value is not going to be updated. When you want to update a value for the field with id `10`, the key must be named `field_10`. Or if the GET parameter `user_field_names` is provided the key of the field to update must be the name of the field. Multiple different fields to update can be provided for each row. In the examples below you will find all the different field types, the numbers/ids in the example are just there for example purposes, the field_ID must be replaced with the actual id of the field or the name of the field if `user_field_names` is provided.

         **WARNING:** This endpoint doesn't yet work with row updated webhooks.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the rows in the table.
        required: true
      - in: query
        name: user_field_names
        schema:
          type: boolean
        description: 'A flag query parameter that, if provided with one of the following
          values: `y`, `yes`, `true`, `t`, `on`, `1`, or an empty value, will cause
          this endpoint to expect and return the user-specified field names instead
          of the internal Baserow field names (e.g., field_123).'
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedExampleBatchUpdateRowsRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedExampleBatchUpdateRowsRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedExampleBatchUpdateRowsRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExampleBatchRowsResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_ROW_IDS_NOT_UNIQUE
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/rows/table/{table_id}/batch-delete/":
    post:
      operationId: batch_delete_database_table_rows
      description: |-
        Deletes existing rows in the table if the user has access to the table's workspace.

         **WARNING:**  This endpoint doesn't yet work with row deleted webhooks.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: send_webhook_events
        schema:
          type: boolean
        description: A flag query parameter that triggers webhooks after the operation,
          if set to `y`, `yes`, `true`, `t`, `on`, `1`, `or` left empty. Defaults
          to `true`
      - in: path
        name: table_id
        schema:
          type: integer
        description: Deletes the rows in the table related to the value.
        required: true
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BatchDeleteRows"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BatchDeleteRows"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BatchDeleteRows"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                    - ERROR_ROW_IDS_NOT_UNIQUE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tables/{table_id}/":
    get:
      operationId: get_database_table
      description: Returns the requested table if the authorized user has access to
        the related database's workspace.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns the table related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Table"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table
      description: Updates the existing table if the authorized user has access to
        the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the table related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedTableUpdate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedTableUpdate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedTableUpdate"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Table"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table
      description: Deletes the existing table if the authorized user has access to
        the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Deletes the table related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tables/{table_id}/duplicate/async/":
    post:
      operationId: duplicate_database_table_async
      description: Start a job to duplicate the table with the provided `table_id`
        parameter if the authorized user has access to the database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table to duplicate.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DuplicateTableJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tables/{table_id}/import/async/":
    post:
      operationId: import_data_database_table_async
      description: Import data in the specified table if the authorized user has access
        to the related database's workspace. This endpoint is asynchronous and return
        the created job to track the progress of the task.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Import data into the table related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TableImport"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TableImport"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TableImport"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FileImportJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tables/database/{database_id}/":
    get:
      operationId: list_database_tables
      description: Lists all the tables that are in the database related to the `database_id`
        parameter if the user has access to the database's workspace. A table is exactly
        as the name suggests. It can hold multiple fields, each having their own type
        and multiple rows. They can be added via the **create_database_table_field**
        and **create_database_table_row** endpoints.
      parameters:
      - in: path
        name: database_id
        schema:
          type: integer
        description: Returns only tables that are related to the provided value.
        required: true
      tags:
      - Database tables
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Table"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table
      description: |-
        Creates synchronously a new table for the database related to the provided `database_id` parameter if the authorized user has access to the database's workspace.

        As an alternative you can use the `create_async_database_table` for better performances and importing bigger files.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Creates a table for the database related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TableCreate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TableCreate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TableCreate"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Table"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_INVALID_INITIAL_TABLE_DATA
                    - ERROR_INITIAL_TABLE_DATA_LIMIT_EXCEEDED
                    - ERROR_RESERVED_BASEROW_FIELD_NAME
                    - ERROR_INITIAL_TABLE_DATA_HAS_DUPLICATE_NAMES
                    - ERROR_INVALID_BASEROW_FIELD_NAME
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tables/database/{database_id}/async/":
    post:
      operationId: create_database_table_async
      description: Creates a job that creates a new table for the database related
        to the provided `database_id` parameter if the authorized user has access
        to the database's workspace. This endpoint is asynchronous and return the
        created job to track the progress of the task.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Creates a table for the database related to the provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TableCreate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TableCreate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TableCreate"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FileImportJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tables/database/{database_id}/order/":
    post:
      operationId: order_database_tables
      description: Changes the order of the provided table ids to the matching position
        that the id has in the list. If the authorized user does not belong to the
        workspace it will be ignored. The order of the not provided tables will be
        set to `0`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: database_id
        schema:
          type: integer
        description: Updates the order of the tables in the database related to the
          provided value.
        required: true
      tags:
      - Database tables
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderTables"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderTables"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderTables"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TABLE_NOT_IN_DATABASE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tokens/":
    get:
      operationId: list_database_tokens
      description: Lists all the database tokens that belong to the authorized user.
        A token can be used to create, read, update and delete rows in the tables
        of the token's workspace. It only works on the tables if the token has the
        correct permissions. The **Database table rows** endpoints can be used for
        these operations.
      tags:
      - Database tokens
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Token"
          description: ''
    post:
      operationId: create_database_token
      description: Creates a new database token for a given workspace and for the
        authorized user.
      tags:
      - Database tokens
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenCreate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenCreate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenCreate"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tokens/{token_id}/":
    get:
      operationId: get_database_token
      description: Returns the requested database token if it is owned by the authorized
        user andif the user has access to the related workspace.
      parameters:
      - in: path
        name: token_id
        schema:
          type: integer
        description: Returns the database token related to the provided value.
        required: true
      tags:
      - Database tokens
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_token
      description: Updates the existing database token if it is owned by the authorized
        user and ifthe user has access to the related workspace.
      parameters:
      - in: path
        name: token_id
        schema:
          type: integer
        description: Updates the database token related to the provided value.
        required: true
      tags:
      - Database tokens
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedTokenUpdate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedTokenUpdate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedTokenUpdate"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Token"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_DATABASE_DOES_NOT_BELONG_TO_GROUP
                    - ERROR_TABLE_DOES_NOT_BELONG_TO_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_token
      description: Deletes the existing database token if it is owned by the authorized
        user and ifthe user has access to the related workspace.
      parameters:
      - in: path
        name: token_id
        schema:
          type: integer
        description: Deletes the database token related to the provided value.
        required: true
      tags:
      - Database tokens
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/tokens/check/":
    get:
      operationId: check_database_token
      description: This endpoint check be used to check if the provided personal API
        token is valid. If returns a `200` response if so and a `403` is not. This
        can be used by integrations like Zapier or n8n to test if a token is valid.
      tags:
      - Database tokens
      security:
      - Database token: []
      responses:
        '200':
          description: No response body
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TOKEN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/view/{slug}/export-public-view/":
    post:
      operationId: export_publicly_shared_view
      description: |-
        Creates and starts a new export job for a publicly shared view  given some exporter options. Returns an error if the view doesn't support exporting.

        This is a **premium** feature.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: Select the view you want to export.
        required: true
      tags:
      - Database table view export
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Export"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Export"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Export"
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportJob"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_TABLE_ONLY_EXPORT_UNSUPPORTED
                    - ERROR_VIEW_UNSUPPORTED_FOR_EXPORT_TYPE
                    - ERROR_VIEW_NOT_IN_TABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/view/{view_id}/premium":
    patch:
      operationId: premium_view_attributes_update
      description: Sets view attributes only available for premium users.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Sets show_logo of this view.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdatePremiumViewAttributes"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdatePremiumViewAttributes"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdatePremiumViewAttributes"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/View"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_CANNOT_UPDATE_PREMIUM_ATTRIBUTES_ON_TEMPLATE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/view/get-public-view-export/{job_id}/":
    get:
      operationId: get_public_view_export_job
      description: |-
        Returns information such as export progress and state or the url of the exported file for the specified export job, only if the requesting user has access.

        This is a **premium** feature.
      parameters:
      - in: path
        name: job_id
        schema:
          type: string
        description: The signed job id to lookup information about.
        required: true
      tags:
      - Database table view export
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportJob"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_EXPORT_JOB_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{slug}/link-row-field-lookup/{field_id}/":
    get:
      operationId: database_table_public_view_link_row_field_lookup
      description: If the view is publicly shared or if an authenticated user has
        access to the related workspace, then this endpoint can be used to do a value
        lookup of the link row fields that are included in the view. Normally it is
        not possible for a not authenticated visitor to fetch the rows of a table.
        This endpoint makes it possible to fetch the id and primary field value of
        the related table of a link row included in the view.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field id of the link row field.
        required: true
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: slug
        schema:
          type: string
        description: The slug related to the view.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerLinkRowValue"
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{slug}/public/auth/":
    post:
      operationId: public_view_token_auth
      description: Returns a valid never-expiring JWT token for this public shared
        view if the password provided matches with the one saved by the view's owner.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug of the grid view to get public information about.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PublicViewAuthRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PublicViewAuthRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PublicViewAuthRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicViewAuthResponse"
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: The password provided for this view is incorrect
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{slug}/public/info/":
    get:
      operationId: get_public_view_info
      description: Returns the required public information to display a single shared
        view.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug of the view to get public information about.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicViewInfo"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/":
    get:
      operationId: get_database_table_view
      description: Returns the existing view. Depending on the type different properties
        could be returned.
      parameters:
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on the
          returned view. The supported attributes are `filters`, `sortings` and `decorations`.
          For example `include=filters,sortings` will add the attributes `filters`
          and `sortings` to every returned view, containing a list of the views filters
          and sortings respectively.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view
      description: Updates the existing view. The type cannot be changed. It depends
        on the existing type which properties can be changed.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on the
          returned view. The supported attributes are `filters`, `sortings` and `decorations`.
          For example `include=filters,sortings` will add the attributes `filters`
          and `sortings` to every returned view, containing a list of the views filters
          and sortings respectively.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Updates the view related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedViewUpdateView"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedViewUpdateView"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedViewUpdateView"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view
      description: Deletes the existing view. Note that all the related settings of
        the view are going to be deleted also. The data stays intact after deleting
        the view because this is related to the table and not the view.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Deletes the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/decorations/":
    get:
      operationId: list_database_table_view_decorations
      description: Lists all decorations of the view related to the provided `view_id`
        if the user has access to the related database's workspace. A view can have
        multiple decorations. View decorators can be used to decorate rows. This can,
        for example, be used to change the border or background color of a row if
        it matches certain conditions.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only decoration of the view given to the provided value.
        required: true
      tags:
      - Database table view decorations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_decoration
      description: Creates a new decoration for the view related to the provided `view_id`
        parameter if the authorized user has access to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a decoration for the view related to the given value.
        required: true
      tags:
      - Database table view decorations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Decorator_Value_Provider_TypeCreateViewDecoration"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/duplicate/":
    post:
      operationId: duplicate_database_table_view
      description: |-
        Duplicates an existing view if the user has access to it. When a view is duplicated everything is copied except:
        - The name is appended with the copy number. Ex: `ViewName`->`ViewName(2)` and `View(2)`->`View(3)`
        - If the original view is publicly shared, the new view will not be shared anymore
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Duplicates the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/field-options/":
    get:
      operationId: get_database_table_view_field_options
      description: Responds with the fields options of the provided view if the authenticated
        user has access to the related workspace.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Responds with field options related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFieldOptions"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_field_options
      description: Updates the field options of a view. The field options differ per
        field type  This could for example be used to update the field width of a
        `grid` view if the user changes it.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Updates the field options related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedViewFieldOptions"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedViewFieldOptions"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedViewFieldOptions"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFieldOptions"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_VIEW_DOES_NOT_SUPPORT_FIELD_OPTIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/filter-groups/":
    post:
      operationId: create_database_table_view_filter_group
      description: Creates a new filter group for the view related to the provided
        `view_id` parameter.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: The ID of the view where create the new filter group.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateViewFilterGroup"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreateViewFilterGroup"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreateViewFilterGroup"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFilterGroup"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/filters/":
    get:
      operationId: list_database_table_view_filters
      description: Lists all filters of the view related to the provided `view_id`.
        A view can have multiple filters. When all the rows are requested for the
        view only those that apply to the filters are returned.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only filters of the view related to the provided value.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ViewFilter"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_filter
      description: Creates a new filter for the view related to the provided `view_id`
        parameter. When the rows of a view are requested, for example via the `list_database_table_grid_view_rows`
        endpoint, then only the rows that apply to all the filters are going to be
        returned. A filter compares the value of a field to the value of a filter.
        It depends on the type how values are going to be compared.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a filter for the view related to the provided value.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateViewFilter"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreateViewFilter"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreateViewFilter"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFilter"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_FILTER_NOT_SUPPORTED
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/group_bys/":
    get:
      operationId: list_database_table_view_groupings
      description: Lists all groupings of the view related to the provided `view_id`
        if the user has access to the related database's workspace. A view can have
        multiple groupings.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only groupings of the view related to the provided value.
        required: true
      tags:
      - Database table view groupings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ViewGroupBy"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_group
      description: Creates a new group by for the view related to the provided `view_id`
        parameter if the authorized user has access to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a group by for the view related to the provided value.
        required: true
      tags:
      - Database table view groupings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateViewGroupBy"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreateViewGroupBy"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreateViewGroupBy"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewGroupBy"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_VIEW_GROUP_BY_NOT_SUPPORTED
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS
                    - ERROR_VIEW_GROUP_BY_FIELD_NOT_SUPPORTED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/rotate-slug/":
    post:
      operationId: rotate_database_view_slug
      description: Rotates the unique slug of the view by replacing it with a new
        value. This would mean that the publicly shared URL of the view will change.
        Anyone with the old URL won't be able to access the viewanymore. Only view
        types which are sharable can have their slugs rotated.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Rotates the slug of the view related to the provided value.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_SHARE_VIEW_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/{view_id}/sortings/":
    get:
      operationId: list_database_table_view_sortings
      description: Lists all sortings of the view related to the provided `view_id`
        if the user has access to the related database's workspace. A view can have
        multiple sortings. When all the rows are requested they will be in the desired
        order.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only sortings of the view related to the provided value.
        required: true
      tags:
      - Database table view sortings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ViewSort"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view_sort
      description: Creates a new sort for the view related to the provided `view_id`
        parameter if the authorized user has access to the related database's workspace.
        When the rows of a view are requested, for example via the `list_database_table_grid_view_rows`
        endpoint, they will be returned in the respected order defined by all the
        sortings.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Creates a sort for the view related to the provided value.
        required: true
      tags:
      - Database table view sortings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateViewSort"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreateViewSort"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreateViewSort"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewSort"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_VIEW_SORT_NOT_SUPPORTED
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS
                    - ERROR_VIEW_SORT_FIELD_NOT_SUPPORTED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/calendar/{ical_slug}.ics":
    get:
      operationId: calendar_ical_feed
      description: Returns ICal feed for a specific Calendar view identified by ical_slug
        value. Calendar View resource contains full url in .ical_feed_url field.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: ical_slug
        schema:
          type: string
        description: ICal feed unique slug.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            text/calendar:
              schema:
                type: string
                format: binary
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/calendar/{slug}/public/rows/":
    get:
      operationId: public_list_database_table_calendar_view_rows
      description: "Responds with serialized rows grouped by the view's date field
        options related to the `slug` if the calendar view is publicly shared. Additional
        query parameters can be provided to control the `limit` and `offset` per select
        option. \n\nThis is a **premium** feature."
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: from_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows per day should be returned by default.
          This value can be overwritten per select option.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines from which offset the rows should be returned.This value
          can be overwritten per select option.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      - in: query
        name: to_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: user_timezone
        schema:
          type: string
          default: UTC
        description: 'User''s timezone will be taken into account for date fieldtypes
          that have a time and don''t enforce a timezone. The timezone will be used
          for aggregating the dates. For date fields without a time this will be ignored
          and UTC will be forced. '
      tags:
      - Database table calendar view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarViewExampleResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/calendar/{view_id}/":
    get:
      operationId: list_database_table_calendar_view_rows
      description: |-
        Responds with serialized rows grouped by date regarding view's date fieldif the user is authenticated and has access to the related workspace.

        This is a **premium** feature.
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n\n\n**Please note that by
          passing the filter parameters the view filters saved for the view itself
          will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**\n\n**Please note that by passing the filters parameter the
          view filters saved for the view itself will be ignored.**"
      - in: query
        name: from_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          and `row_metadata` which will add the object/objects with the same name
          to the response if included. The `field_options` object contains user defined
          view settings for each field. For example the field's width is included
          in here. The `row_metadata` object includes extra row specific data on a
          per row basis.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows per day should be returned by default.
          This value can be overwritten per select option.
      - in: query
        name: offset
        schema:
          type: integer
          default: 0
        description: Defines from which offset the rows should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: to_timestamp
        schema:
          type: string
          format: date-time
        description: Restricts results based on the calendar date field.
        required: true
      - in: query
        name: user_timezone
        schema:
          type: string
          default: UTC
        description: 'User''s timezone will be taken into account for date fieldtypes
          that have a time and don''t enforce a timezone. The timezone will be used
          for aggregating the dates. For date fields without a time this will be ignored
          and UTC will be forced. '
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table calendar view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CalendarViewExampleResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CALENDAR_VIEW_HAS_NO_DATE_FIELD
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/calendar/{view_id}/ical_slug_rotate/":
    post:
      operationId: rotate_calendar_view_ical_feed_slug
      description: Rotates the unique slug of the calendar view's ical feed by replacing
        it with a new value. This would mean that the publicly shared URL of the view
        will change. Anyone with the old URL won't be able to access the view anymore.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Rotates the ical feed slug of the calendar view related to the
          provided id.
        required: true
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_SHARE_VIEW_TYPE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/decoration/{view_decoration_id}/":
    get:
      operationId: get_database_table_view_decoration
      description: Returns the existing view decoration if the current user has access
        to the related database's workspace.
      parameters:
      - in: path
        name: view_decoration_id
        schema:
          type: integer
        description: Returns the view decoration related to the provided id.
        required: true
      tags:
      - Database table view decorations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_decoration
      description: Updates the existing decoration if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_decoration_id
        schema:
          type: integer
        description: Updates the view decoration related to the provided value.
        required: true
      tags:
      - Database table view decorations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedDecorator_Value_Provider_TypeUpdateViewDecoration"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Decorator_Value_Provider_TypeViewDecoration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_decoration
      description: Deletes the existing decoration if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_decoration_id
        schema:
          type: integer
        description: Deletes the decoration related to the provided value.
        required: true
      tags:
      - Database table view decorations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DECORATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/filter-group/{filter_group_id}/":
    get:
      operationId: get_database_table_view_filter_group
      description: Returns the existing view filter group with the given `view_filter_group_id`.
      parameters:
      - in: path
        name: filter_group_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      - in: path
        name: view_filter_group_id
        schema:
          type: integer
        description: Teh ID of the view filter group to return.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFilterGroup"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_filter_group
      description: Updates the existing filter group with the given `view_filter_group_id`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: filter_group_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      - in: path
        name: view_filter_group_id
        schema:
          type: integer
        description: The ID of the view filter group to update.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewFilterGroup"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewFilterGroup"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewFilterGroup"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFilterGroup"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_filter_group
      description: Deletes the existing filter group with the given `view_filter_group_id`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: filter_group_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      - in: path
        name: view_filter_group_id
        schema:
          type: integer
        description: The ID of the view filter group to delete.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/filter/{view_filter_id}/":
    get:
      operationId: get_database_table_view_filter
      description: Returns the existing view filter.
      parameters:
      - in: path
        name: view_filter_id
        schema:
          type: integer
        description: The ID of the view filter to return.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFilter"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_filter
      description: Updates the existing filter.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_filter_id
        schema:
          type: integer
        description: The ID of the view filter to update.
        required: true
      tags:
      - Database table view filters
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewFilter"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewFilter"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewFilter"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewFilter"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_FILTER_NOT_SUPPORTED
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_filter
      description: Deletes the existing filter if the authorized user has access to
        the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_filter_id
        schema:
          type: integer
        description: The ID of the view filter to delete.
        required: true
      tags:
      - Database table view filters
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_FILTER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/form/{slug}/submit/":
    get:
      operationId: get_meta_database_table_form_view
      description: Returns the metadata related to the form view if the form is publicly
        shared or if the user has access to the related workspace. This data can be
        used to construct a form with the right fields.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug related to the form form.
        required: true
      tags:
      - Database table form view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicFormView"
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FORM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: submit_database_table_form_view
      description: Submits the form if the form is publicly shared or if the user
        has access to the related workspace. The provided data will be validated based
        on the fields that are in the form and the rules per field. If valid, a new
        row will be created in the table.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: The slug related to the form.
        required: true
      tags:
      - Database table form view
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ExampleRowRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ExampleRowRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ExampleRowRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FormViewSubmitted"
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_PUBLICLY_SHARED_FORM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FORM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/form/{slug}/upload-file/":
    post:
      operationId: upload_file_form_view
      description: Uploads a file anonymously to Baserow by uploading the file contents
        directly. A `file` multipart is expected containing the file contents.
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        description: Submits files only if the view with the provided slughas a public
          file field.
        required: true
      tags:
      - Database table form view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserFile"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_FILE
                    - ERROR_FILE_SIZE_TOO_LARGE
                    - ERROR_VIEW_HAS_NO_PUBLIC_FILE_FIELD
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/gallery/{slug}/public/rows/":
    get:
      operationId: public_list_database_table_gallery_view_rows
      description: "Lists the requested rows of the view's table related to the provided
        `slug` if the gallery view is public.The response is paginated either by a
        limit/offset or page/size style. The style depends on the provided GET parameters.
        The properties of the returned rows depends on which fields the table has.
        For a complete overview of fields use the **list_database_table_fields** endpoint
        to list them all. In the example all field types are listed, but normally
        the number in field_{id} key is going to be the id of the field. The value
        is what the user has provided and the format of it depends on the fields type.\n\n"
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the exclude_fields query parameter.
          If you for example provide the following GET parameter `exclude_fields=field_1,field_2`
          then the fields with id `1` and id `2` are going to be excluded from the
          selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          which will add the object/objects with the same name to the response if
          included. The `field_options` object contains user defined view settings
          for each field. For example the field's width is included in here.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can
          select a subset of fields by providing the fields query parameter. If you
          for example provide the following GET parameter `include_fields=field_1,field_2`
          then only the fields with id `1` and id `2` are going to be selected and
          included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a '-' it can be ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page`
          or `limit` can be provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and
          defines how many rows should be returned.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table gallery view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GALLERY_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/gallery/{view_id}/":
    get:
      operationId: list_database_table_gallery_view_rows
      description: Lists the requested rows of the view's table related to the provided
        `view_id` if the authorized user has access to the database's workspace. The
        response is paginated by a limit/offset style.
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n\n\n**Please note that by
          passing the filter parameters the view filters saved for the view itself
          will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**\n\n**Please note that by passing the filters parameter the
          view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          and `row_metadata` which will add the object/objects with the same name
          to the response if included. The `field_options` object contains user defined
          view settings for each field. For example the field's width is included
          in here. The `row_metadata` object includes extra row specific data on a
          per row basis.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a '-' it can be ordered descending (Z-A).
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table gallery view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GALLERY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/grid/{slug}/public/aggregations/":
    get:
      operationId: get_database_table_public_grid_view_field_aggregations
      description: Returns all field aggregations values previously defined for this
        grid view. If filters exist for this view, the aggregations are computed only
        on filtered rows.
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The aggregation can optionally be filtered by the same view
          filters available for the views. Multiple filters can be provided if they
          follow the same format. The field and filter variable indicate how to filter
          and the value indicates where to filter on.\n\nFor example if you provide
          the following GET parameter `filter__field_1__equal=test` then only rows
          where the value of field_1 is equal to test are going to be returned.\n\nThe
          following filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |+
          `AND`: Indicates that the aggregated rows must match all the provided filters.

          `OR`: Indicates that the aggregated rows only have to match one of the filters.

      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          for the aggregation. The filter tree is a nested structure containing the
          filters that need to be applied. \n\nAn example of a valid filter tree is
          the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\":
          \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of
          the field to filter on, or the name of the field if `user_field_names` is
          true.\n\nThe following filters are available: equal, not_equal, filename_contains,
          files_lower_than, has_file_type, contains, contains_not, contains_word,
          doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,
          lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,
          date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,
          date_not_equal, date_equals_today, date_before_today, date_after_today,
          date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,
          date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month,
          date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,
          date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,
          single_select_equal, single_select_not_equal, single_select_is_any_of, single_select_is_none_of,
          link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,
          boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: if `include` is set to `total`, the total row count will be returned
          with the result.
      - in: query
        name: search
        schema:
          type: string
        description: If provided the aggregations are calculated only for matching
          rows.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: slug
        schema:
          type: string
        description: Select the view you want the aggregations for.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_{id}:
                    anyOf:
                    - type: number
                      description: The aggregation result for the field with id {id}.
                      example: 5
                    - type: string
                      description: The aggregation result for the field with id {id}.
                    - type: array
                      items: {}
                      description: The aggregation result for the field with id {id}.
                    - type: object
                      description: The aggregation result for the field with id {id}.
                  total:
                    type: integer
                    description: The total value count. Only returned if `include=total`
                      is specified as GET parameter.
                    example: 7
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/grid/{slug}/public/rows/":
    get:
      operationId: public_list_database_table_grid_view_rows
      description: "Lists the requested rows of the view's table related to the provided
        `slug` if the grid view is public.The response is paginated either by a limit/offset
        or page/size style. The style depends on the provided GET parameters. The
        properties of the returned rows depends on which fields the table has. For
        a complete overview of fields use the **list_database_table_fields** endpoint
        to list them all. In the example all field types are listed, but normally
        the number in field_{id} key is going to be the id of the field. The value
        is what the user has provided and the format of it depends on the fields type.\n\n"
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the exclude_fields query parameter.
          If you for example provide the following GET parameter `exclude_fields=field_1,field_2`
          then the fields with id `1` and id `2` are going to be excluded from the
          selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: group_by
        schema:
          type: string
        description: Optionally the rows can be grouped by provided field ids separated
          by comma. By default no groups are applied. This doesn't actually responds
          with the rows groups, this is just what's needed for the Baserow group by
          feature.
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          which will add the object/objects with the same name to the response if
          included. The `field_options` object contains user defined view settings
          for each field. For example the field's width is included in here.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can
          select a subset of fields by providing the fields query parameter. If you
          for example provide the following GET parameter `include_fields=field_1,field_2`
          then only the fields with id `1` and id `2` are going to be selected and
          included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a '-' it can be ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page`
          or `limit` can be provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and
          defines how many rows should be returned.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/grid/{view_id}/":
    get:
      operationId: list_database_table_grid_view_rows
      description: |-
        Lists the requested rows of the view's table related to the provided `view_id` if the authorized user has access to the database's workspace. The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.

        The filters and sortings are automatically applied. To get a full overview of the applied filters and sortings you can use the `list_database_table_view_filters` and `list_database_table_view_sortings` endpoints.
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the exclude_fields query parameter.
          If you for example provide the following GET parameter `exclude_fields=field_1,field_2`
          then the fields with id `1` and id `2` are going to be excluded from the
          selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n\n\n**Please note that by
          passing the filter parameters the view filters saved for the view itself
          will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**\n\n**Please note that by passing the filters parameter the
          view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          and `row_metadata` which will add the object/objects with the same name
          to the response if included. The `field_options` object contains user defined
          view settings for each field. For example the field's width is included
          in here. The `row_metadata` object includes extra row specific data on a
          per row basis.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can
          select a subset of fields by providing the fields query parameter. If you
          for example provide the following GET parameter `include_fields=field_1,field_2`
          then only the fields with id `1` and id `2` are going to be selected and
          included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a '-' it can be ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page`
          or `limit` can be provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and
          defines how many rows should be returned.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerWithGridViewFieldOptionsExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: filter_database_table_grid_view_rows
      description: Lists only the rows and fields that match the request. Only the
        rows with the ids that are in the `row_ids` list are going to be returned.
        Same goes for the fields, only the fields with the ids in the `field_ids`
        are going to be returned. This endpoint could be used to refresh data after
        changes something. For example in the web frontend after changing a field
        type, the data of the related cells will be refreshed using this endpoint.
        In the example all field types are listed, but normally  the number in field_{id}
        key is going to be the id of the field. The value is what the user has provided
        and the format of it depends on the fields type.
      parameters:
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table grid view
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GridViewFilter"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/GridViewFilter"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/GridViewFilter"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/grid/{view_id}/aggregation/{field_id}/":
    get:
      operationId: get_database_table_grid_view_field_aggregation
      description: Computes the aggregation of all the values for a specified field
        from the selected grid view. You must select the aggregation type by setting
        the `type` GET parameter. If filters are configured for the selected view,
        the aggregation is calculated only on filtered rows. You need to have read
        permissions on the view to request an aggregation.
      parameters:
      - in: path
        name: field_id
        schema:
          type: integer
        description: The field id you want to aggregate
        required: true
      - in: query
        name: include
        schema:
          type: string
        description: if `include` is set to `total`, the total row count will be returned
          with the result.
      - in: query
        name: type
        schema:
          type: string
        description: 'The aggregation type you want. Available aggregation types:
          count, empty_count, not_empty_count, unique_count, min, max, sum, average,
          median, decile, variance, std_dev, distribution'
      - in: path
        name: view_id
        schema:
          type: integer
        description: Select the view you want the aggregation for.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    anyOf:
                    - type: number
                      description: The aggregation result for the specified field.
                      example: 5
                    - type: string
                      description: The aggregation result for the specified field.
                    - type: array
                      items: {}
                      description: The aggregation result for the specified field.
                    - type: object
                      description: The aggregation result for the specified field.
                  total:
                    type: integer
                    description: The total value count. Only returned if `include=total`
                      is specified as GET parameter.
                    example: 7
                required:
                - value
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_AGGREGATION_TYPE_DOES_NOT_EXIST
                    - ERROR_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_FIELD_DOES_NOT_EXIST
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/grid/{view_id}/aggregations/":
    get:
      operationId: get_database_table_grid_view_field_aggregations
      description: Returns all field aggregations values previously defined for this
        grid view. If filters exist for this view, the aggregations are computed only
        on filtered rows.You need to have read permissions on the view to request
        aggregations.
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The aggregation can optionally be filtered by the same view
          filters available for the views. Multiple filters can be provided if they
          follow the same format. The field and filter variable indicate how to filter
          and the value indicates where to filter on.\n\nFor example if you provide
          the following GET parameter `filter__field_1__equal=test` then only rows
          where the value of field_1 is equal to test are going to be returned.\n\nThe
          following filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n\n\n**Please note that by
          passing the filter parameters the view filters saved for the view itself
          will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |+
          `AND`: Indicates that the aggregated rows must match all the provided filters.

          `OR`: Indicates that the aggregated rows only have to match one of the filters.

      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          for the aggregation. The filter tree is a nested structure containing the
          filters that need to be applied. \n\nAn example of a valid filter tree is
          the following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\":
          \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of
          the field to filter on, or the name of the field if `user_field_names` is
          true.\n\nThe following filters are available: equal, not_equal, filename_contains,
          files_lower_than, has_file_type, contains, contains_not, contains_word,
          doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,
          lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,
          date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,
          date_not_equal, date_equals_today, date_before_today, date_after_today,
          date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,
          date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month,
          date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,
          date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,
          single_select_equal, single_select_not_equal, single_select_is_any_of, single_select_is_none_of,
          link_row_has, link_row_has_not, link_row_contains, link_row_not_contains,
          boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**\n\n**Please note that by passing the filters parameter the
          view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: if `include` is set to `total`, the total row count will be returned
          with the result.
      - in: query
        name: search
        schema:
          type: string
        description: If provided the aggregations are calculated only for matching
          rows.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Select the view you want the aggregations for.
        required: true
      tags:
      - Database table grid view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  field_{id}:
                    anyOf:
                    - type: number
                      description: The aggregation result for the field with id {id}.
                      example: 5
                    - type: string
                      description: The aggregation result for the field with id {id}.
                    - type: array
                      items: {}
                      description: The aggregation result for the field with id {id}.
                    - type: object
                      description: The aggregation result for the field with id {id}.
                  total:
                    type: integer
                    description: The total value count. Only returned if `include=total`
                      is specified as GET parameter.
                    example: 7
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GRID_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/group_by/{view_group_by_id}/":
    get:
      operationId: get_database_table_view_group
      description: Returns the existing view group by if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: path
        name: view_group_by_id
        schema:
          type: integer
        description: Returns the view group by related to the provided value.
        required: true
      tags:
      - Database table view groupings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewGroupBy"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_group
      description: Updates the existing group by if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_group_by_id
        schema:
          type: integer
        description: Updates the view group by related to the provided value.
        required: true
      tags:
      - Database table view groupings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewGroupBy"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewGroupBy"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewGroupBy"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewGroupBy"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_GROUP_BY_FIELD_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_group
      description: Deletes the existing group by if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_group_by_id
        schema:
          type: integer
        description: Deletes the group by related to the provided value.
        required: true
      tags:
      - Database table view groupings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_GROUP_BY_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/kanban/{slug}/public/rows/":
    get:
      operationId: public_list_database_table_kanban_view_rows
      description: "Responds with serialized rows grouped by the view's single select
        field options related to the `slug` if the kanban view is publicly shared.
        Additional query parameters can be provided to control the `limit` and `offset`
        per select option. \n\nThis is a **premium** feature."
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned by default. This value
          can be overwritten per select option.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines from which offset the rows should be returned.This value
          can be overwritten per select option.
      - in: query
        name: select_option
        schema:
          type: string
        description: Accepts multiple `select_option` parameters. If not provided,
          the rows of all select options will be returned. If one or more `select_option`
          parameters are provided, then only the rows of those will be included in
          the response. `?select_option=1&select_option=null` will only include the
          rows for both select option with id `1` and `null`. `?select_option=1,10,20`
          will only include the rows of select option id `1` with a limit of `10`
          and and offset of `20`.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table kanban view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KanbanViewExampleResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_KANBAN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/kanban/{view_id}/":
    get:
      operationId: list_database_table_kanban_view_rows
      description: |-
        Responds with serialized rows grouped by the view's single select field options if the user is authenticated and has access to the related workspace. Additional query parameters can be provided to control the `limit` and `offset` per select option.

        This is a **premium** feature.
      parameters:
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n\n\n**Please note that by
          passing the filter parameters the view filters saved for the view itself
          will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**\n\n**Please note that by passing the filters parameter the
          view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          and `row_metadata` which will add the object/objects with the same name
          to the response if included. The `field_options` object contains user defined
          view settings for each field. For example the field's width is included
          in here. The `row_metadata` object includes extra row specific data on a
          per row basis.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned by default. This value
          can be overwritten per select option.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines from which offset the rows should be returned.This value
          can be overwritten per select option.
      - in: query
        name: select_option
        schema:
          type: string
        description: Accepts multiple `select_option` parameters. If not provided,
          the rows of all select options will be returned. If one or more `select_option`
          parameters are provided, then only the rows of those will be included in
          the response. `?select_option=1&select_option=null` will only include the
          rows for both select option with id `1` and `null`. `?select_option=1,10,20`
          will only include the rows of select option id `1` with a limit of `10`
          and and offset of `20`.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table kanban view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/KanbanViewExampleResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_KANBAN_VIEW_HAS_NO_SINGLE_SELECT_FIELD
                    - ERROR_INVALID_SELECT_OPTION_PARAMETER
                    - ERROR_FEATURE_NOT_AVAILABLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_KANBAN_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/sort/{view_sort_id}/":
    get:
      operationId: get_database_table_view_sort
      description: Returns the existing view sort if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: path
        name: view_sort_id
        schema:
          type: integer
        description: Returns the view sort related to the provided value.
        required: true
      tags:
      - Database table view sortings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewSort"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_SORT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_view_sort
      description: Updates the existing sort if the authorized user has access to
        the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_sort_id
        schema:
          type: integer
        description: Updates the view sort related to the provided value.
        required: true
      tags:
      - Database table view sortings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewSort"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewSort"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateViewSort"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewSort"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_FIELD_NOT_IN_TABLE
                    - ERROR_VIEW_SORT_FIELD_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_SORT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_view_sort
      description: Deletes the existing sort if the authorized user has access to
        the related database's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: view_sort_id
        schema:
          type: integer
        description: Deletes the sort related to the provided value.
        required: true
      tags:
      - Database table view sortings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_VIEW_SORT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/table/{table_id}/":
    get:
      operationId: list_database_table_views
      description: Lists all views of the table related to the provided `table_id`.
        If the workspace is related to a template, then this endpoint will be publicly
        accessible. A table can have multiple views. Each view can display the data
        in a different way. For example the `grid` view shows the in a spreadsheet
        like way. That type has custom endpoints for data retrieval and manipulation.
        In the future other views types like a calendar or Kanban are going to be
        added. Each type can have different properties.
      parameters:
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on each
          view in the response. The supported attributes are `filters`, `sortings`
          and `decorations`. For example `include=filters,sortings` will add the attributes
          `filters` and `sortings` to every returned view, containing a list of the
          views filters and sortings respectively.
      - in: query
        name: limit
        schema:
          type: integer
        description: The maximum amount of views that must be returned. This endpoint
          doesn't support pagination, but if you for example just need to fetch the
          first view, you can do that by setting a limit. There isn't a limit by default.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns only views of the table related to the provided value.
        required: true
      - in: query
        name: type
        schema:
          type: string
        description: Optionally filter on the view type. If provided, only views of
          that type will be returned.
      tags:
      - Database table views
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_view
      description: Creates a new view for the table related to the provided `table_id`
        parameter. Depending on the type, different properties can optionally be set.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list of extra attributes to include on each
          view in the response. The supported attributes are `filters`, `sortings`
          and `decorations`. For example `include=filters,sortings` will add the attributes
          `filters` and `sortings` to every returned view, containing a list of the
          views filters and sortings respectively.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a view for the table related to the provided value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ViewCreateView"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ViewCreateView"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ViewCreateView"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ViewView"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/table/{table_id}/order/":
    post:
      operationId: order_database_table_views
      description: Changes the order of the provided view ids to the matching position
        that the id has in the list. The order of the not provided views will be set
        to `0`.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: table_id
        schema:
          type: integer
        description: Updates the order of the views in the table related to the provided
          value.
        required: true
      tags:
      - Database table views
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderViews"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderViews"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderViews"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_VIEW_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/timeline/{slug}/public/rows/":
    get:
      operationId: public_list_database_table_timeline_view_rows
      description: "Lists the requested rows of the view's table related to the provided
        `slug` if the timeline view is public.The response is paginated either by
        a limit/offset or page/size style. The style depends on the provided GET parameters.
        The properties of the returned rows depends on which fields the table has.
        For a complete overview of fields use the **list_database_table_fields** endpoint
        to list them all. In the example all field types are listed, but normally
        the number in field_{id} key is going to be the id of the field. The value
        is what the user has provided and the format of it depends on the fields type.\n\n"
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the exclude_fields query parameter.
          If you for example provide the following GET parameter `exclude_fields=field_1,field_2`
          then the fields with id `1` and id `2` are going to be excluded from the
          selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          which will add the object/objects with the same name to the response if
          included. The `field_options` object contains user defined view settings
          for each field. For example the field's width is included in here.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can
          select a subset of fields by providing the fields query parameter. If you
          for example provide the following GET parameter `include_fields=field_1,field_2`
          then only the fields with id `1` and id `2` are going to be selected and
          included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a '-' it can be ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page`
          or `limit` can be provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and
          defines how many rows should be returned.
      - in: path
        name: slug
        schema:
          type: string
        description: Returns only rows that belong to the related view.
        required: true
      tags:
      - Database table timeline view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PublicPaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_AUTHORIZATION_TO_PUBLICLY_SHARED_VIEW
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TIMELINE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/views/timeline/{view_id}/":
    get:
      operationId: list_database_table_timeline_view_rows
      description: |-
        Lists the requested rows of the view's table related to the provided `view_id` if the authorized user has access to the database's workspace. The response is paginated either by a limit/offset or page/size style. The style depends on the provided GET parameters. The properties of the returned rows depends on which fields the table has. For a complete overview of fields use the **list_database_table_fields** endpoint to list them all. In the example all field types are listed, but normally the number in field_{id} key is going to be the id of the field. The value is what the user has provided and the format of it depends on the fields type.

        The filters and sortings are automatically applied. To get a full overview of the applied filters and sortings you can use the `list_database_table_view_filters` and `list_database_table_view_sortings` endpoints.

        This is a **premium** feature.
      parameters:
      - in: query
        name: count
        schema:
          type: boolean
        description: If provided only the count will be returned.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: 'All the fields are included in the response by default. You
          can select a subset of fields by providing the exclude_fields query parameter.
          If you for example provide the following GET parameter `exclude_fields=field_1,field_2`
          then the fields with id `1` and id `2` are going to be excluded from the
          selection and response. '
      - in: query
        name: filter__{field}__{filter}
        schema:
          type: string
        description: "The rows can optionally be filtered by the same view filters
          available for the views. Multiple filters can be provided if they follow
          the same format. The field and filter variable indicate how to filter and
          the value indicates where to filter on.\n\nFor example if you provide the
          following GET parameter `filter__field_1__equal=test` then only rows where
          the value of field_1 is equal to test are going to be returned.\n\nThe following
          filters are available: equal, not_equal, filename_contains, files_lower_than,
          has_file_type, contains, contains_not, contains_word, doesnt_contain_word,
          length_is_lower_than, higher_than, higher_than_or_equal, lower_than, lower_than_or_equal,
          is_even_and_whole, date_equal, date_before, date_before_or_equal, date_after_days_ago,
          date_after, date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if the `filters` parameter is
          provided, this parameter will be ignored.** \n\n\n\n**Please note that by
          passing the filter parameters the view filters saved for the view itself
          will be ignored.**"
      - in: query
        name: filter_type
        schema:
          type: string
        description: |-
          `AND`: Indicates that the rows must match all the provided filters.

          `OR`: Indicates that the rows only have to match one of the filters.

          This works only if two or more filters are provided.

          **Please note that if the `filters` parameter is provided, this parameter will be ignored.**
      - in: query
        name: filters
        schema:
          type: string
        description: "A JSON serialized string containing the filter tree to apply
          to this view. The filter tree is a nested structure containing the filters
          that need to be applied. \n\nAn example of a valid filter tree is the following:`{\"filter_type\":
          \"AND\", \"filters\": [{\"field\": 1, \"type\": \"equal\", \"value\": \"test\"}]}`.
          The `field` value must be the ID of the field to filter on, or the name
          of the field if `user_field_names` is true.\n\nThe following filters are
          available: equal, not_equal, filename_contains, files_lower_than, has_file_type,
          contains, contains_not, contains_word, doesnt_contain_word, length_is_lower_than,
          higher_than, higher_than_or_equal, lower_than, lower_than_or_equal, is_even_and_whole,
          date_equal, date_before, date_before_or_equal, date_after_days_ago, date_after,
          date_after_or_equal, date_not_equal, date_equals_today, date_before_today,
          date_after_today, date_within_days, date_within_weeks, date_within_months,
          date_equals_days_ago, date_equals_months_ago, date_equals_years_ago, date_equals_week,
          date_equals_month, date_equals_day_of_month, date_equals_year, date_is,
          date_is_not, date_is_before, date_is_on_or_before, date_is_after, date_is_on_or_after,
          date_is_within, single_select_equal, single_select_not_equal, single_select_is_any_of,
          single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
          link_row_not_contains, boolean, empty, not_empty, multiple_select_has, multiple_select_has_not,
          multiple_collaborators_has, multiple_collaborators_has_not, user_is, user_is_not,
          has_value_equal, has_not_value_equal, has_value_contains, has_not_value_contains,
          has_value_contains_word, has_not_value_contains_word, has_value_length_is_lower_than,
          has_all_values_equal, has_empty_value, has_not_empty_value, has_any_select_option_equal,
          has_none_select_option_equal, has_value_lower, has_value_lower_or_equal,
          has_value_higher, has_value_higher_or_equal, has_not_value_higher_or_equal,
          has_not_value_higher, has_not_value_lower_or_equal, has_not_value_lower,
          has_date_equal, has_not_date_equal, has_date_before, has_not_date_before,
          has_date_on_or_before, has_not_date_on_or_before, has_date_on_or_after,
          has_not_date_on_or_after, has_date_after, has_not_date_after, has_date_within,
          has_not_date_within.\n\n**Please note that if this parameter is provided,
          all other `filter__{field}__{filter}` will be ignored, as well as the `filter_type`
          parameter.**\n\n**Please note that by passing the filters parameter the
          view filters saved for the view itself will be ignored.**"
      - in: query
        name: include
        schema:
          type: string
        description: A comma separated list allowing the values of `field_options`
          and `row_metadata` which will add the object/objects with the same name
          to the response if included. The `field_options` object contains user defined
          view settings for each field. For example the field's width is included
          in here. The `row_metadata` object includes extra row specific data on a
          per row basis.
      - in: query
        name: include_fields
        schema:
          type: string
        description: All the fields are included in the response by default. You can
          select a subset of fields by providing the fields query parameter. If you
          for example provide the following GET parameter `include_fields=field_1,field_2`
          then only the fields with id `1` and id `2` are going to be selected and
          included in the response.
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: order_by
        schema:
          type: string
        description: Optionally the rows can be ordered by provided field ids separated
          by comma. By default a field is ordered in ascending (A-Z) order, but by
          prepending the field with a '-' it can be ordered descending (Z-A).
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page`
          or `limit` can be provided, not both.
      - in: query
        name: search
        schema:
          type: string
        description: If provided only rows with data that matches the search query
          are going to be returned.
      - in: query
        name: search_mode
        schema:
          type: string
        description: If provided, allows API consumers to determine what kind of search
          experience they wish to have. If the default `SearchModes.MODE_FT_WITH_COUNT`
          is used, then Postgres full-text search is used. If `SearchModes.MODE_COMPAT`
          is provided then the search term will be exactly searched for including
          whitespace on each cell. This is the Baserow legacy search behaviour.
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and
          defines how many rows should be returned.
      - in: path
        name: view_id
        schema:
          type: integer
        description: Returns only rows that belong to the related view's table.
        required: true
      tags:
      - Database table timeline view
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_ORDER_BY_FIELD_NOT_FOUND
                    - ERROR_ORDER_BY_FIELD_NOT_POSSIBLE
                    - ERROR_FILTER_FIELD_NOT_FOUND
                    - ERROR_VIEW_FILTER_TYPE_DOES_NOT_EXIST
                    - ERROR_VIEW_FILTER_TYPE_UNSUPPORTED_FIELD
                    - ERROR_FILTERS_PARAM_VALIDATION_ERROR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TIMELINE_DOES_NOT_EXIST
                    - ERROR_FIELD_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/webhooks/{webhook_id}/":
    get:
      operationId: get_database_table_webhook
      description: Returns the existing webhook if the authorized user has access
        to the related database workspace.
      parameters:
      - in: path
        name: webhook_id
        schema:
          type: integer
        description: Returns the webhook related to the provided value.
        required: true
      tags:
      - Database table webhooks
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TableWebhook"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_database_table_webhook
      description: Updates the existing view if the authorized user has access to
        the related database workspace.
      parameters:
      - in: path
        name: webhook_id
        schema:
          type: integer
        description: Updates the webhook related to the provided value.
        required: true
      tags:
      - Database table webhooks
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedTableWebhookUpdateRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedTableWebhookUpdateRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedTableWebhookUpdateRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TableWebhook"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_database_table_webhook
      description: Deletes the existing webhook if the authorized user has access
        to the related database's workspace.
      parameters:
      - in: path
        name: webhook_id
        schema:
          type: integer
        description: Deletes the webhook related to the provided value.
        required: true
      tags:
      - Database table webhooks
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_WEBHOOK_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/webhooks/table/{table_id}/":
    get:
      operationId: list_database_table_webhooks
      description: Lists all webhooks of the table related to the provided `table_id`
        if the user has access to the related database workspace.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Returns only webhooks of the table related to this value.
        required: true
      tags:
      - Database table webhooks
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TableWebhook"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_database_table_webhook
      description: Creates a new webhook for the table related to the provided `table_id`
        parameter if the authorized user has access to the related database workspace.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: Creates a webhook for the table related to the provided value.
        required: true
      tags:
      - Database table webhooks
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TableWebhookCreateRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TableWebhookCreateRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TableWebhookCreateRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TableWebhook"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TABLE_WEBHOOK_MAX_LIMIT_EXCEEDED
                    - ERROR_TABLE_WEBHOOK_EVENT_CONFIG_FIELD_NOT_IN_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/database/webhooks/table/{table_id}/test-call/":
    post:
      operationId: test_call_database_table_webhook
      description: This endpoint triggers a test call based on the provided data if
        the user has access to the workspace related to the table. The test call will
        be made immediately and a copy of the request, response and status will be
        included in the response.
      parameters:
      - in: path
        name: table_id
        schema:
          type: integer
        description: The id of the table that must be tested.
        required: true
      tags:
      - Database table webhooks
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TableWebhookTestCallRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TableWebhookTestCallRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TableWebhookTestCallRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TableWebhookTestCallResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/files/{signed_data}":
    get:
      operationId: secure_file_serve_download
      description: |-
        Downloads a file using the backend and the secure file serve feature. The signed data is extracted from the URL and used to verify if the user has access to the file. If the permissions check passes and the file exists, the file is served to the user.

        This is a **enterprise** feature.
      parameters:
      - in: path
        name: signed_data
        schema:
          type: string
          pattern: "^.*$"
        required: true
      tags:
      - Secure file serve
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                description: File download
          description: ''
        '403':
          content:
            application/octet-stream:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SECURE_FILE_SERVE_EXCEPTION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/integration/{integration_id}/":
    patch:
      operationId: update_application_integration
      description: Updates an existing integration.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: integration_id
        schema:
          type: integer
        description: The id of the integration
        required: true
      tags:
      - Integrations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedIntegrationUpdateIntegration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedIntegrationUpdateIntegration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedIntegrationUpdateIntegration"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationIntegration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INTEGRATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_application_integration
      description: Deletes the integration related by the given id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: integration_id
        schema:
          type: integer
        description: The id of the integration
        required: true
      tags:
      - Integrations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INTEGRATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/integration/{integration_id}/move/":
    patch:
      operationId: move_application_integration
      description: Moves the integration in the application before another integration
        or at the end of the application if no before integration is given. The integrations
        must belong to the same application.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: integration_id
        schema:
          type: integer
        description: The id of the integration to move
        required: true
      tags:
      - Integrations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedMoveIntegration"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedMoveIntegration"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedMoveIntegration"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/IntegrationIntegration"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_INTEGRATION_NOT_IN_SAME_APPLICATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INTEGRATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/jobs/":
    get:
      operationId: list_job
      description: List all existing jobs. Jobs are task executed asynchronously in
        the background. You can use the `get_job` endpoint to read the currentprogress
        of a the job.
      parameters:
      - in: query
        name: job_ids
        schema:
          type: string
        description: A comma separated list of job ids in the desired order.The jobs
          will be returned in the same order as the ids.If a job id is not found it
          will be ignored.
      - in: query
        name: states
        schema:
          type: string
        description: 'A comma separated list of jobs state to look for. The only possible
          values are: `pending`, `finished`, `failed` and `cancelled`. It''s possible
          to exclude a state by prefixing it with a `!`. '
      tags:
      - Jobs
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Job_TypeJob"
          description: ''
    post:
      operationId: create_job
      description: Creates a new job. This job runs asynchronously in the background
        and execute the task specific to the provided typeparameters. The `get_job`
        can be used to get the current state of the job.
      tags:
      - Jobs
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Job_TypeCreateJob"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Job_TypeCreateJob"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Job_TypeCreateJob"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Job_TypeJob"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/jobs/{job_id}/":
    get:
      operationId: get_job
      description: Returns the information related to the provided job id. This endpoint
        can for example be polled to get the state and progress of the job in real
        time.
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        description: The job id to lookup information about.
        required: true
      tags:
      - Jobs
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Job_TypeJob"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_JOB_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/jobs/{job_id}/cancel/":
    post:
      operationId: cancel_job
      description: 'Cancels a job. Note: you can cancel only a scheduled or a job
        that is already running. The user requesting must be the owner of the job
        to cancel.'
      parameters:
      - in: path
        name: job_id
        schema:
          type: integer
        description: The job id to cancel.
        required: true
      tags:
      - Jobs
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Job_TypeJob"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_JOB_NOT_CANCELLABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_JOB_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/":
    get:
      operationId: admin_licenses
      description: Lists all the valid licenses that are registered to this instance.
        A premium license can be used to unlock the premium features for a fixed amount
        of users. An enterprise license can similarly be used to unlock enterprise
        features. More information about self hosted licenses can be found on our
        pricing page https://baserow.io/pricing.
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/License"
          description: ''
    post:
      operationId: admin_register_license
      description: Registers a new license. After registering you can assign users
        to the license that will be able to use the license's features while the license
        is active. If an existing license with the same `license_id` already exists
        and the provided license has been issued later than that one, the existing
        one will be upgraded.
      tags:
      - Admin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RegisterLicense"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/RegisterLicense"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/RegisterLicense"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/License"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_LICENSE
                    - ERROR_UNSUPPORTED_LICENSE
                    - ERROR_PREMIUM_LICENSE_INSTANCE_ID_MISMATCH
                    - ERROR_LICENSE_HAS_EXPIRED
                    - ERROR_LICENSE_ALREADY_EXISTS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/{id}/":
    get:
      operationId: admin_get_license
      description: Responds with detailed information about the license related to
        the provided parameter.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LicenseWithUsers"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: admin_remove_license
      description: Removes the existing license related to the provided parameter.
        If the license is active, then all the users that are using the license will
        lose access to the features granted by that license.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/{id}/{user_id}/":
    post:
      operationId: admin_add_user_to_license
      description: Adds the user related to the provided parameter and to the license
        related to the parameter. This only happens if there are enough seats left
        on the license and if the user is not already on the license.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        description: The ID of the user that must be added to the license.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LicenseUser"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_ALREADY_ON_LICENSE
                    - ERROR_NO_SEATS_LEFT_IN_LICENSE
                    - ERROR_CANT_MANUALLY_CHANGE_SEATS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                    - ERROR_USER_NOT_FOUND
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: admin_remove_user_from_license
      description: Removes the user related to the provided parameter and to the license
        related to the parameter. This only happens if the user is on the license,
        otherwise nothing will happen.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        description: The ID of the user that must be removed from the license.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CANT_MANUALLY_CHANGE_SEATS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                    - ERROR_USER_NOT_FOUND
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/{id}/check/":
    get:
      operationId: admin_license_check
      description: This endpoint checks with the authority if the license needs to
        be updated. It also checks if the license is operating within its limits and
        might take action on that. It could also happen that the license has been
        deleted because there is an instance id mismatch or because it's invalid.
        In that case a `204` status code is returned.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/LicenseWithUsers"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/{id}/fill-seats/":
    post:
      operationId: admin_fill_remaining_seats_of_license
      description: Fills the remaining empty seats of the license with the first users
        that are found.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LicenseUser"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CANT_MANUALLY_CHANGE_SEATS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/{id}/lookup-users/":
    get:
      operationId: admin_license_lookup_users
      description: This endpoint can be used to lookup users that can be added to
        a  license. Users that are already in the license are not returned here. Optionally
        a `search` query parameter can be provided to filter the results.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of users should be returned.
      - in: query
        name: search
        schema:
          type: string
        description: If provided, only users where the name or email contains the
          value are returned.
      - in: query
        name: size
        schema:
          type: integer
        description: Defines how many users should be returned per page.
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerLicenseUserLookup"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/licenses/{id}/remove-all-users/":
    post:
      operationId: admin_remove_all_users_from_license
      description: Removes all the users that are on the license. This will empty
        all the seats.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: The internal identifier of the license, this is `id` and not
          `license_id`.
        required: true
      tags:
      - Admin
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CANT_MANUALLY_CHANGE_SEATS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_LICENSE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/notifications/{workspace_id}/":
    get:
      operationId: list_workspace_notifications
      description: Lists the notifications for the given workspace and the current
        user. The response is paginated and the limit and offset parameters can be
        controlled using the query parameters.
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many notifications should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Defines the offset of the notifications that should be returned.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace id that the notifications belong to.
        required: true
      tags:
      - Notifications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerNotificationRecipient"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: clear_workspace_notifications
      description: Clear all the notifications for the given workspace and user.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace the notifications are in.
        required: true
      tags:
      - Notifications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/notifications/{workspace_id}/{notification_id}/":
    patch:
      operationId: mark_notification_as_read
      description: Marks a notification as read.
      parameters:
      - in: path
        name: notification_id
        schema:
          type: integer
        description: The notification id to update.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace the notification is in.
        required: true
      tags:
      - Notifications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/NotificationRecipient"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - NOTIFICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/notifications/{workspace_id}/mark-all-as-read/":
    post:
      operationId: mark_all_workspace_notifications_as_read
      description: Mark as read all the notifications for the given workspace and
        user.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace the notifications are in.
        required: true
      tags:
      - Notifications
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/role/{workspace_id}/":
    get:
      operationId: list_role_assignments
      description: You can list the role assignments within a workspace, optionally
        filtered downto a specific scope inside of that workspace. If the scope isn't
        specified,the workspace will be considered the scope.
      parameters:
      - in: query
        name: scope_id
        schema:
          type: integer
        description: The id of the scope you are trying to get all roleassignments
          for.
      - in: query
        name: scope_type
        schema:
          type: string
        description: The type of scope you are trying to get all roleassignments for.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace in which the role assignments are related to.
        required: true
      tags:
      - Role assignments
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpenApiRoleAssignment"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SCOPE_DOES_NOT_EXIST
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: assign_role
      description: You can assign a role to a subject into the given workspace for
        the given scope with this endpoint. If you want to remove the role you can
        omit the role property.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace in which the role assignment takes place.
        required: true
      tags:
      - Role assignments
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateRoleAssignment"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreateRoleAssignment"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreateRoleAssignment"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpenApiRoleAssignment"
          description: ''
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SCOPE_DOES_NOT_EXIST
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
                    - ERROR_SUBJECT_TYPE_DOES_NOT_EXIST
                    - ERROR_ROLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/role/{workspace_id}/batch/":
    post:
      operationId: batch_assign_role
      description: You can assign a role to a multiple subjects into the given workspace
        for the given scopes with this endpoint. If you want to remove the role you
        can omit the role property.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace in which the role assignment takes place.
        required: true
      tags:
      - Role assignments
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/BatchCreateRoleAssignment"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/BatchCreateRoleAssignment"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/BatchCreateRoleAssignment"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OpenApiRoleAssignment"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_DUPLICATE_ROLE_ASSIGNMENTS
                    - ERROR_CANT_ASSIGN_ROLE_EXCEPTION_TO_ADMIN
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SCOPE_DOES_NOT_EXIST
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_OBJECT_SCOPE_TYPE_DOES_NOT_EXIST
                    - ERROR_SUBJECT_TYPE_DOES_NOT_EXIST
                    - ERROR_ROLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/row_comments/{table_id}/{row_id}/":
    get:
      operationId: get_row_comments
      description: |-
        Returns all row comments for the specified table and row.

        This is a **premium** feature.
      parameters:
      - in: query
        name: limit
        schema:
          type: integer
        description: Defines how many rows should be returned.
      - in: query
        name: offset
        schema:
          type: integer
        description: Can only be used in combination with the `limit` parameter and
          defines from which offset the rows should be returned.
      - in: query
        name: page
        schema:
          type: integer
        description: Defines which page of rows should be returned. Either the `page`
          or `limit` can be provided, not both.
      - in: path
        name: row_id
        schema:
          type: integer
        description: The row to get row comments for.
        required: true
      - in: query
        name: size
        schema:
          type: integer
        description: Can only be used in combination with the `page` parameter and
          defines how many rows should be returned.
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table the row is in.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerRowComment"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_row_comment
      description: |-
        Creates a comment on the specified row.

        This is a **premium** feature.
      parameters:
      - in: path
        name: row_id
        schema:
          type: integer
        description: The row to create a comment for.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table to find the row to comment on in.
        required: true
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RowCommentCreate"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/RowCommentCreate"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/RowCommentCreate"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RowComment"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_INVALID_COMMENT_MENTION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/row_comments/{table_id}/{row_id}/notification-mode/":
    put:
      operationId: update_row_comment_notification_mode
      description: |-
        Updates the user's notification preferences for comments made on a specified table row.

        This is a **premium** feature.
      parameters:
      - in: path
        name: row_id
        schema:
          type: integer
        description: The row on which to manage the comment subscription.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table id where the row is in.
        required: true
      tags:
      - Database table rows
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RowCommentsNotificationMode"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/RowCommentsNotificationMode"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/RowCommentsNotificationMode"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/row_comments/{table_id}/comment/{comment_id}/":
    patch:
      operationId: update_row_comment
      description: |-
        Update a row comment.

        This is a **premium** feature.
      parameters:
      - in: path
        name: comment_id
        schema:
          type: integer
        description: The row comment to update.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table the row is in.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RowComment"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_NOT_COMMENT_AUTHOR
                    - ERROR_INVALID_COMMENT_MENTION
                    - ERROR_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_COMMENT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_row_comment
      description: |-
        Delete a row comment.

        This is a **premium** feature.
      parameters:
      - in: path
        name: comment_id
        schema:
          type: integer
        description: The row comment to delete.
        required: true
      - in: path
        name: table_id
        schema:
          type: integer
        description: The table the row is in.
        required: true
      tags:
      - Database table rows
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RowComment"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_NOT_COMMENT_AUTHOR
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_NO_PERMISSION_TO_TABLE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TABLE_DOES_NOT_EXIST
                    - ERROR_ROW_COMMENT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/settings/":
    get:
      operationId: get_settings
      description: Responds with all the admin configured settings.
      tags:
      - Settings
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Settings"
          description: ''
  "/api/settings/instance-id/":
    get:
      operationId: get_instance_id
      description: Responds with the self hosted instance id. Only a user with staff
        permissions can request it.
      tags:
      - Settings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InstanceId"
          description: ''
  "/api/settings/update/":
    patch:
      operationId: update_settings
      description: Updates the admin configured settings if the user has admin permissions.
      tags:
      - Settings
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedSettings"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedSettings"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedSettings"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Settings"
          description: ''
  "/api/snapshots/{snapshot_id}/":
    delete:
      operationId: delete_snapshot
      description: Deletes a snapshot. Deleting a snapshot doesn't affect the application
        that the snapshot is made from and doesn't affect any applications that were
        created by restoring it. Snapshot deletion is permanent and can't be undone.
      parameters:
      - in: path
        name: snapshot_id
        schema:
          type: integer
        description: Id of the snapshot to delete.
        required: true
      tags:
      - Snapshots
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_OPERATION_NOT_SUPPORTED
                    - ERROR_SNAPSHOT_IS_BEING_RESTORED
                    - ERROR_SNAPSHOT_IS_BEING_DELETED
                    - ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SNAPSHOT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/snapshots/{snapshot_id}/restore/":
    post:
      operationId: restore_snapshot
      description: Restores a snapshot. When an application snapshot is restored,
        a new application will be created in the same workspace that the original
        application was placed in with the name of the snapshot and data that were
        in the original application at the time the snapshot was taken. The original
        application that the snapshot was taken from is unaffected. Snapshots can
        be restored multiple times and a number suffix is added to the new application
        name in the case of a collision.
      parameters:
      - in: path
        name: snapshot_id
        schema:
          type: integer
        description: Id of the snapshot to restore.
        required: true
      tags:
      - Snapshots
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Job"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_OPERATION_NOT_SUPPORTED
                    - ERROR_SNAPSHOT_IS_BEING_RESTORED
                    - ERROR_SNAPSHOT_IS_BEING_DELETED
                    - ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SNAPSHOT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/snapshots/application/{application_id}/":
    get:
      operationId: list_snapshots
      description: Lists snapshots that were created for a given application.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Application ID for which to list snapshots.
        required: true
      tags:
      - Snapshots
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Snapshot"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_snapshot
      description: Creates a new application snapshot. Snapshots represent a state
        of an application at a specific point in time and can be restored later, making
        it easy to create backups of entire applications.
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        description: Application ID for which to list snapshots.
        required: true
      tags:
      - Snapshots
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Snapshot"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Snapshot"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Snapshot"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Job"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_MAXIMUM_SNAPSHOTS_REACHED
                    - ERROR_APPLICATION_OPERATION_NOT_SUPPORTED
                    - ERROR_SNAPSHOT_IS_BEING_CREATED
                    - ERROR_SNAPSHOT_NAME_NOT_UNIQUE
                    - ERROR_SNAPSHOT_OPERATION_LIMIT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/sso/oauth2/callback/{provider_id}/":
    get:
      operationId: oauth_provider_login_callback
      description: Processes callback from OAuth2 provider and logs the user in if
        successful.
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: The code returned by the IDP.
      - in: path
        name: provider_id
        schema:
          type: integer
        description: The id of the provider for which to process the callback.
        required: true
      tags:
      - Auth
      responses:
        '302':
          description: No response body
  "/api/sso/oauth2/login/{provider_id}/":
    get:
      operationId: oauth_provider_login_redirect
      description: Redirects to the OAuth2 provider's authentication URL based on
        the provided auth provider's id.
      parameters:
      - in: query
        name: original
        schema:
          type: integer
        description: The relative part of URL that the user wanted to access.
      - in: path
        name: provider_id
        schema:
          type: integer
        description: The id of the provider for redirect.
        required: true
      - in: query
        name: workspace_invitation_token
        schema:
          type: string
        description: The invitation token sent to the user to join a specific workspace.
      tags:
      - Auth
      responses:
        '302':
          description: No response body
  "/api/sso/saml/acs/":
    post:
      operationId: auth_provider_saml_acs_url
      description: Complete the SAML authentication flow by validating the SAML response.
        Sign in the user if already exists in Baserow or create a new one otherwise.
        Once authenticated, the user will be redirected to the original URL they were
        trying to access. If the response is invalid, the user will be redirected
        to an error page with a specific error message.It accepts the language code
        and the workspace invitation token as query parameters if provided.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SAMLResponse"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SAMLResponse"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SAMLResponse"
        required: true
      responses:
        '302':
          description: No response body
  "/api/sso/saml/login/":
    get:
      operationId: auth_provider_saml_sp_login
      description: This is the endpoint that is called when the user wants to initiate
        a SSO SAML login from Baserow (the service provider). The user will be redirected
        to the SAML identity provider (IdP) where the user can authenticate. Once
        logged in in the IdP, the user will be redirected back to the assertion consumer
        service endpoint (ACS) where the SAML response will be validated and a new
        JWT session token will be provided to work with Baserow APIs.
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: The email address of the user that want to sign in using SAML.
      - in: query
        name: language
        schema:
          type: string
        description: 'An ISO 639 language code (with optional variant) selected by
          the user. Ex: en-GB.'
      - in: query
        name: original
        schema:
          type: string
        description: The url to which the user should be redirected after a successful
          login or sign up.
      - in: query
        name: workspace_invitation_token
        schema:
          type: string
        description: If provided and valid, the user accepts the workspace invitation
          and will have access to the workspace after login or signing up.
      tags:
      - Auth
      responses:
        '302':
          description: No response body
  "/api/sso/saml/login-url/":
    get:
      operationId: auth_provider_login_url
      description: Return the correct redirect_url to initiate the SSO SAML login.
        It needs an email address if multiple SAML providers are configured otherwise
        the only configured SAML provider signup URL will be returned.
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: The email address of the user that want to sign in using SAML.
      - in: query
        name: language
        schema:
          type: string
        description: 'An ISO 639 language code (with optional variant) selected by
          the user. Ex: en-GB.'
      - in: query
        name: original
        schema:
          type: string
        description: The url to which the user should be redirected after a successful
          login.
      - in: query
        name: workspace_invitation_token
        schema:
          type: string
        description: If provided and valid, the user accepts the workspace invitation
          and will have access to the workspace after login or signing up.
      tags:
      - Auth
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SAML_INVALID_LOGIN_REQUEST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/teams/{team_id}/":
    get:
      operationId: get_team
      description: Returns the information related to the provided team id.
      parameters:
      - in: path
        name: team_id
        schema:
          type: integer
        description: Returns the team related to the provided value.
        required: true
      tags:
      - Teams
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamResponse"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    put:
      operationId: update_team
      description: Updates an existing team with a new name.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: team_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Team"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Team"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Team"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TEAM_NAME_NOT_UNIQUE
                    - ERROR_SUBJECT_BAD_REQUEST"
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                    - ERROR_SUBJECT_DOES_NOT_EXIST
                    - ERROR_ROLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_team
      description: Deletes a team if the authorized user is in the team's workspace.
        All the related children (e.g. subjects) are also going to be deleted.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: team_id
        schema:
          type: integer
        description: Deletes the team related to the provided value.
        required: true
      tags:
      - Teams
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/teams/{team_id}/subjects/":
    get:
      operationId: list_team_subjects
      description: Lists all team subjects in a given team.
      parameters:
      - in: path
        name: team_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Teams
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamSubjectResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_subject
      description: Creates a new team subject.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: team_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamSubject"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TeamSubject"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TeamSubject"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamSubjectResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_SUBJECT_NOT_IN_GROUP
                    - ERROR_SUBJECT_TYPE_UNSUPPORTED
                    - ERROR_SUBJECT_BAD_REQUEST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                    - ERROR_SUBJECT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/teams/{team_id}/subjects/{subject_id}/":
    get:
      operationId: get_subject
      description: Returns the information related to the provided subject id
      parameters:
      - in: path
        name: subject_id
        schema:
          type: integer
        description: Returns the subject related to the provided value.
        required: true
      - in: path
        name: team_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Teams
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamSubjectResponse"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                    - ERROR_SUBJECT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_subject
      description: Deletes a subject if the authorized user is in the team's workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: subject_id
        schema:
          type: integer
        description: The subject id to remove from the team.
        required: true
      - in: path
        name: team_id
        schema:
          type: integer
        description: The team id which the subject will be removed from.
        required: true
      tags:
      - Teams
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_TEAM_DOES_NOT_EXIST
                    - ERROR_SUBJECT_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/teams/workspace/{workspace_id}/":
    get:
      operationId: workspace_list_teams
      description: Lists all teams in a given workspace.
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: Search for teams by their name.
      - in: query
        name: sorts
        schema:
          type: string
        description: Sort teams by name or subjects.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Lists all teams in a given workspace.
        required: true
      tags:
      - Teams
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamResponse"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: workspace_create_team
      description: Creates a new team.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workspace_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Teams
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Team"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Team"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Team"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_SUBJECT_BAD_REQUEST
                    - ERROR_TEAM_NAME_NOT_UNIQUE
                    - ERROR_SUBJECT_NOT_IN_GROUP
                    - ERROR_SUBJECT_TYPE_UNSUPPORTED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_SUBJECT_DOES_NOT_EXIST
                    - ERROR_ROLE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/templates/":
    get:
      operationId: list_templates
      description: Lists all the template categories and the related templates that
        are in that category. The template's `workspace_id` can be used for previewing
        purposes because that workspace contains the applications that are in the
        template. All the `get` and `list` endpoints related to that workspace are
        publicly accessible.
      tags:
      - Templates
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TemplateCategories"
          description: ''
  "/api/templates/install/{workspace_id}/{template_id}/":
    post:
      operationId: install_template
      description: "(Deprecated) Installs the applications of the given template into
        the given workspace if the user has access to that workspace. The response
        contains those newly created applications."
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: template_id
        schema:
          type: integer
        description: The id related to the template that must be installed.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id related to the workspace where the template applications
          must be installed into.
        required: true
      tags:
      - Templates
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ApplicationApplication"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TEMPLATE_FILE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_TEMPLATE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/templates/install/{workspace_id}/{template_id}/async/":
    post:
      operationId: install_template_async
      description: Start an async job to install the applications of the given template
        into the given workspace if the user has access to that workspace. The response
        contains those newly created applications.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: template_id
        schema:
          type: integer
        description: The id related to the template that must be installed.
        required: true
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id related to the workspace where the template applications
          must be installed into.
        required: true
      tags:
      - Templates
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/InstallTemplateJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TEMPLATE_FILE_DOES_NOT_EXIST
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_TEMPLATE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/trash/":
    get:
      operationId: get_trash_structure
      description: Responds with the workspaces and applications available for the
        requesting user to inspect the trash contents of.
      tags:
      - Trash
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TrashStructure"
          description: ''
  "/api/trash/restore/":
    patch:
      operationId: restore
      description: Restores the specified trashed item back into baserow.
      tags:
      - Trash
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedTrashEntryRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedTrashEntryRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedTrashEntryRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_TRASH_ITEM_DOES_NOT_EXIST
                    - ERROR_CANNOT_RESTORE_PARENT_BEFORE_CHILD
                    - ERROR_PARENT_ID_MUST_NOT_BE_PROVIDED
                    - ERROR_PARENT_ID_MUST_BE_PROVIDED
                    - ERROR_CANT_RESTORE_AS_RELATED_TABLE_TRASHED
                    - ERROR_CANNOT_RESTORE_ITEM_NOT_OWNED_BY_USER
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/trash/workspace/{workspace_id}/":
    get:
      operationId: workspace_get_contents
      description: Responds with trash contents for a workspace optionally filtered
        to a specific application.
      parameters:
      - in: query
        name: application_id
        schema:
          type: integer
        description: Optionally filters down the trash to only items for this application
          in the workspace.
      - in: query
        name: page
        schema:
          type: integer
        description: Selects which page of trash contents should be returned.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Returns the trash for the workspace with this id.
        required: true
      tags:
      - Trash
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PaginationSerializerTrashContents"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_NOT_IN_GROUP
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: workspace_empty_contents
      description: Empties the specified workspace and/or application of trash, including
        the workspace and application themselves if they are trashed also.
      parameters:
      - in: query
        name: application_id
        schema:
          type: integer
        description: Optionally filters down the trash to delete to only items for
          this application in the workspace.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace whose trash contents to empty, including the workspace
          itself if it is also trashed.
        required: true
      tags:
      - Trash
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_NOT_IN_GROUP
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/":
    post:
      operationId: create_user
      description: Creates a new user based on the provided values. If desired an
        authentication JWT can be generated right away. After creating an account
        the initial workspace containing a database is created.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Register"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Register"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Register"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always
                          an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant)
                          selected by the user. Ex: en-GB.'
                  token:
                    type: string
                    deprecated: true
                    description: Deprecated. Use the `access_token` instead.
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
                  refresh_token:
                    type: string
                    description: "'refresh_token' can be used to get a new valid 'access_token'.
                      This token will be valid for 168 hours."
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_ALREADY_EXISTS
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                    - ERROR_REQUEST_BODY_VALIDATION
                    - BAD_TOKEN_SIGNATURE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user-files/upload-file/":
    post:
      operationId: upload_file
      description: Uploads a file to Baserow by uploading the file contents directly.
        A `file` multipart is expected containing the file contents.
      tags:
      - User files
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserFile"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_FILE
                    - ERROR_FILE_SIZE_TOO_LARGE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user-files/upload-via-url/":
    post:
      operationId: upload_via_url
      description: Uploads a file to Baserow by downloading it from the provided URL.
      tags:
      - User files
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserFileUploadViaURLRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/UserFileUploadViaURLRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/UserFileUploadViaURLRequest"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - Database token: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserFile"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_FILE
                    - ERROR_FILE_SIZE_TOO_LARGE
                    - ERROR_FILE_URL_COULD_NOT_BE_REACHED
                    - ERROR_INVALID_FILE_URL
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user-source-auth-refresh/":
    post:
      operationId: user_source_token_refresh
      description: Generate a new access_token that can be used to continue operating
        on Baserow with a user source user starting from a valid refresh token.
      tags:
      - User sources
      security:
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: The JWT refresh token is invalid or expired.
          description: ''
  "/api/user-source-token-blacklist/":
    post:
      operationId: user_source_token_blacklist
      description: Blacklists the provided user source token. This can be used the
        sign the user off.
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenBlacklist"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenBlacklist"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenBlacklist"
        required: true
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                description: The JWT refresh token is invalid or expired.
          description: ''
  "/api/user-source/{user_source_id}/":
    patch:
      operationId: update_application_user_source
      description: Updates an existing user_source.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: user_source_id
        schema:
          type: integer
        description: The id of the user_source
        required: true
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUser_SourceUpdateUserSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUser_SourceUpdateUserSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUser_SourceUpdateUserSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User_SourceUserSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_application_user_source
      description: Deletes the user_source related by the given id.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: user_source_id
        schema:
          type: integer
        description: The id of the user_source
        required: true
      tags:
      - User sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user-source/{user_source_id}/force-token-auth":
    post:
      operationId: user_source_force_token_auth
      description: Force authenticates an existing user based on their ID. If successful,
        an access token and a refresh token will be returned.
      parameters:
      - in: path
        name: user_source_id
        schema:
          type: integer
        description: The user source to use to authenticate the user.
        required: true
      tags:
      - User sources
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
                  refresh_token:
                    type: string
                    description: "'refresh_token' can be used to get a new valid 'access_token'.
                      This token will be valid for 168 hours."
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: An active user with the provided ID could not be found.
          description: ''
  "/api/user-source/{user_source_id}/move/":
    patch:
      operationId: move_application_user_source
      description: Moves the user_source in the application before another user_source
        or at the end of the application if no before user_source is given. The user_sources
        must belong to the same application.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: user_source_id
        schema:
          type: integer
        description: The id of the user_source to move
        required: true
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedMoveUserSource"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedMoveUserSource"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedMoveUserSource"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User_SourceUserSource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_USER_SOURCE_NOT_IN_SAME_APPLICATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_SOURCE_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user-source/{user_source_id}/token-auth":
    post:
      operationId: user_source_token_auth
      description: Authenticates an existing user against a user source based on their
        credentials. If successful, an access token and a refresh token will be returned.
      parameters:
      - in: path
        name: user_source_id
        schema:
          type: integer
        description: The id of the user_source to move
        required: true
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenObtainPair"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenObtainPair"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenObtainPair"
        required: true
      security:
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
                  refresh_token:
                    type: string
                    description: "'refresh_token' can be used to get a new valid 'access_token'.
                      This token will be valid for 168 hours."
          description: ''
        '401':
          content:
            application/json:
              schema:
                description: An active user with the provided email and password could
                  not be found.
          description: ''
  "/api/user-source/{user_source_uid}/sso/oauth2/openid_connect/callback/":
    get:
      operationId: app_auth_oidc_login_callback
      description: Processes callback from OAuth2 provider and logs the user in if
        successful.
      parameters:
      - in: query
        name: code
        schema:
          type: string
        description: The code returned by the IDP.
      - in: query
        name: state
        schema:
          type: string
        description: The oauth state returned by the IDP.
      - in: path
        name: user_source_uid
        schema:
          type: integer
        description: The uid of the user source for which to process the callback.
        required: true
      tags:
      - User sources
      responses:
        '302':
          description: No response body
  "/api/user-source/{user_source_uid}/sso/oauth2/openid_connect/login/":
    get:
      operationId: app_auth_oidc_login_redirect
      description: Redirects to the OAuth2 provider's authentication URL based on
        the provided user source uid and issuer.
      parameters:
      - in: query
        name: iss
        schema:
          type: string
        description: The issuer of the authentication.
      - in: query
        name: original
        schema:
          type: string
        description: The URL that the user wants to access.
      - in: path
        name: user_source_uid
        schema:
          type: integer
        description: The uid of the user source to use for authentication.
        required: true
      tags:
      - User sources
      responses:
        '302':
          description: No response body
  "/api/user-source/{user_source_uid}/sso/saml/login/":
    get:
      operationId: app_auth_provider_saml_sp_login
      description: This is the endpoint that is called when the user wants to initiate
        a SSO SAML login from Baserow (the service provider). The user will be redirected
        to the SAML identity provider (IdP) where the user can authenticate. Once
        logged in in the IdP, the user will be redirected back to the assertion consumer
        service endpoint (ACS) where the SAML response will be validated and a new
        JWT session token will be provided to work with Baserow APIs.
      parameters:
      - in: query
        name: email
        schema:
          type: string
        description: The email address of the user that want to sign in using SAML.
      - in: query
        name: original
        schema:
          type: string
        description: The url to which the user should be redirected after a successful
          login or sign up.
      - in: path
        name: user_source_uid
        schema:
          type: string
        required: true
      tags:
      - User sources
      responses:
        '302':
          description: No response body
  "/api/user-source/sso/saml/acs/":
    post:
      operationId: auth_provider_saml_acs_url_2
      description: Complete the SAML authentication flow by validating the SAML response.
        Sign in the user if already exists in the user source or create a new one
        otherwise.Once authenticated, the user will be redirected to the original
        URL they were trying to access. If the response is invalid, the user will
        be redirected to an error page with a specific error message.
      tags:
      - User sources
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CommonSAMLResponse"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CommonSAMLResponse"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CommonSAMLResponse"
        required: true
      responses:
        '302':
          description: No response body
  "/api/user/account/":
    patch:
      operationId: update_account
      description: Updates the account information of the authenticated user.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedAccount"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedAccount"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedAccount"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/change-password/":
    post:
      operationId: change_password
      description: Changes the password of an authenticated user, but only if the
        old password matches.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangePasswordBodyValidation"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ChangePasswordBodyValidation"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ChangePasswordBodyValidation"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_OLD_PASSWORD
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/dashboard/":
    get:
      operationId: dashboard
      description: Lists all the relevant user information that for example could
        be shown on a dashboard. It will contain all the pending workspace invitations
        for that user.
      tags:
      - User
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Dashboard"
          description: ''
  "/api/user/redo/":
    patch:
      operationId: redo
      description: Redoes the latest redoable action performed by the user making
        the request. a ClientSessionId header must be provided and only actions which
        were performed the same user with the same ClientSessionId value set on the
        api request that performed the action will be redone.Additionally the ClientSessionId
        header must be between 1 and 256 characters long and must only contain alphanumeric
        or the - characters.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: The particular client session to redo actions for. The actions
          must have been performed with this same header set with the same value for
          them to be redoable by this endpoint.
        required: true
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUndoRedoRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUndoRedoRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUndoRedoRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UndoRedoResponse"
          description: ''
  "/api/user/reset-password/":
    post:
      operationId: reset_password
      description: Changes the password of a user if the reset token is valid. The
        **send_password_reset_email** endpoint sends an email to the user containing
        the token. That token can be used to change the password here without providing
        the old password.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetPasswordBodyValidation"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/ResetPasswordBodyValidation"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/ResetPasswordBodyValidation"
        required: true
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - BAD_TOKEN_SIGNATURE
                    - EXPIRED_TOKEN_SIGNATURE
                    - ERROR_USER_NOT_FOUND
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/schedule-account-deletion/":
    post:
      operationId: schedule_account_deletion
      description: Schedules the account deletion of the authenticated user. The user
        will be permanently deleted after the grace delay defined by the instance
        administrator.
      tags:
      - User
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/send-reset-password-email/":
    post:
      operationId: send_password_reset_email
      description: Sends an email containing the password reset link to the email
        address of the user. This will only be done if a user is found with the given
        email address. The endpoint will not fail if the email address is not found.
        The link is going to the valid for 48 hours.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SendResetPasswordEmailBodyValidation"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/SendResetPasswordEmailBodyValidation"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/SendResetPasswordEmailBodyValidation"
        required: true
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_HOSTNAME_IS_NOT_ALLOWED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/send-verify-email/":
    post:
      operationId: send_verify_email
      description: Sends an email to the user with an email verification link if the
        user's email is not verified yet.
      tags:
      - User
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '204':
          description: No response body
  "/api/user/token-auth/":
    post:
      operationId: token_auth
      description: Authenticates an existing user based on their email and their password.
        If successful, an access token and a refresh token will be returned.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenObtainPairWithUser"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenObtainPairWithUser"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenObtainPairWithUser"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always
                          an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant)
                          selected by the user. Ex: en-GB.'
                  token:
                    type: string
                    deprecated: true
                    description: Deprecated. Use the `access_token` instead.
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
                  refresh_token:
                    type: string
                    description: "'refresh_token' can be used to get a new valid 'access_token'.
                      This token will be valid for 168 hours."
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_CREDENTIALS
                    - ERROR_DEACTIVATED_USER
                    - ERROR_AUTH_PROVIDER_DISABLED
                    - ERROR_EMAIL_VERIFICATION_REQUIRED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/token-blacklist/":
    post:
      operationId: token_blacklist
      description: Blacklists the provided token. This can be used the sign the user
        off.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenBlacklist"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenBlacklist"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenBlacklist"
        required: true
      responses:
        '204':
          description: No response body
        '401':
          content:
            application/json:
              schema:
                description: The JWT refresh token is invalid or expired.
          description: ''
  "/api/user/token-refresh/":
    post:
      operationId: token_refresh
      description: Generate a new access_token that can be used to continue operating
        on Baserow starting from a valid refresh token.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenRefreshWithUser"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenRefreshWithUser"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenRefreshWithUser"
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always
                          an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant)
                          selected by the user. Ex: en-GB.'
                  token:
                    type: string
                    deprecated: true
                    description: Deprecated. Use the `access_token` instead.
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_REFRESH_TOKEN
                    - ERROR_EMAIL_VERIFICATION_REQUIRED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/token-verify/":
    post:
      operationId: token_verify
      description: Verifies if the refresh token is valid and can be used to generate
        a new access_token.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TokenVerifyWithUser"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/TokenVerifyWithUser"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/TokenVerifyWithUser"
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always
                          an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant)
                          selected by the user. Ex: en-GB.'
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_REFRESH_TOKEN
                    - ERROR_EMAIL_VERIFICATION_REQUIRED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/user/undo/":
    patch:
      operationId: undo
      description: undoes the latest undoable action performed by the user making
        the request. a ClientSessionId header must be provided and only actions which
        were performed the same user with the same ClientSessionId value set on the
        api request that performed the action will be undone.Additionally the ClientSessionId
        header must be between 1 and 256 characters long and must only contain alphanumeric
        or the - characters.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: The particular client session to undo actions for. The actions
          must have been performed with this same header set with the same value for
          them to be undoable by this endpoint.
        required: true
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUndoRedoRequest"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUndoRedoRequest"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUndoRedoRequest"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UndoRedoResponse"
          description: ''
  "/api/user/verify-email/":
    post:
      operationId: verify_email
      description: Passing the correct verification token will confirm that the user's
        email address belongs to the user. This endpoint also optionally returns user
        information, access token and the refresh token for automatically signing
        user in the system if the request is performed by unauthenticated user.
      tags:
      - User
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/VerifyEmailAddress"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/VerifyEmailAddress"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/VerifyEmailAddress"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    description: An object containing information related to the user.
                    properties:
                      first_name:
                        type: string
                        description: The first name of related user.
                      username:
                        type: string
                        format: email
                        description: The username of the related user. This is always
                          an email address.
                      language:
                        type: string
                        description: 'An ISO 639 language code (with optional variant)
                          selected by the user. Ex: en-GB.'
                  token:
                    type: string
                    deprecated: true
                    description: Deprecated. Use the `access_token` instead.
                  access_token:
                    type: string
                    description: "'access_token' can be used to authorize for other
                      endpoints that require authorization. This token will be valid
                      for 10 minutes."
                  refresh_token:
                    type: string
                    description: "'refresh_token' can be used to get a new valid 'access_token'.
                      This token will be valid for 168 hours."
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_INVALID_VERIFICATION_TOKEN
                    - ERROR_EMAIL_ALREADY_VERIFIED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_DEACTIVATED_USER
                    - ERROR_AUTH_PROVIDER_DISABLED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/":
    get:
      operationId: list_workspaces
      description: Lists all the workspaces of the authorized user. A workspace can
        contain multiple applications like a database. Multiple users can have access
        to a workspace. For example each company could have their own workspace containing
        databases related to that company. The order of the workspaces are custom
        for each user. The order is configurable via the **order_workspaces** endpoint.
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WorkspaceUserWorkspace"
          description: ''
    post:
      operationId: create_workspace
      description: Creates a new workspace where only the authorized user has access
        to. No initial data like database applications are added, they have to be
        created via other endpoints.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Workspace"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/Workspace"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/Workspace"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceUserWorkspace"
          description: ''
  "/api/workspaces/{workspace_id}/":
    patch:
      operationId: update_workspace
      description: Updates the existing workspace related to the provided `workspace_id`
        parameter if the authorized user belongs to the workspace. It is not yet possible
        to add additional users to a workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Updates the workspace related to the provided value.
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedWorkspace"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedWorkspace"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedWorkspace"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Workspace"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_workspace
      description: Deletes an existing workspace if the authorized user belongs to
        the workspace. All the applications, databases, tables etc that were in the
        workspace are going to be deleted also.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Deletes the workspace related to the provided value.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                    - ERROR_CANNOT_DELETE_ALREADY_DELETED_ITEM
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/export/":
    get:
      operationId: list_workspace_exports
      description: Lists exports that were created for given workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id of the workspace that is being exported.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ListExportWorkspaceApplications"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/export/async/":
    post:
      operationId: export_workspace_applications_async
      description: Export workspace or set of applications application if the authorized
        user is in the application's workspace. All the related children are also
        going to be exported. For example in case of a database application all the
        underlying tables, fields, views and rows are going to be exported.Roles are
        not part of the export.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id of the workspace that must be exported.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExportApplicationsJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_APPLICATION_NOT_IN_GROUP
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                    - ERROR_APPLICATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/import/{resource_id}/":
    delete:
      operationId: import_export_resource
      description: Delete a resource. This endpoint mark as ready for deletion the
        specified resource. This operation is not undoable. The user must be the owner
        of the resource to perform this action.
      parameters:
      - in: path
        name: resource_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      - in: path
        name: workspace_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - RESOURCE_DOES_NOT_EXIST
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/import/async/":
    post:
      operationId: import_workspace_applications_async
      description: Import a set of applications included in a given resource if the
        authorized user is in the specified workspace. This endpoint requires a valid
        resource_id of the uploaded file.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id of the workspace where the application will be imported.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ImportApplicationsJobTypeResponse"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_MAX_JOB_COUNT_EXCEEDED
                    - ERROR_RESOURCE_DOES_NOT_EXIST
                    - ERROR_RESOURCE_IS_INVALID
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/import/upload-file/":
    post:
      operationId: import_resource_upload_file
      description: Uploads an exported workspace or a set of applications if the authorized
        user is in the workspace. The uploaded file must be a valid ZIP file containing
        the applications' data for future import.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The id of the workspace for which file is uploaded.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '202':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ImportResource"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_INVALID_FILE
                    - ERROR_FILE_SIZE_TOO_LARGE
                    - ERROR_RESOURCE_IS_INVALID
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/leave/":
    post:
      operationId: leave_workspace
      description: Makes the authenticated user leave the workspace related to the
        provided `workspace_id` if the user is in that workspace. If the user is the
        last admin in the workspace, they will not be able to leave it. There must
        always be one admin in the workspace, otherwise it will be left without control.
        If that is the case, they must either delete the workspace or give another
        member admin permissions first.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Leaves the workspace related to the value.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_GROUP_USER_IS_LAST_ADMIN
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/permissions/":
    get:
      operationId: workspace_permissions
      description: "Returns a the permission data necessary to determine the permissions
        of a specific user over a specific workspace. \nSee `core.handler.CoreHandler.get_permissions()`
        for more details."
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: The workspace id we want the permission object for.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionObject"
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/{workspace_id}/settings/generative-ai/":
    get:
      operationId: get_workspace_generative_ai_models_settings
      description: Returns the generative AI models settings for the given workspace.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: string
          pattern: "^[0-9]+$"
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GenerativeAISettings"
          description: ''
    patch:
      operationId: update_workspace_generative_ai_models_settings
      description: Updates the generative AI models settings for the given workspace.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Updates the workspace settings for the generative AI models available.
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedGenerativeAISettings"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedGenerativeAISettings"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedGenerativeAISettings"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Workspace"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/create-initial-workspace/":
    post:
      operationId: create_initial_workspace
      description: Creates an initial workspace. This is typically called after the
        user signs up and skips the onboarding in the frontend. It contains some example
        data.
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceUserWorkspace"
          description: ''
  "/api/workspaces/invitations/{workspace_invitation_id}/":
    get:
      operationId: get_workspace_invitation
      description: Returns the requested workspace invitation if the authorized user
        has admin right to the related workspace
      parameters:
      - in: path
        name: workspace_invitation_id
        schema:
          type: integer
        description: Returns the workspace invitation related to the provided value.
        required: true
      tags:
      - Workspace invitations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceInvitation"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    patch:
      operationId: update_workspace_invitation
      description: Updates the existing workspace invitation related to the provided
        `workspace_invitation_id` param if the authorized user has admin rights to
        the related workspace.
      parameters:
      - in: path
        name: workspace_invitation_id
        schema:
          type: integer
        description: Updates the workspace invitation related to the provided value.
        required: true
      tags:
      - Workspace invitations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateWorkspaceInvitation"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceInvitation"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_workspace_invitation
      description: Deletes a workspace invitation if the authorized user has admin
        rights to the related workspace.
      parameters:
      - in: path
        name: workspace_invitation_id
        schema:
          type: integer
        description: Deletes the workspace invitation related to the provided value.
        required: true
      tags:
      - Workspace invitations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/invitations/{workspace_invitation_id}/accept/":
    post:
      operationId: accept_workspace_invitation
      description: Accepts a workspace invitation with the given id if the email address
        of the user matches that of the invitation.
      parameters:
      - in: path
        name: workspace_invitation_id
        schema:
          type: integer
        description: Accepts the workspace invitation related to the provided value.
        required: true
      tags:
      - Workspace invitations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceUserWorkspace"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_EMAIL_MISMATCH
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/invitations/{workspace_invitation_id}/reject/":
    post:
      operationId: reject_workspace_invitation
      description: Rejects a workspace invitation with the given id if the email address
        of the user matches that of the invitation.
      parameters:
      - in: path
        name: workspace_invitation_id
        schema:
          type: integer
        description: Rejects the workspace invitation related to the provided value.
        required: true
      tags:
      - Workspace invitations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_EMAIL_MISMATCH
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/invitations/token/{token}/":
    get:
      operationId: get_workspace_invitation_by_token
      description: Responds with the serialized workspace invitation if an invitation
        with the provided token is found.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        description: Returns the workspace invitation related to the provided token.
        required: true
      tags:
      - Workspace invitations
      security:
      - UserSource JWT: []
      - JWT: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserWorkspaceInvitation"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - BAD_TOKEN_SIGNATURE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/invitations/workspace/{workspace_id}/":
    get:
      operationId: list_workspace_invitations
      description: Lists all the workspace invitations of the workspace related to
        the provided `workspace_id` parameter if the authorized user has admin rights
        to that workspace.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Returns only invitations that are in the workspace related to
          the provided value.
        required: true
      tags:
      - Workspace invitations
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WorkspaceInvitation"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    post:
      operationId: create_workspace_invitation
      description: Creates a new workspace invitations for an email address if the
        authorized user has admin rights to the related workspace. An email containing
        a sign up link will be send to the user.
      parameters:
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Creates a workspace invitation to the workspace related to the
          provided value.
        required: true
      tags:
      - Workspace invitations
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateWorkspaceInvitation"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/CreateWorkspaceInvitation"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/CreateWorkspaceInvitation"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceInvitation"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                    - ERROR_REQUEST_BODY_VALIDATION
                    - ERROR_MAX_NUMBER_OF_PENDING_WORKSPACE_INVITES_REACHED
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/order/":
    post:
      operationId: order_workspaces
      description: Changes the order of the provided workspace ids to the matching
        position that the id has in the list. If the authorized user does not belong
        to the workspace it will be ignored. The order will be custom for each user.
      parameters:
      - in: header
        name: ClientSessionId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular client session. Then using the undo/redo
          endpoints with the same ClientSessionId header this action can be undone/redone.
      - in: header
        name: ClientUndoRedoActionGroupId
        schema:
          type: string
          format: uuid
        description: An optional header that marks the action performed by this request
          as having occurred in a particular action group.Then calling the undo/redo
          endpoint with the same ClientSessionId header, all the actions belonging
          to the same action group can be undone/redone together in a single API call.
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OrderWorkspaces"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/OrderWorkspaces"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/OrderWorkspaces"
        required: true
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
  "/api/workspaces/users/{workspace_user_id}/":
    patch:
      operationId: update_workspace_user
      description: Updates the existing workspace user related to the provided `workspace_user_id`
        param if the authorized user has admin rights to the related workspace.
      parameters:
      - in: path
        name: workspace_user_id
        schema:
          type: integer
        description: Updates the workspace user related to the provided value.
        required: true
      tags:
      - Workspaces
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
          application/x-www-form-urlencoded:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
          multipart/form-data:
            schema:
              "$ref": "#/components/schemas/PatchedUpdateWorkspaceUser"
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/WorkspaceUser"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                    - ERROR_REQUEST_BODY_VALIDATION
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_USER_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
    delete:
      operationId: delete_workspace_user
      description: Deletes a workspace user if the authorized user has admin rights
        to the related workspace.
      parameters:
      - in: path
        name: workspace_user_id
        schema:
          type: integer
        description: Deletes the workspace user related to the provided value.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '204':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_INVITATION_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
  "/api/workspaces/users/workspace/{workspace_id}/":
    get:
      operationId: list_workspace_users
      description: Lists all the users that are in a workspace if the authorized user
        has admin permissions to the related workspace. To add a user to a workspace
        an invitation must be sent first.
      parameters:
      - in: query
        name: search
        schema:
          type: string
        description: Search for workspace users by username, or email.
      - in: query
        name: sorts
        schema:
          type: string
        description: Sort workspace users by name, email or role.
      - in: path
        name: workspace_id
        schema:
          type: integer
        description: Lists workspace users related to the provided workspace value.
        required: true
      tags:
      - Workspaces
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ListWorkspaceUsersWithMemberData"
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_USER_NOT_IN_GROUP
                    - ERROR_USER_INVALID_GROUP_PERMISSIONS
                    - ERROR_INVALID_SORT_DIRECTION
                    - ERROR_INVALID_SORT_ATTRIBUTE
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Machine readable error indicating what went wrong.
                    enum:
                    - ERROR_GROUP_DOES_NOT_EXIST
                  detail:
                    oneOf:
                    - type: string
                      format: string
                      description: Human readable details about what went wrong.
                    - type: object
                      format: object
                      description: Machine readable object about what went wrong.
          description: ''
components:
  schemas:
    AIFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - "$ref": "#/components/schemas/AiOutputTypeEnum"
          description: |-
            The desired output type of the field. It will try to force the response of the prompt to match it.

            * `text` - text
            * `choice` - choice
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield
            focused answers, while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI
            model.
      required:
      - name
      - type
    AIFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - "$ref": "#/components/schemas/AiOutputTypeEnum"
          description: |-
            The desired output type of the field. It will try to force the response of the prompt to match it.

            * `text` - text
            * `choice` - choice
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield
            focused answers, while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI
            model.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    AIFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - "$ref": "#/components/schemas/AiOutputTypeEnum"
          description: |-
            The desired output type of the field. It will try to force the response of the prompt to match it.

            * `text` - text
            * `choice` - choice
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield
            focused answers, while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI
            model.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    AIFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
        ai_generative_ai_type:
          type: string
          nullable: true
          maxLength: 32
        ai_generative_ai_model:
          type: string
          nullable: true
          maxLength: 128
        ai_output_type:
          allOf:
          - "$ref": "#/components/schemas/AiOutputTypeEnum"
          description: |-
            The desired output type of the field. It will try to force the response of the prompt to match it.

            * `text` - text
            * `choice` - choice
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield
            focused answers, while higher values increase creativity.
        ai_prompt:
          type: string
          default: ''
          description: The prompt that must run for each row. Must be an formula.
        ai_file_field_id:
          type: integer
          minimum: 1
          nullable: true
          description: File field that will be used as a knowledge base for the AI
            model.
    Account:
      type: object
      description: This serializer must be kept in sync with `UserSerializer`.
      properties:
        first_name:
          type: string
          maxLength: 150
          minLength: 2
        language:
          type: string
          description: 'An ISO 639 language code (with optional variant) selected
            by the user. Ex: en-GB.'
          maxLength: 10
          minLength: 2
        email_notification_frequency:
          allOf:
          - "$ref": "#/components/schemas/EmailNotificationFrequencyEnum"
          description: |-
            The maximum frequency at which the user wants to receive email notifications.

            * `instant` - instant
            * `daily` - daily
            * `weekly` - weekly
            * `never` - never
        completed_onboarding:
          type: boolean
          description: Indicates whether the user has completed the onboarding.
        completed_guided_tours:
          type: array
          items:
            type: string
          description: Indicates which guided tour types have been completed.
    ActionScopes:
      type: object
      description: |-
        Mixin to a DRF serializer class to raise an exception if data with unknown fields
        is provided to the serializer.
      properties:
        root:
          type: boolean
          nullable: true
          description: If set to true then actions registered in the root scope will
            be included when undoing or redoing.
        workspace:
          type: integer
          minimum: 0
          nullable: true
          description: If set to a workspaces id then any actions directly related
            to that workspace will be be included when undoing or redoing.
        application:
          type: integer
          minimum: 0
          nullable: true
          description: If set to an applications id then any actions directly related
            to that application will be be included when undoing or redoing.
        table:
          type: integer
          minimum: 0
          nullable: true
          description: If set to a table id then any actions directly related to that
            table will be be included when undoing or redoing.
        view:
          type: integer
          minimum: 0
          nullable: true
          description: If set to an view id then any actions directly related to that
            view will be be included when undoing or redoing.
        teams_in_workspace:
          type: integer
          minimum: 0
          nullable: true
          description: If set to a workspace id then any actions directly related
            to that workspace will be be included when undoing or redoing.
    AdminDashboard:
      type: object
      properties:
        total_users:
          type: integer
        total_workspaces:
          type: integer
        total_applications:
          type: integer
        new_users_last_24_hours:
          type: integer
        new_users_last_7_days:
          type: integer
        new_users_last_30_days:
          type: integer
        previous_new_users_last_24_hours:
          type: integer
        previous_new_users_last_7_days:
          type: integer
        previous_new_users_last_30_days:
          type: integer
        active_users_last_24_hours:
          type: integer
        active_users_last_7_days:
          type: integer
        active_users_last_30_days:
          type: integer
        previous_active_users_last_24_hours:
          type: integer
        previous_active_users_last_7_days:
          type: integer
        previous_active_users_last_30_days:
          type: integer
        new_users_per_day:
          type: array
          items:
            "$ref": "#/components/schemas/AdminDashboardPerDay"
        active_users_per_day:
          type: array
          items:
            "$ref": "#/components/schemas/AdminDashboardPerDay"
      required:
      - active_users_last_24_hours
      - active_users_last_30_days
      - active_users_last_7_days
      - active_users_per_day
      - new_users_last_24_hours
      - new_users_last_30_days
      - new_users_last_7_days
      - new_users_per_day
      - previous_active_users_last_24_hours
      - previous_active_users_last_30_days
      - previous_active_users_last_7_days
      - previous_new_users_last_24_hours
      - previous_new_users_last_30_days
      - previous_new_users_last_7_days
      - total_applications
      - total_users
      - total_workspaces
    AdminDashboardPerDay:
      type: object
      properties:
        date:
          type: string
          format: date
        count:
          type: integer
      required:
      - count
      - date
    AggregationRawTypeEnum:
      enum:
      - empty_count
      - not_empty_count
      - unique_count
      - min
      - max
      - sum
      - average
      - median
      - decile
      - variance
      - std_dev
      - distribution
      type: string
      description: |-
        * `empty_count` - empty_count
        * `not_empty_count` - not_empty_count
        * `unique_count` - unique_count
        * `min` - min
        * `max` - max
        * `sum` - sum
        * `average` - average
        * `median` - median
        * `decile` - decile
        * `variance` - variance
        * `std_dev` - std_dev
        * `distribution` - distribution
    AiOutputTypeEnum:
      enum:
      - text
      - choice
      type: string
      description: |-
        * `text` - text
        * `choice` - choice
    AirtableImportJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        workspace_id:
          type: integer
          description: The workspace ID where the Airtable base must be imported into.
        airtable_share_url:
          type: string
          format: uri
          description: The publicly shared URL of the Airtable base (e.g. https://airtable.com/shrxxxxxxxxxxxxxx)
        skip_files:
          type: boolean
          default: false
          description: If true, then the files are not downloaded and imported.
        session:
          type: string
          nullable: true
          description: Optionally provide a session object that's used as authentication.
        session_signature:
          type: string
          nullable: true
          description: The matching session signature if a session is provided.
      required:
      - airtable_share_url
      - type
    AirtableImportJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        workspace_id:
          type: integer
          description: The workspace ID where the Airtable base must be imported into.
        database:
          "$ref": "#/components/schemas/ApplicationApplication"
        airtable_share_id:
          type: string
          format: uri
          description: Public ID of the shared Airtable base that must be imported.
          maxLength: 200
        skip_files:
          type: boolean
          default: false
          description: If true, then the files are not downloaded and imported.
      required:
      - airtable_share_id
      - database
      - id
      - progress_percentage
      - state
      - type
      - workspace_id
    Alignment6bdEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    AlignmentCeaEnum:
      enum:
      - top
      - center
      - bottom
      type: string
      description: |-
        * `top` - Top
        * `center` - Center
        * `bottom` - Bottom
    AnthropicSettings:
      type: object
      properties:
        models:
          type: array
          items:
            type: string
          description: The models that are enabled for this AI type.
        api_key:
          type: string
          description: The Anthropic API key that is used to authenticate with the
            Anthropic API.
    App_Auth_ProviderAppAuthProvider:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider"
      - "$ref": "#/components/schemas/SamlAppAuthProviderModelAppAuthProvider"
      - "$ref": "#/components/schemas/OpenIdConnectAppAuthProviderModelAppAuthProvider"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_password: "#/components/schemas/LocalBaserowPasswordAppAuthProviderAppAuthProvider"
          saml: "#/components/schemas/SamlAppAuthProviderModelAppAuthProvider"
          openid_connect: "#/components/schemas/OpenIdConnectAppAuthProviderModelAppAuthProvider"
    App_Auth_ProviderBaseAppAuthProvider:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider"
      - "$ref": "#/components/schemas/SamlAppAuthProviderModelBaseAppAuthProvider"
      - "$ref": "#/components/schemas/OpenIdConnectAppAuthProviderModelBaseAppAuthProvider"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_password: "#/components/schemas/LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider"
          saml: "#/components/schemas/SamlAppAuthProviderModelBaseAppAuthProvider"
          openid_connect: "#/components/schemas/OpenIdConnectAppAuthProviderModelBaseAppAuthProvider"
    ApplicationApplication:
      oneOf:
      - "$ref": "#/components/schemas/DatabaseApplication"
      - "$ref": "#/components/schemas/BuilderApplication"
      - "$ref": "#/components/schemas/DashboardApplication"
      discriminator:
        propertyName: type
        mapping:
          database: "#/components/schemas/DatabaseApplication"
          builder: "#/components/schemas/BuilderApplication"
          dashboard: "#/components/schemas/DashboardApplication"
    ApplicationBaseApplicationCreatePolymorphic:
      oneOf:
      - "$ref": "#/components/schemas/DatabaseBaseApplicationCreatePolymorphic"
      - "$ref": "#/components/schemas/BuilderBaseApplicationCreatePolymorphic"
      - "$ref": "#/components/schemas/DashboardBaseApplicationCreatePolymorphic"
      discriminator:
        propertyName: type
        mapping:
          database: "#/components/schemas/DatabaseBaseApplicationCreatePolymorphic"
          builder: "#/components/schemas/BuilderBaseApplicationCreatePolymorphic"
          dashboard: "#/components/schemas/DashboardBaseApplicationCreatePolymorphic"
    ArrayFormulaTypeEnum:
      enum:
      - invalid
      - text
      - char
      - button
      - link
      - date_interval
      - duration
      - date
      - boolean
      - number
      - single_select
      - multiple_select
      - single_file
      - url
      - multiple_collaborators
      type: string
      description: |-
        * `invalid` - invalid
        * `text` - text
        * `char` - char
        * `button` - button
        * `link` - link
        * `date_interval` - date_interval
        * `duration` - duration
        * `date` - date
        * `boolean` - boolean
        * `number` - number
        * `single_select` - single_select
        * `multiple_select` - multiple_select
        * `single_file` - single_file
        * `url` - url
        * `multiple_collaborators` - multiple_collaborators
    AuditLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action_type:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        ip_address:
          type: string
          readOnly: true
          nullable: true
      required:
      - action_type
      - description
      - id
      - ip_address
      - timestamp
      - type
      - user
      - workspace
    AuditLogActionType:
      type: object
      properties:
        id:
          "$ref": "#/components/schemas/IdEnum"
        value:
          type: string
          description: |-
            Given the *incoming* primitive data, return the value for this field
            that should be validated and transformed to a native value.
          readOnly: true
      required:
      - id
      - value
    AuditLogExportJobCreateJob:
      type: object
      description: |-
        When mixed in to a model serializer for an ExportJob this will add an url field
        with the actual usable url of the export job's file (if it has one).
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        csv_column_separator:
          allOf:
          - "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
          default: ","
          description: "The value used to separate columns in the resulting csv file.\n\n*
            `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n*
            `unit_separator` - \x1F"
        csv_first_row_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv
            file.
        filter_user_id:
          type: integer
          minimum: 0
          description: 'Optional: The user to filter the audit log by.'
        filter_workspace_id:
          type: integer
          minimum: 0
          description: 'Optional: The workspace to filter the audit log by.'
        filter_action_type:
          allOf:
          - "$ref": "#/components/schemas/FilterActionTypeEnum"
          description: |-
            Optional: The action type to filter the audit log by.

            * `create_group` - create_group
            * `delete_group` - delete_group
            * `update_group` - update_group
            * `order_groups` - order_groups
            * `create_application` - create_application
            * `update_application` - update_application
            * `delete_application` - delete_application
            * `order_applications` - order_applications
            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_group_invitation` - create_group_invitation
            * `delete_group_invitation` - delete_group_invitation
            * `accept_group_invitation` - accept_group_invitation
            * `reject_group_invitation` - reject_group_invitation
            * `update_group_invitation_permissions` - update_group_invitation_permissions
            * `leave_group` - leave_group
            * `create_initial_workspace` - create_initial_workspace
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `create_snapshot` - create_snapshot
            * `delete_snapshot` - delete_snapshot
            * `restore_snapshot` - restore_snapshot
            * `empty_trash` - empty_trash
            * `restore_from_trash` - restore_from_trash
            * `create_user` - create_user
            * `update_user` - update_user
            * `schedule_user_deletion` - schedule_user_deletion
            * `cancel_user_deletion` - cancel_user_deletion
            * `sign_in_user` - sign_in_user
            * `change_user_password` - change_user_password
            * `send_reset_user_password` - send_reset_user_password
            * `reset_user_password` - reset_user_password
            * `send_verify_email` - send_verify_email
            * `verify_email` - verify_email
            * `create_db_token` - create_db_token
            * `update_db_token_name` - update_db_token_name
            * `update_db_token_permissions` - update_db_token_permissions
            * `rotate_db_token_key` - rotate_db_token_key
            * `delete_db_token_key` - delete_db_token_key
            * `create_webhook` - create_webhook
            * `delete_webhook` - delete_webhook
            * `update_webhook` - update_webhook
            * `export_table` - export_table
            * `import_database_from_airtable` - import_database_from_airtable
            * `create_table` - create_table
            * `delete_table` - delete_table
            * `order_tables` - order_tables
            * `update_table` - update_table
            * `duplicate_table` - duplicate_table
            * `create_row` - create_row
            * `create_rows` - create_rows
            * `import_rows` - import_rows
            * `delete_row` - delete_row
            * `delete_rows` - delete_rows
            * `move_row` - move_row
            * `update_row` - update_row
            * `update_rows` - update_rows
            * `create_view` - create_view
            * `duplicate_view` - duplicate_view
            * `delete_view` - delete_view
            * `order_views` - order_views
            * `update_view` - update_view
            * `create_view_filter` - create_view_filter
            * `update_view_filter` - update_view_filter
            * `delete_view_filter` - delete_view_filter
            * `create_view_sort` - create_view_sort
            * `update_view_sort` - update_view_sort
            * `delete_view_sort` - delete_view_sort
            * `create_view_group` - create_view_group
            * `update_view_group` - update_view_group
            * `delete_view_group` - delete_view_group
            * `submit_form` - submit_form
            * `rotate_view_slug` - rotate_view_slug
            * `update_view_field_options` - update_view_field_options
            * `create_decoration` - create_decoration
            * `update_decoration` - update_decoration
            * `delete_decoration` - delete_decoration
            * `create_view_filter_group` - create_view_filter_group
            * `update_view_filter_group` - update_view_filter_group
            * `delete_view_filter_group` - delete_view_filter_group
            * `create_data_sync_table` - create_data_sync_table
            * `update_data_sync_table` - update_data_sync_table
            * `sync_data_sync_table` - sync_data_sync_table
            * `create_field` - create_field
            * `delete_field` - delete_field
            * `update_field` - update_field
            * `duplicate_field` - duplicate_field
            * `change_primary_field` - change_primary_field
            * `create_widget` - create_widget
            * `update_widget` - update_widget
            * `delete_widget` - delete_widget
            * `update_dashboard_data_source` - update_dashboard_data_source
            * `generate_formula_with_ai` - generate_formula_with_ai
            * `create_row_comment` - create_row_comment
            * `delete_row_comment` - delete_row_comment
            * `update_row_comment` - update_row_comment
            * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug
            * `create_team` - create_team
            * `update_team` - update_team
            * `delete_team` - delete_team
            * `create_team_subject` - create_team_subject
            * `delete_team_subject` - delete_team_subject
            * `batch_assign_role` - batch_assign_role
            * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval
        filter_from_timestamp:
          type: string
          format: date-time
          description: 'Optional: The start date to filter the audit log by.'
        filter_to_timestamp:
          type: string
          format: date-time
          description: 'Optional: The end date to filter the audit log by.'
        exclude_columns:
          type: string
          description: 'Optional: A comma separated list of column names to exclude
            from the export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.'
      required:
      - type
      - url
    AuditLogExportJobJob:
      type: object
      description: |-
        When mixed in to a model serializer for an ExportJob this will add an url field
        with the actual usable url of the export job's file (if it has one).
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        csv_column_separator:
          allOf:
          - "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
          default: ","
          description: "The value used to separate columns in the resulting csv file.\n\n*
            `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n*
            `unit_separator` - \x1F"
        csv_first_row_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv
            file.
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        filter_user_id:
          type: integer
          minimum: 0
          description: 'Optional: The user to filter the audit log by.'
        filter_workspace_id:
          type: integer
          minimum: 0
          description: 'Optional: The workspace to filter the audit log by.'
        filter_action_type:
          allOf:
          - "$ref": "#/components/schemas/FilterActionTypeEnum"
          description: |-
            Optional: The action type to filter the audit log by.

            * `create_group` - create_group
            * `delete_group` - delete_group
            * `update_group` - update_group
            * `order_groups` - order_groups
            * `create_application` - create_application
            * `update_application` - update_application
            * `delete_application` - delete_application
            * `order_applications` - order_applications
            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_group_invitation` - create_group_invitation
            * `delete_group_invitation` - delete_group_invitation
            * `accept_group_invitation` - accept_group_invitation
            * `reject_group_invitation` - reject_group_invitation
            * `update_group_invitation_permissions` - update_group_invitation_permissions
            * `leave_group` - leave_group
            * `create_initial_workspace` - create_initial_workspace
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `create_snapshot` - create_snapshot
            * `delete_snapshot` - delete_snapshot
            * `restore_snapshot` - restore_snapshot
            * `empty_trash` - empty_trash
            * `restore_from_trash` - restore_from_trash
            * `create_user` - create_user
            * `update_user` - update_user
            * `schedule_user_deletion` - schedule_user_deletion
            * `cancel_user_deletion` - cancel_user_deletion
            * `sign_in_user` - sign_in_user
            * `change_user_password` - change_user_password
            * `send_reset_user_password` - send_reset_user_password
            * `reset_user_password` - reset_user_password
            * `send_verify_email` - send_verify_email
            * `verify_email` - verify_email
            * `create_db_token` - create_db_token
            * `update_db_token_name` - update_db_token_name
            * `update_db_token_permissions` - update_db_token_permissions
            * `rotate_db_token_key` - rotate_db_token_key
            * `delete_db_token_key` - delete_db_token_key
            * `create_webhook` - create_webhook
            * `delete_webhook` - delete_webhook
            * `update_webhook` - update_webhook
            * `export_table` - export_table
            * `import_database_from_airtable` - import_database_from_airtable
            * `create_table` - create_table
            * `delete_table` - delete_table
            * `order_tables` - order_tables
            * `update_table` - update_table
            * `duplicate_table` - duplicate_table
            * `create_row` - create_row
            * `create_rows` - create_rows
            * `import_rows` - import_rows
            * `delete_row` - delete_row
            * `delete_rows` - delete_rows
            * `move_row` - move_row
            * `update_row` - update_row
            * `update_rows` - update_rows
            * `create_view` - create_view
            * `duplicate_view` - duplicate_view
            * `delete_view` - delete_view
            * `order_views` - order_views
            * `update_view` - update_view
            * `create_view_filter` - create_view_filter
            * `update_view_filter` - update_view_filter
            * `delete_view_filter` - delete_view_filter
            * `create_view_sort` - create_view_sort
            * `update_view_sort` - update_view_sort
            * `delete_view_sort` - delete_view_sort
            * `create_view_group` - create_view_group
            * `update_view_group` - update_view_group
            * `delete_view_group` - delete_view_group
            * `submit_form` - submit_form
            * `rotate_view_slug` - rotate_view_slug
            * `update_view_field_options` - update_view_field_options
            * `create_decoration` - create_decoration
            * `update_decoration` - update_decoration
            * `delete_decoration` - delete_decoration
            * `create_view_filter_group` - create_view_filter_group
            * `update_view_filter_group` - update_view_filter_group
            * `delete_view_filter_group` - delete_view_filter_group
            * `create_data_sync_table` - create_data_sync_table
            * `update_data_sync_table` - update_data_sync_table
            * `sync_data_sync_table` - sync_data_sync_table
            * `create_field` - create_field
            * `delete_field` - delete_field
            * `update_field` - update_field
            * `duplicate_field` - duplicate_field
            * `change_primary_field` - change_primary_field
            * `create_widget` - create_widget
            * `update_widget` - update_widget
            * `delete_widget` - delete_widget
            * `update_dashboard_data_source` - update_dashboard_data_source
            * `generate_formula_with_ai` - generate_formula_with_ai
            * `create_row_comment` - create_row_comment
            * `delete_row_comment` - delete_row_comment
            * `update_row_comment` - update_row_comment
            * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug
            * `create_team` - create_team
            * `update_team` - update_team
            * `delete_team` - delete_team
            * `create_team_subject` - create_team_subject
            * `delete_team_subject` - delete_team_subject
            * `batch_assign_role` - batch_assign_role
            * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval
        filter_from_timestamp:
          type: string
          format: date-time
          description: 'Optional: The start date to filter the audit log by.'
        filter_to_timestamp:
          type: string
          format: date-time
          description: 'Optional: The end date to filter the audit log by.'
        exclude_columns:
          type: string
          description: 'Optional: A comma separated list of column names to exclude
            from the export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.'
        created_on:
          type: string
          format: date-time
          readOnly: true
          description: The date and time when the export job was created.
        exported_file_name:
          type: string
          readOnly: true
          description: The name of the file that was created by the export job.
        url:
          type: string
          format: uri
          readOnly: true
          description: The URL to download the exported file.
      required:
      - created_on
      - exported_file_name
      - id
      - progress_percentage
      - state
      - type
      - url
    AuditLogUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
      required:
      - id
      - value
    AuditLogWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
      required:
      - id
      - value
    AuthFormElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonInputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        user_source_id:
          type: integer
          nullable: true
          description: Display the auth form for the selected user source
        login_button_label:
          type: string
          default: ''
          description: The label of the login button
      required:
      - order
      - type
    AuthFormElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonInputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        user_source_id:
          type: integer
          nullable: true
          description: Display the auth form for the selected user source
        login_button_label:
          type: string
          default: ''
          description: The label of the login button
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    AuthFormElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonInputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        user_source_id:
          type: integer
          nullable: true
          description: Display the auth form for the selected user source
        login_button_label:
          type: string
          default: ''
          description: The label of the login button
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    AuthFormElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonInputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        user_source_id:
          type: integer
          nullable: true
          description: Display the auth form for the selected user source
        login_button_label:
          type: string
          default: ''
          description: The label of the login button
    Authentication_ProviderAuthProvider:
      oneOf:
      - "$ref": "#/components/schemas/PasswordAuthProviderModelAuthProvider"
      - "$ref": "#/components/schemas/SamlAuthProviderModelAuthProvider"
      - "$ref": "#/components/schemas/GoogleAuthProviderModelAuthProvider"
      - "$ref": "#/components/schemas/FacebookAuthProviderModelAuthProvider"
      - "$ref": "#/components/schemas/GitHubAuthProviderModelAuthProvider"
      - "$ref": "#/components/schemas/GitLabAuthProviderModelAuthProvider"
      - "$ref": "#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider"
      discriminator:
        propertyName: type
        mapping:
          password: "#/components/schemas/PasswordAuthProviderModelAuthProvider"
          saml: "#/components/schemas/SamlAuthProviderModelAuthProvider"
          google: "#/components/schemas/GoogleAuthProviderModelAuthProvider"
          facebook: "#/components/schemas/FacebookAuthProviderModelAuthProvider"
          github: "#/components/schemas/GitHubAuthProviderModelAuthProvider"
          gitlab: "#/components/schemas/GitLabAuthProviderModelAuthProvider"
          openid_connect: "#/components/schemas/OpenIdConnectAuthProviderModelAuthProvider"
    AutonumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        view_id:
          type: integer
          nullable: true
          description: The id of the view to use for the initial ordering.
      required:
      - name
      - type
    AutonumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    AutonumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    AutonumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        view_id:
          type: integer
          nullable: true
          description: The id of the view to use for the initial ordering.
    BaseExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters,
            sorts and other view specific settings.'
        exporter_type:
          allOf:
          - "$ref": "#/components/schemas/ExporterTypeEnum"
          description: |-
            The file type to export to.

            * `csv` - csv
            * `json` - json
            * `xml` - xml
            * `excel` - excel
            * `file` - file
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        filters:
          allOf:
          - "$ref": "#/components/schemas/PublicViewFilters"
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply
            to this view. The filter tree is a nested structure containing the filters
            that need to be applied. \n\nAn example of a valid filter tree is the
            following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\":
            \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of
            the field to filter on, or the name of the field if `user_field_names`
            is true.\n\nThe following filters are available: equal, not_equal, filename_contains,
            files_lower_than, has_file_type, contains, contains_not, contains_word,
            doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,
            lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,
            date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,
            date_not_equal, date_equals_today, date_before_today, date_after_today,
            date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month,
            date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,
            date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,
            single_select_equal, single_select_not_equal, single_select_is_any_of,
            single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
            link_row_not_contains, boolean, empty, not_empty, multiple_select_has,
            multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,
            user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains,
            has_not_value_contains, has_value_contains_word, has_not_value_contains_word,
            has_value_length_is_lower_than, has_all_values_equal, has_empty_value,
            has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,
            has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,
            has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal,
            has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,
            has_not_date_before, has_date_on_or_before, has_not_date_on_or_before,
            has_date_on_or_after, has_not_date_on_or_after, has_date_after, has_not_date_after,
            has_date_within, has_not_date_within.\n\n**Please note that if this parameter
            is provided, all other `filter__{field}__{filter}` will be ignored, as
            well as the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order, but
            by prepending the field with a '-' it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the
            desired order.
      required:
      - exporter_type
    BaserowImpersonateAuthToken:
      type: object
      description: Serializer used for impersonation.
      properties:
        user:
          type: integer
      required:
      - user
    BatchCreateRoleAssignment:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/CreateRoleAssignment"
      required:
      - items
    BatchDeleteRows:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
          maxItems: 200
          minItems: 1
      required:
      - items
    BlankEnum:
      enum:
      - ''
    BodyFontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    BodyTextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    BooleanFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    BooleanFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    BooleanFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    BooleanFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    BuilderApplication:
      type: object
      description: "The builder serializer.\n\n\U0001F449 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        workspace:
          allOf:
          - "$ref": "#/components/schemas/Workspace"
          description: The workspace that the application belongs to.
        created_on:
          type: string
          format: date-time
          readOnly: true
        pages:
          type: array
          items:
            "$ref": "#/components/schemas/Page"
          readOnly: true
          description: This field is specific to the `builder` application and contains
            an array of pages that are in the builder.
        theme:
          allOf:
          - "$ref": "#/components/schemas/ColorTypographyButtonImagePageInputTableLinklink_active_text_decoration"
          readOnly: true
          description: This field is specific to the `builder` application and contains
            the theme settings.
        favicon_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The favicon image file
        login_page_id:
          type: integer
          nullable: true
      required:
      - created_on
      - id
      - name
      - order
      - pages
      - theme
      - type
      - workspace
    BuilderBaseApplicationCreatePolymorphic:
      type: object
      description: "The builder serializer.\n\n\U0001F449 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer\nwhen
        you update this one."
      properties:
        name:
          type: string
          maxLength: 160
        type:
          "$ref": "#/components/schemas/TypeAc1Enum"
        init_with_data:
          type: boolean
          default: false
        favicon_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The favicon image file
        login_page_id:
          type: integer
          nullable: true
      required:
      - name
      - type
    BuilderBaseApplicationUpdatePolymorphic:
      type: object
      description: "The builder serializer.\n\n\U0001F449 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicBuilderSerializer\nwhen
        you update this one."
      properties:
        name:
          type: string
          maxLength: 160
        favicon_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The favicon image file
        login_page_id:
          type: integer
          nullable: true
      required:
      - name
    BuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
      required:
      - element_id
      - event
      - id
      - order
      - type
    Builder_Workflow_Action_TypeBuilderWorkflowAction:
      oneOf:
      - "$ref": "#/components/schemas/NotificationWorkflowActionBuilderWorkflowAction"
      - "$ref": "#/components/schemas/OpenPageWorkflowActionBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowWorkflowActionBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LogoutWorkflowActionBuilderWorkflowAction"
      - "$ref": "#/components/schemas/RefreshDataSourceWorkflowActionBuilderWorkflowAction"
      discriminator:
        propertyName: type
        mapping:
          notification: "#/components/schemas/NotificationWorkflowActionBuilderWorkflowAction"
          open_page: "#/components/schemas/OpenPageWorkflowActionBuilderWorkflowAction"
          create_row: "#/components/schemas/LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction"
          update_row: "#/components/schemas/LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction"
          delete_row: "#/components/schemas/LocalBaserowDeleteRowWorkflowActionBuilderWorkflowAction"
          logout: "#/components/schemas/LogoutWorkflowActionBuilderWorkflowAction"
          refresh_data_source: "#/components/schemas/RefreshDataSourceWorkflowActionBuilderWorkflowAction"
    Builder_Workflow_Action_TypeCreateBuilderWorkflowAction:
      oneOf:
      - "$ref": "#/components/schemas/NotificationWorkflowActionCreateBuilderWorkflowAction"
      - "$ref": "#/components/schemas/OpenPageWorkflowActionCreateBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowWorkflowActionCreateBuilderWorkflowAction"
      - "$ref": "#/components/schemas/LogoutWorkflowActionCreateBuilderWorkflowAction"
      - "$ref": "#/components/schemas/RefreshDataSourceWorkflowActionCreateBuilderWorkflowAction"
      discriminator:
        propertyName: type
        mapping:
          notification: "#/components/schemas/NotificationWorkflowActionCreateBuilderWorkflowAction"
          open_page: "#/components/schemas/OpenPageWorkflowActionCreateBuilderWorkflowAction"
          create_row: "#/components/schemas/LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction"
          update_row: "#/components/schemas/LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction"
          delete_row: "#/components/schemas/LocalBaserowDeleteRowWorkflowActionCreateBuilderWorkflowAction"
          logout: "#/components/schemas/LogoutWorkflowActionCreateBuilderWorkflowAction"
          refresh_data_source: "#/components/schemas/RefreshDataSourceWorkflowActionCreateBuilderWorkflowAction"
    ButtonAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    ButtonAndLinkConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        menu:
          "$ref": "#/components/schemas/link_active_text_decoration"
    ButtonButtonConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        button:
          "$ref": "#/components/schemas/button_active_border_color"
        header_button:
          "$ref": "#/components/schemas/button_active_border_color"
    ButtonConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        button:
          "$ref": "#/components/schemas/button_active_border_color"
    ButtonElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        value:
          type: string
          default: ''
          description: The caption of the button.
      required:
      - order
      - type
    ButtonElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The caption of the button.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ButtonElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The caption of the button.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ButtonElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The caption of the button.
    ButtonFontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    ButtonInputConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        login_button:
          "$ref": "#/components/schemas/button_active_border_color"
        input:
          "$ref": "#/components/schemas/input_horizontal_padding"
    ButtonLinkConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        button:
          "$ref": "#/components/schemas/button_active_border_color"
        link:
          "$ref": "#/components/schemas/link_active_text_decoration"
    ButtonTableButtonConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        button:
          "$ref": "#/components/schemas/button_active_border_color"
        table:
          "$ref": "#/components/schemas/table_horizontal_separator_size"
        header_button:
          "$ref": "#/components/schemas/button_active_border_color"
    ButtonTextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    ButtonWidthEnum:
      enum:
      - auto
      - full
      type: string
      description: |-
        * `auto` - Auto
        * `full` - Full
    CalendarViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/TypeBc4Enum"
        ownership_type:
          allOf:
          - "$ref": "#/components/schemas/OwnershipTypeEnum"
          default: collaborative
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        date_field:
          type: integer
          nullable: true
        ical_feed_url:
          type: string
          readOnly: true
          description: 'Read-only field with ICal feed endpoint. Note: this url will
            not be active if ical_public value is set to False.'
        ical_public:
          type: boolean
          nullable: true
          description: A flag to show if ical feed is exposed. Set this field to True
            when modifying this resource to enable ICal feed url.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - ical_feed_url
      - name
      - slug
      - type
    CalendarViewExampleResponse:
      type: object
      properties:
        rows:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/CalendarViewExampleResponseStack"
          description: Every date bucket (e.g. '2023-01-01') related to the view's
            date field can have its own entry like this.
        field_options:
          type: array
          items:
            "$ref": "#/components/schemas/CalendarViewFieldOptions"
        row_metadata:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/RowMetadata"
          description: An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata and
            will not be present as a key if so.
      required:
      - field_options
      - rows
    CalendarViewExampleResponseStack:
      type: object
      properties:
        count:
          type: integer
          description: The total count of rows that are included in this group.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
          description: All the rows that belong in this group and match provided `limit`
            and `offset`.
      required:
      - count
      - results
    CalendarViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the view. Lower value is first.
    CalendarViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        date_field:
          type: integer
          nullable: true
        ical_feed_url:
          type: string
          readOnly: true
          description: 'Read-only field with ICal feed endpoint. Note: this url will
            not be active if ical_public value is set to False.'
        ical_public:
          type: boolean
          nullable: true
          description: A flag to show if ical feed is exposed. Set this field to True
            when modifying this resource to enable ICal feed url.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - ical_feed_url
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    ChangePasswordBodyValidation:
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - old_password
    ChangePrimaryFieldParams:
      type: object
      properties:
        new_primary_field_id:
          type: integer
          description: The ID of the new primary field.
      required:
      - new_primary_field_id
    ChartWidgetCreateWidget:
      type: object
      description: This serializer allow to set the type of the new widget.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        type:
          allOf:
          - "$ref": "#/components/schemas/Type7baEnum"
          description: |-
            The type of the widget.

            * `summary` - summary
            * `chart` - chart
      required:
      - title
      - type
    ChartWidgetUpdateWidget:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
    ChartWidgetWidget:
      type: object
      description: Basic widget serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        dashboard_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the widget.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        data_source_id:
          type: integer
          description: References a data source field for the widget.
      required:
      - dashboard_id
      - description
      - id
      - order
      - title
      - type
    CheckboxElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: The input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
      required:
      - order
      - type
    CheckboxElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: The input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    CheckboxElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: The input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    CheckboxElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: The input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
    ChoiceElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        label:
          type: string
          default: ''
          description: The text label for this choice
        default_value:
          type: string
          default: ''
          description: This choice's input default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        options:
          type: array
          items:
            "$ref": "#/components/schemas/ChoiceOption"
        multiple:
          type: boolean
          default: false
          description: Whether this choice allows users to choose multiple values.
        show_as_dropdown:
          type: boolean
          default: true
          description: Whether to show the choices as a dropdown.
        option_type:
          allOf:
          - "$ref": "#/components/schemas/OptionTypeEnum"
          default: manual
        formula_value:
          type: string
          default: ''
          description: The value of the option if it is a formula
        formula_name:
          type: string
          default: ''
          description: The display name of the option if it is a formula
      required:
      - order
      - type
    ChoiceElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this choice
        default_value:
          type: string
          default: ''
          description: This choice's input default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        options:
          type: array
          items:
            "$ref": "#/components/schemas/ChoiceOption"
        multiple:
          type: boolean
          default: false
          description: Whether this choice allows users to choose multiple values.
        show_as_dropdown:
          type: boolean
          default: true
          description: Whether to show the choices as a dropdown.
        option_type:
          allOf:
          - "$ref": "#/components/schemas/OptionTypeEnum"
          default: manual
        formula_value:
          type: string
          default: ''
          description: The value of the option if it is a formula
        formula_name:
          type: string
          default: ''
          description: The display name of the option if it is a formula
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ChoiceElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this choice
        default_value:
          type: string
          default: ''
          description: This choice's input default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        options:
          type: array
          items:
            "$ref": "#/components/schemas/ChoiceOption"
        multiple:
          type: boolean
          default: false
          description: Whether this choice allows users to choose multiple values.
        show_as_dropdown:
          type: boolean
          default: true
          description: Whether to show the choices as a dropdown.
        option_type:
          allOf:
          - "$ref": "#/components/schemas/OptionTypeEnum"
          default: manual
        formula_value:
          type: string
          default: ''
          description: The value of the option if it is a formula
        formula_name:
          type: string
          default: ''
          description: The display name of the option if it is a formula
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ChoiceElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this choice
        default_value:
          type: string
          default: ''
          description: This choice's input default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        options:
          type: array
          items:
            "$ref": "#/components/schemas/ChoiceOption"
        multiple:
          type: boolean
          default: false
          description: Whether this choice allows users to choose multiple values.
        show_as_dropdown:
          type: boolean
          default: true
          description: Whether to show the choices as a dropdown.
        option_type:
          allOf:
          - "$ref": "#/components/schemas/OptionTypeEnum"
          default: manual
        formula_value:
          type: string
          default: ''
          description: The value of the option if it is a formula
        formula_name:
          type: string
          default: ''
          description: The display name of the option if it is a formula
    ChoiceOption:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          nullable: true
          description: The value of the option. An empty string is a valid value.
            When the value field is null, the frontend will auto-populate the value
            using the name field.
        name:
          type: string
          description: The display name of the option
      required:
      - id
    Collaborator:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          readOnly: true
      required:
      - id
      - name
    CollectionElementPropertyOptions:
      type: object
      description: |-
        Mixin to a DRF serializer class to raise an exception if data with unknown fields
        is provided to the serializer.
      properties:
        schema_property:
          type: string
          description: The name of the property in the schema this option belongs
            to.
          maxLength: 225
        filterable:
          type: boolean
          description: Whether this element is filterable or not by visitors.
        sortable:
          type: boolean
          description: Whether this element is sortable or not by visitors.
        searchable:
          type: boolean
          description: Whether this element is searchable or not by visitors.
      required:
      - schema_property
    CollectionField:
      type: object
      description: |-
        This serializer transform the flat properties object from/to a config dict property.
        This allows us to see the field on the frontend side as a simple polymorphic
        object.
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          format: uuid
        name:
          type: string
          description: The name of the field.
          maxLength: 225
        type:
          type: string
          description: The type of the field.
          maxLength: 225
        styles:
          nullable: true
          description: The theme overrides for this field
      required:
      - id
      - name
      - type
    ColorTypographyButtonImagePageInputTableLinklink_active_text_decoration:
      type: object
      properties:
        primary_color:
          type: string
          maxLength: 255
        secondary_color:
          type: string
          maxLength: 255
        border_color:
          type: string
          maxLength: 255
        main_success_color:
          type: string
          maxLength: 255
        main_warning_color:
          type: string
          maxLength: 255
        main_error_color:
          type: string
          maxLength: 255
        custom_colors: {}
        heading_1_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_2_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_3_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_4_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_5_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_6_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        body_font_family:
          type: string
          maxLength: 250
        body_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        body_font_weight:
          "$ref": "#/components/schemas/BodyFontWeightEnum"
        body_text_color:
          type: string
          maxLength: 255
        body_text_alignment:
          "$ref": "#/components/schemas/BodyTextAlignmentEnum"
        heading_1_font_family:
          type: string
          maxLength: 250
        heading_1_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_1_font_weight:
          "$ref": "#/components/schemas/Heading1FontWeightEnum"
        heading_1_text_color:
          type: string
          maxLength: 255
        heading_1_text_alignment:
          "$ref": "#/components/schemas/Heading1TextAlignmentEnum"
        heading_2_font_family:
          type: string
          maxLength: 250
        heading_2_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_2_font_weight:
          "$ref": "#/components/schemas/Heading2FontWeightEnum"
        heading_2_text_color:
          type: string
          maxLength: 255
        heading_2_text_alignment:
          "$ref": "#/components/schemas/Heading2TextAlignmentEnum"
        heading_3_font_family:
          type: string
          maxLength: 250
        heading_3_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_3_font_weight:
          "$ref": "#/components/schemas/Heading3FontWeightEnum"
        heading_3_text_color:
          type: string
          maxLength: 255
        heading_3_text_alignment:
          "$ref": "#/components/schemas/Heading3TextAlignmentEnum"
        heading_4_font_family:
          type: string
          maxLength: 250
        heading_4_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_4_font_weight:
          "$ref": "#/components/schemas/Heading4FontWeightEnum"
        heading_4_text_color:
          type: string
          maxLength: 255
        heading_4_text_alignment:
          "$ref": "#/components/schemas/Heading4TextAlignmentEnum"
        heading_5_font_family:
          type: string
          maxLength: 250
        heading_5_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_5_font_weight:
          "$ref": "#/components/schemas/Heading5FontWeightEnum"
        heading_5_text_color:
          type: string
          maxLength: 255
        heading_5_text_alignment:
          "$ref": "#/components/schemas/Heading5TextAlignmentEnum"
        heading_6_font_family:
          type: string
          maxLength: 250
        heading_6_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_6_font_weight:
          "$ref": "#/components/schemas/Heading6FontWeightEnum"
        heading_6_text_color:
          type: string
          maxLength: 255
        heading_6_text_alignment:
          "$ref": "#/components/schemas/Heading6TextAlignmentEnum"
        button_font_family:
          type: string
          maxLength: 250
        button_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        button_font_weight:
          "$ref": "#/components/schemas/ButtonFontWeightEnum"
        button_alignment:
          "$ref": "#/components/schemas/ButtonAlignmentEnum"
        button_text_alignment:
          "$ref": "#/components/schemas/ButtonTextAlignmentEnum"
        button_width:
          "$ref": "#/components/schemas/ButtonWidthEnum"
        button_background_color:
          type: string
          description: The background color of buttons
          maxLength: 255
        button_text_color:
          type: string
          description: The text color of buttons
          maxLength: 255
        button_border_color:
          type: string
          description: The border color of buttons
          maxLength: 255
        button_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button border size
        button_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button border radius
        button_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button vertical padding
        button_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button horizontal padding
        button_hover_background_color:
          type: string
          description: The background color of buttons when hovered
          maxLength: 255
        button_hover_text_color:
          type: string
          description: The text color of buttons when hovered
          maxLength: 255
        button_hover_border_color:
          type: string
          description: The border color of buttons when hovered
          maxLength: 255
        button_active_background_color:
          type: string
          description: The background color of buttons when active
          maxLength: 255
        button_active_text_color:
          type: string
          description: The text color of buttons when active
          maxLength: 255
        button_active_border_color:
          type: string
          description: The border color of buttons when active
          maxLength: 255
        image_max_height:
          type: integer
          description: The image max height
        image_alignment:
          "$ref": "#/components/schemas/ImageAlignmentEnum"
        image_max_width:
          type: integer
          maximum: 100
          minimum: 0
          description: The max-width for this image element.
        image_border_radius:
          type: integer
          maximum: 100
          minimum: 0
          description: The border radius for this image element.
        image_constraint:
          allOf:
          - "$ref": "#/components/schemas/ImageConstraintEnum"
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
        page_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The image file
        page_background_color:
          type: string
          description: The background color of the page
          maxLength: 255
        page_background_mode:
          allOf:
          - "$ref": "#/components/schemas/PageBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        label_font_family:
          type: string
          description: The font family of the label
          maxLength: 250
        label_text_color:
          type: string
          description: The text color of the label
          maxLength: 255
        label_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The font size of the label
        label_font_weight:
          "$ref": "#/components/schemas/LabelFontWeightEnum"
        input_font_family:
          type: string
          description: The font family of the input
          maxLength: 250
        input_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        input_font_weight:
          "$ref": "#/components/schemas/InputFontWeightEnum"
        input_text_color:
          type: string
          description: The text color of the input
          maxLength: 255
        input_background_color:
          type: string
          description: The background color of the input
          maxLength: 255
        input_border_color:
          type: string
          description: The color of the input border
          maxLength: 255
        input_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input border size
        input_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input border radius
        input_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input vertical padding
        input_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input horizontal padding
        table_border_color:
          type: string
          description: The color of the table border
          maxLength: 255
        table_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table border size
        table_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table border radius
        table_header_background_color:
          type: string
          description: The background color of the table header cells
          maxLength: 255
        table_header_text_color:
          type: string
          description: The text color of the table header cells
          maxLength: 255
        table_header_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The font size of the header cells
        table_header_font_weight:
          "$ref": "#/components/schemas/TableHeaderFontWeightEnum"
        table_header_font_family:
          type: string
          description: The font family of the table header cells
          maxLength: 250
        table_header_text_alignment:
          "$ref": "#/components/schemas/TableHeaderTextAlignmentEnum"
        table_cell_background_color:
          type: string
          description: The background color of the table cells
          maxLength: 255
        table_cell_alternate_background_color:
          type: string
          description: The alternate background color of the table cells
          maxLength: 255
        table_cell_alignment:
          "$ref": "#/components/schemas/TableCellAlignmentEnum"
        table_cell_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table cell vertical padding
        table_cell_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table cell horizontal padding
        table_vertical_separator_color:
          type: string
          description: The color of the table vertical separator
          maxLength: 255
        table_vertical_separator_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table vertical separator size
        table_horizontal_separator_color:
          type: string
          description: The color of the table horizontal separator
          maxLength: 255
        table_horizontal_separator_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table horizontal separator size
        link_default_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Default text decoration: [underline, stroke, uppercase, italic]'
        link_hover_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Hover text decoration: [underline, stroke, uppercase, italic]'
        link_active_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Active text decoration: [underline, stroke, uppercase, italic]'
        link_font_family:
          type: string
          maxLength: 250
        link_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        link_font_weight:
          "$ref": "#/components/schemas/LinkFontWeightEnum"
        link_text_alignment:
          "$ref": "#/components/schemas/LinkTextAlignmentEnum"
        link_text_color:
          type: string
          description: The text color of links
          maxLength: 255
        link_hover_text_color:
          type: string
          description: The hover color of links when hovered
          maxLength: 255
        link_active_text_color:
          type: string
          description: The hover color of links when active
          maxLength: 255
    ColumnElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        column_amount:
          type: integer
          maximum: 6
          minimum: 1
          description: The amount of columns inside this column element.
        column_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of space between the columns.
        alignment:
          "$ref": "#/components/schemas/AlignmentCeaEnum"
      required:
      - order
      - type
    ColumnElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        column_amount:
          type: integer
          maximum: 6
          minimum: 1
          description: The amount of columns inside this column element.
        column_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of space between the columns.
        alignment:
          "$ref": "#/components/schemas/AlignmentCeaEnum"
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ColumnElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        column_amount:
          type: integer
          maximum: 6
          minimum: 1
          description: The amount of columns inside this column element.
        column_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of space between the columns.
        alignment:
          "$ref": "#/components/schemas/AlignmentCeaEnum"
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ColumnElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        column_amount:
          type: integer
          maximum: 6
          minimum: 1
          description: The amount of columns inside this column element.
        column_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of space between the columns.
        alignment:
          "$ref": "#/components/schemas/AlignmentCeaEnum"
    CommonSAMLResponse:
      type: object
      properties:
        SAMLResponse:
          type: string
          description: The encoded SAML response from the IdP.
        RelayState:
          type: string
          description: The frontend URL where redirect the authenticated user.
      required:
      - RelayState
      - SAMLResponse
    ConditionTypeEnum:
      enum:
      - AND
      - OR
      type: string
      description: |-
        * `AND` - And
        * `OR` - Or
    ConditionalColorValueProviderConfColor:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this condition.
        color:
          type: string
          description: The color the decorator should take if the defined conditions
            apply.
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ConditionalColorValueProviderConfColorFilter"
          description: A list of conditions that the row must meet to get the selected
            color. This list of conditions can be empty, in that case, this color
            will always match the row values.
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ConditionalColorValueProviderConfColorFilterGroup"
          description: 'A list of filter groups that the row must meet to get the
            selected color. '
        operator:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          default: AND
          description: |-
            The boolean operator used to group all conditions.

            * `AND` - And
            * `OR` - Or
      required:
      - color
      - filters
      - id
    ConditionalColorValueProviderConfColorFilter:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this condition.
        field:
          type: integer
          nullable: true
          description: The field of which the value must be compared to the filter
            value.
        type:
          nullable: true
          description: |-
            Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).

            * `equal` - equal
            * `not_equal` - not_equal
            * `filename_contains` - filename_contains
            * `files_lower_than` - files_lower_than
            * `has_file_type` - has_file_type
            * `contains` - contains
            * `contains_not` - contains_not
            * `contains_word` - contains_word
            * `doesnt_contain_word` - doesnt_contain_word
            * `length_is_lower_than` - length_is_lower_than
            * `higher_than` - higher_than
            * `higher_than_or_equal` - higher_than_or_equal
            * `lower_than` - lower_than
            * `lower_than_or_equal` - lower_than_or_equal
            * `is_even_and_whole` - is_even_and_whole
            * `date_equal` - date_equal
            * `date_before` - date_before
            * `date_before_or_equal` - date_before_or_equal
            * `date_after_days_ago` - date_after_days_ago
            * `date_after` - date_after
            * `date_after_or_equal` - date_after_or_equal
            * `date_not_equal` - date_not_equal
            * `date_equals_today` - date_equals_today
            * `date_before_today` - date_before_today
            * `date_after_today` - date_after_today
            * `date_within_days` - date_within_days
            * `date_within_weeks` - date_within_weeks
            * `date_within_months` - date_within_months
            * `date_equals_days_ago` - date_equals_days_ago
            * `date_equals_months_ago` - date_equals_months_ago
            * `date_equals_years_ago` - date_equals_years_ago
            * `date_equals_week` - date_equals_week
            * `date_equals_month` - date_equals_month
            * `date_equals_day_of_month` - date_equals_day_of_month
            * `date_equals_year` - date_equals_year
            * `date_is` - date_is
            * `date_is_not` - date_is_not
            * `date_is_before` - date_is_before
            * `date_is_on_or_before` - date_is_on_or_before
            * `date_is_after` - date_is_after
            * `date_is_on_or_after` - date_is_on_or_after
            * `date_is_within` - date_is_within
            * `single_select_equal` - single_select_equal
            * `single_select_not_equal` - single_select_not_equal
            * `single_select_is_any_of` - single_select_is_any_of
            * `single_select_is_none_of` - single_select_is_none_of
            * `link_row_has` - link_row_has
            * `link_row_has_not` - link_row_has_not
            * `link_row_contains` - link_row_contains
            * `link_row_not_contains` - link_row_not_contains
            * `boolean` - boolean
            * `empty` - empty
            * `not_empty` - not_empty
            * `multiple_select_has` - multiple_select_has
            * `multiple_select_has_not` - multiple_select_has_not
            * `multiple_collaborators_has` - multiple_collaborators_has
            * `multiple_collaborators_has_not` - multiple_collaborators_has_not
            * `user_is` - user_is
            * `user_is_not` - user_is_not
            * `has_value_equal` - has_value_equal
            * `has_not_value_equal` - has_not_value_equal
            * `has_value_contains` - has_value_contains
            * `has_not_value_contains` - has_not_value_contains
            * `has_value_contains_word` - has_value_contains_word
            * `has_not_value_contains_word` - has_not_value_contains_word
            * `has_value_length_is_lower_than` - has_value_length_is_lower_than
            * `has_all_values_equal` - has_all_values_equal
            * `has_empty_value` - has_empty_value
            * `has_not_empty_value` - has_not_empty_value
            * `has_any_select_option_equal` - has_any_select_option_equal
            * `has_none_select_option_equal` - has_none_select_option_equal
            * `has_value_lower` - has_value_lower
            * `has_value_lower_or_equal` - has_value_lower_or_equal
            * `has_value_higher` - has_value_higher
            * `has_value_higher_or_equal` - has_value_higher_or_equal
            * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal
            * `has_not_value_higher` - has_not_value_higher
            * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal
            * `has_not_value_lower` - has_not_value_lower
            * `has_date_equal` - has_date_equal
            * `has_not_date_equal` - has_not_date_equal
            * `has_date_before` - has_date_before
            * `has_not_date_before` - has_not_date_before
            * `has_date_on_or_before` - has_date_on_or_before
            * `has_not_date_on_or_before` - has_not_date_on_or_before
            * `has_date_on_or_after` - has_date_on_or_after
            * `has_not_date_on_or_after` - has_not_date_on_or_after
            * `has_date_after` - has_date_after
            * `has_not_date_after` - has_not_date_after
            * `has_date_within` - has_date_within
            * `has_not_date_within` - has_not_date_within
          oneOf:
          - "$ref": "#/components/schemas/Type508Enum"
          - "$ref": "#/components/schemas/NullEnum"
        value:
          type: string
          default: ''
          description: The field of which the value must be compared to the filter
            value.
        group:
          type: string
          nullable: true
          description: The id of the filter group this filter belongs to. If this
            is null, the filter is not part of a filter group.
      required:
      - field
      - id
      - type
    ConditionalColorValueProviderConfColorFilterGroup:
      type: object
      properties:
        id:
          type: string
          description: A unique identifier for this condition.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          default: AND
          description: |-
            The boolean operator used to group all conditions.

            * `AND` - And
            * `OR` - Or
        parent_group:
          type: string
          nullable: true
          description: The id of the parent filter group.
      required:
      - id
    ConditionalColorValueProviderConfColors:
      type: object
      properties:
        colors:
          type: array
          items:
            "$ref": "#/components/schemas/ConditionalColorValueProviderConfColor"
          description: A list of color items. For each row, the value provider try
            to match the defined colors one by one in the given order. The first matching
            color is returned to the decorator.
      required:
      - colors
    CountFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - name
      - nullable
      - type
    CountFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - table_id
      - type
    CountFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - table_id
      - type
    CountFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to count values for.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - nullable
    CreatePage:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            "$ref": "#/components/schemas/PathParam"
        query_params:
          type: array
          items:
            "$ref": "#/components/schemas/PathParam"
      required:
      - name
      - path
    CreateRoleAssignment:
      type: object
      description: The create role assignment serializer.
      properties:
        subject_id:
          type: integer
          minimum: 1
          description: The subject ID. A subject is an actor that can do operations.
        subject_type:
          allOf:
          - "$ref": "#/components/schemas/SubjectType398Enum"
          description: |-
            The subject type.

            * `auth.User` - auth.User
            * `anonymous` - anonymous
            * `user_source.user` - user_source.user
            * `core.Token` - core.Token
            * `baserow_enterprise.Team` - baserow_enterprise.Team
        role:
          type: string
          nullable: true
          description: The uid of the role you want to assign to the user or team
            in the given workspace. You can omit this property if you want to remove
            the role.
        scope_id:
          type: integer
          minimum: 1
          description: The ID of the scope object. The scope object limit the role
            assignment to this scope and all its descendants.
        scope_type:
          allOf:
          - "$ref": "#/components/schemas/ScopeTypeEnum"
          description: |-
            The scope object type.

            * `core` - core
            * `application` - application
            * `workspace` - workspace
            * `workspace_invitation` - workspace_invitation
            * `snapshot` - snapshot
            * `workspace_user` - workspace_user
            * `integration` - integration
            * `user_source` - user_source
            * `database` - database
            * `database_table` - database_table
            * `database_field` - database_field
            * `database_view` - database_view
            * `database_view_decoration` - database_view_decoration
            * `database_view_sort` - database_view_sort
            * `database_view_group` - database_view_group
            * `database_view_filter` - database_view_filter
            * `database_view_filter_group` - database_view_filter_group
            * `token` - token
            * `builder` - builder
            * `builder_page` - builder_page
            * `builder_element` - builder_element
            * `builder_domain` - builder_domain
            * `builder_data_source` - builder_data_source
            * `builder_workflow_action` - builder_workflow_action
            * `dashboard` - dashboard
            * `dashboard_data_source` - dashboard_data_source
            * `dashboard_widget` - dashboard_widget
            * `team` - team
            * `team_subject` - team_subject
            * `license` - license
      required:
      - role
      - scope_id
      - scope_type
      - subject_id
      - subject_type
    CreateSnapshotJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        snapshot:
          "$ref": "#/components/schemas/Snapshot"
      required:
      - snapshot
      - type
    CreateSnapshotJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        snapshot:
          "$ref": "#/components/schemas/Snapshot"
      required:
      - id
      - progress_percentage
      - snapshot
      - state
      - type
    CreateViewFilter:
      type: object
      properties:
        field:
          type: integer
          description: The field of which the value must be compared to the filter
            value.
        type:
          allOf:
          - "$ref": "#/components/schemas/Type508Enum"
          description: |-
            Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).

            * `equal` - equal
            * `not_equal` - not_equal
            * `filename_contains` - filename_contains
            * `files_lower_than` - files_lower_than
            * `has_file_type` - has_file_type
            * `contains` - contains
            * `contains_not` - contains_not
            * `contains_word` - contains_word
            * `doesnt_contain_word` - doesnt_contain_word
            * `length_is_lower_than` - length_is_lower_than
            * `higher_than` - higher_than
            * `higher_than_or_equal` - higher_than_or_equal
            * `lower_than` - lower_than
            * `lower_than_or_equal` - lower_than_or_equal
            * `is_even_and_whole` - is_even_and_whole
            * `date_equal` - date_equal
            * `date_before` - date_before
            * `date_before_or_equal` - date_before_or_equal
            * `date_after_days_ago` - date_after_days_ago
            * `date_after` - date_after
            * `date_after_or_equal` - date_after_or_equal
            * `date_not_equal` - date_not_equal
            * `date_equals_today` - date_equals_today
            * `date_before_today` - date_before_today
            * `date_after_today` - date_after_today
            * `date_within_days` - date_within_days
            * `date_within_weeks` - date_within_weeks
            * `date_within_months` - date_within_months
            * `date_equals_days_ago` - date_equals_days_ago
            * `date_equals_months_ago` - date_equals_months_ago
            * `date_equals_years_ago` - date_equals_years_ago
            * `date_equals_week` - date_equals_week
            * `date_equals_month` - date_equals_month
            * `date_equals_day_of_month` - date_equals_day_of_month
            * `date_equals_year` - date_equals_year
            * `date_is` - date_is
            * `date_is_not` - date_is_not
            * `date_is_before` - date_is_before
            * `date_is_on_or_before` - date_is_on_or_before
            * `date_is_after` - date_is_after
            * `date_is_on_or_after` - date_is_on_or_after
            * `date_is_within` - date_is_within
            * `single_select_equal` - single_select_equal
            * `single_select_not_equal` - single_select_not_equal
            * `single_select_is_any_of` - single_select_is_any_of
            * `single_select_is_none_of` - single_select_is_none_of
            * `link_row_has` - link_row_has
            * `link_row_has_not` - link_row_has_not
            * `link_row_contains` - link_row_contains
            * `link_row_not_contains` - link_row_not_contains
            * `boolean` - boolean
            * `empty` - empty
            * `not_empty` - not_empty
            * `multiple_select_has` - multiple_select_has
            * `multiple_select_has_not` - multiple_select_has_not
            * `multiple_collaborators_has` - multiple_collaborators_has
            * `multiple_collaborators_has_not` - multiple_collaborators_has_not
            * `user_is` - user_is
            * `user_is_not` - user_is_not
            * `has_value_equal` - has_value_equal
            * `has_not_value_equal` - has_not_value_equal
            * `has_value_contains` - has_value_contains
            * `has_not_value_contains` - has_not_value_contains
            * `has_value_contains_word` - has_value_contains_word
            * `has_not_value_contains_word` - has_not_value_contains_word
            * `has_value_length_is_lower_than` - has_value_length_is_lower_than
            * `has_all_values_equal` - has_all_values_equal
            * `has_empty_value` - has_empty_value
            * `has_not_empty_value` - has_not_empty_value
            * `has_any_select_option_equal` - has_any_select_option_equal
            * `has_none_select_option_equal` - has_none_select_option_equal
            * `has_value_lower` - has_value_lower
            * `has_value_lower_or_equal` - has_value_lower_or_equal
            * `has_value_higher` - has_value_higher
            * `has_value_higher_or_equal` - has_value_higher_or_equal
            * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal
            * `has_not_value_higher` - has_not_value_higher
            * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal
            * `has_not_value_lower` - has_not_value_lower
            * `has_date_equal` - has_date_equal
            * `has_not_date_equal` - has_not_date_equal
            * `has_date_before` - has_date_before
            * `has_not_date_before` - has_not_date_before
            * `has_date_on_or_before` - has_date_on_or_before
            * `has_not_date_on_or_before` - has_not_date_on_or_before
            * `has_date_on_or_after` - has_date_on_or_after
            * `has_not_date_on_or_after` - has_not_date_on_or_after
            * `has_date_after` - has_date_after
            * `has_not_date_after` - has_not_date_after
            * `has_date_within` - has_date_within
            * `has_not_date_within` - has_not_date_within
        value:
          type: string
          default: ''
          description: The filter value that must be compared to the field's value.
        group:
          type: integer
          nullable: true
          description: The id of the filter group the new filter will belong to. If
            this is null, the filter will not be part of a filter group, but directly
            part of the view.
      required:
      - field
      - type
    CreateViewFilterGroup:
      type: object
      properties:
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.

            * `AND` - And
            * `OR` - Or
        parent_group:
          type: integer
          nullable: true
    CreateViewGroupBy:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          default: ASC
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          default: 200
          description: The pixel width of the group by in the related view.
        type:
          type: string
          default: default
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
      required:
      - field
    CreateViewSort:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          default: ASC
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
      required:
      - field
    CreateWorkspaceInvitation:
      type: object
      properties:
        email:
          type: string
          format: email
          description: The email address of the user that the invitation is meant
            for. Only a user with that email address can accept it.
          maxLength: 254
        permissions:
          type: string
          description: The permissions that the user is going to get within the workspace
            after accepting the invitation.
          maxLength: 32
        message:
          type: string
          description: An optional message that the invitor can provide. This will
            be visible to the receiver of the invitation.
          maxLength: 250
        base_url:
          type: string
          format: uri
          description: The base URL where the user can publicly accept his invitation.The
            accept token is going to be appended to the base_url (base_url '/token').
      required:
      - base_url
      - email
    CreatedByFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    CreatedByFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    CreatedByFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    CreatedByFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    CreatedOnFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: "('A UTC offset in minutes to add to all the field datetimes
            values.',)"
      required:
      - type
    CreatedOnFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    CreatedOnFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - order
      - read_only
      - related_fields
      - table_id
      - type
    CreatedOnFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: "('A UTC offset in minutes to add to all the field datetimes
            values.',)"
    CsvColumnSeparatorEnum:
      enum:
      - ","
      - ";"
      - "|"
      - tab
      - record_separator
      - unit_separator
      type: string
      description: "* `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator`
        - \x1E\n* `unit_separator` - \x1F"
    CsvExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters,
            sorts and other view specific settings.'
        exporter_type:
          allOf:
          - "$ref": "#/components/schemas/ExporterTypeEnum"
          description: |-
            The file type to export to.

            * `csv` - csv
            * `json` - json
            * `xml` - xml
            * `excel` - excel
            * `file` - file
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        filters:
          allOf:
          - "$ref": "#/components/schemas/PublicViewFilters"
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply
            to this view. The filter tree is a nested structure containing the filters
            that need to be applied. \n\nAn example of a valid filter tree is the
            following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\":
            \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of
            the field to filter on, or the name of the field if `user_field_names`
            is true.\n\nThe following filters are available: equal, not_equal, filename_contains,
            files_lower_than, has_file_type, contains, contains_not, contains_word,
            doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,
            lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,
            date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,
            date_not_equal, date_equals_today, date_before_today, date_after_today,
            date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month,
            date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,
            date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,
            single_select_equal, single_select_not_equal, single_select_is_any_of,
            single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
            link_row_not_contains, boolean, empty, not_empty, multiple_select_has,
            multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,
            user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains,
            has_not_value_contains, has_value_contains_word, has_not_value_contains_word,
            has_value_length_is_lower_than, has_all_values_equal, has_empty_value,
            has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,
            has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,
            has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal,
            has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,
            has_not_date_before, has_date_on_or_before, has_not_date_on_or_before,
            has_date_on_or_after, has_not_date_on_or_after, has_date_after, has_not_date_after,
            has_date_within, has_not_date_within.\n\n**Please note that if this parameter
            is provided, all other `filter__{field}__{filter}` will be ignored, as
            well as the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order, but
            by prepending the field with a '-' it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the
            desired order.
        csv_column_separator:
          allOf:
          - "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
          default: ","
          description: "The value used to separate columns in the resulting csv file.\n\n*
            `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n*
            `unit_separator` - \x1F"
        csv_include_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv
            file.
      required:
      - exporter_type
    CustomDomainCreateDomain:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type509Enum"
          description: |-
            The type of the domain.

            * `custom` - custom
            * `sub_domain` - sub_domain
        domain_name:
          type: string
          maxLength: 255
      required:
      - domain_name
      - type
    CustomDomainDomain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the domain.
        domain_name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        builder_id:
          type: integer
          readOnly: true
        last_published:
          type: string
          format: date-time
          nullable: true
          description: Last publication date of this domain
      required:
      - builder_id
      - domain_name
      - id
      - order
      - type
    Dashboard:
      type: object
      properties:
        workspace_invitations:
          type: array
          items:
            "$ref": "#/components/schemas/UserWorkspaceInvitation"
      required:
      - workspace_invitations
    DashboardApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        workspace:
          allOf:
          - "$ref": "#/components/schemas/Workspace"
          description: The workspace that the application belongs to.
        created_on:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
      required:
      - created_on
      - id
      - name
      - order
      - type
      - workspace
    DashboardBaseApplicationCreatePolymorphic:
      type: object
      properties:
        name:
          type: string
          maxLength: 160
        type:
          "$ref": "#/components/schemas/TypeAc1Enum"
        init_with_data:
          type: boolean
          default: false
        description:
          type: string
      required:
      - name
      - type
    DashboardBaseApplicationUpdatePolymorphic:
      type: object
      properties:
        name:
          type: string
          maxLength: 160
        description:
          type: string
      required:
      - name
    Dashboard_WidgetCreateWidget:
      oneOf:
      - "$ref": "#/components/schemas/SummaryWidgetCreateWidget"
      - "$ref": "#/components/schemas/ChartWidgetCreateWidget"
      discriminator:
        propertyName: type
        mapping:
          summary: "#/components/schemas/SummaryWidgetCreateWidget"
          chart: "#/components/schemas/ChartWidgetCreateWidget"
    Dashboard_WidgetWidget:
      oneOf:
      - "$ref": "#/components/schemas/SummaryWidgetWidget"
      - "$ref": "#/components/schemas/ChartWidgetWidget"
      discriminator:
        propertyName: type
        mapping:
          summary: "#/components/schemas/SummaryWidgetWidget"
          chart: "#/components/schemas/ChartWidgetWidget"
    DataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
      required:
      - id
      - synced_properties
      - type
    DataSyncSyncedProperty:
      type: object
      properties:
        field_id:
          type: integer
          readOnly: true
        key:
          type: string
          description: The matching `key` of the `DataSyncProperty`.
          maxLength: 255
        unique_primary:
          type: boolean
          description: Indicates whether the data sync property is used for unique
            identification when syncing.
      required:
      - field_id
      - key
    Data_SyncCreateDataSync:
      oneOf:
      - "$ref": "#/components/schemas/ICalCalendarDataSyncCreateDataSync"
      - "$ref": "#/components/schemas/PostgreSQLDataSyncCreateDataSync"
      - "$ref": "#/components/schemas/LocalBaserowTableDataSyncCreateDataSync"
      - "$ref": "#/components/schemas/JiraIssuesDataSyncCreateDataSync"
      - "$ref": "#/components/schemas/GitHubIssuesDataSyncCreateDataSync"
      - "$ref": "#/components/schemas/GitLabIssuesDataSyncCreateDataSync"
      - "$ref": "#/components/schemas/HubSpotContactsDataSyncCreateDataSync"
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: "#/components/schemas/ICalCalendarDataSyncCreateDataSync"
          postgresql: "#/components/schemas/PostgreSQLDataSyncCreateDataSync"
          local_baserow_table: "#/components/schemas/LocalBaserowTableDataSyncCreateDataSync"
          jira_issues: "#/components/schemas/JiraIssuesDataSyncCreateDataSync"
          github_issues: "#/components/schemas/GitHubIssuesDataSyncCreateDataSync"
          gitlab_issues: "#/components/schemas/GitLabIssuesDataSyncCreateDataSync"
          hubspot_contacts: "#/components/schemas/HubSpotContactsDataSyncCreateDataSync"
    Data_SyncDataSync:
      oneOf:
      - "$ref": "#/components/schemas/ICalCalendarDataSyncDataSync"
      - "$ref": "#/components/schemas/PostgreSQLDataSyncDataSync"
      - "$ref": "#/components/schemas/LocalBaserowTableDataSyncDataSync"
      - "$ref": "#/components/schemas/JiraIssuesDataSyncDataSync"
      - "$ref": "#/components/schemas/GitHubIssuesDataSyncDataSync"
      - "$ref": "#/components/schemas/GitLabIssuesDataSyncDataSync"
      - "$ref": "#/components/schemas/HubSpotContactsDataSyncDataSync"
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: "#/components/schemas/ICalCalendarDataSyncDataSync"
          postgresql: "#/components/schemas/PostgreSQLDataSyncDataSync"
          local_baserow_table: "#/components/schemas/LocalBaserowTableDataSyncDataSync"
          jira_issues: "#/components/schemas/JiraIssuesDataSyncDataSync"
          github_issues: "#/components/schemas/GitHubIssuesDataSyncDataSync"
          gitlab_issues: "#/components/schemas/GitLabIssuesDataSyncDataSync"
          hubspot_contacts: "#/components/schemas/HubSpotContactsDataSyncDataSync"
    Data_SyncListDataSyncPropertiesRequest:
      oneOf:
      - "$ref": "#/components/schemas/ICalCalendarDataSyncListDataSyncPropertiesRequest"
      - "$ref": "#/components/schemas/PostgreSQLDataSyncListDataSyncPropertiesRequest"
      - "$ref": "#/components/schemas/LocalBaserowTableDataSyncListDataSyncPropertiesRequest"
      - "$ref": "#/components/schemas/JiraIssuesDataSyncListDataSyncPropertiesRequest"
      - "$ref": "#/components/schemas/GitHubIssuesDataSyncListDataSyncPropertiesRequest"
      - "$ref": "#/components/schemas/GitLabIssuesDataSyncListDataSyncPropertiesRequest"
      - "$ref": "#/components/schemas/HubSpotContactsDataSyncListDataSyncPropertiesRequest"
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: "#/components/schemas/ICalCalendarDataSyncListDataSyncPropertiesRequest"
          postgresql: "#/components/schemas/PostgreSQLDataSyncListDataSyncPropertiesRequest"
          local_baserow_table: "#/components/schemas/LocalBaserowTableDataSyncListDataSyncPropertiesRequest"
          jira_issues: "#/components/schemas/JiraIssuesDataSyncListDataSyncPropertiesRequest"
          github_issues: "#/components/schemas/GitHubIssuesDataSyncListDataSyncPropertiesRequest"
          gitlab_issues: "#/components/schemas/GitLabIssuesDataSyncListDataSyncPropertiesRequest"
          hubspot_contacts: "#/components/schemas/HubSpotContactsDataSyncListDataSyncPropertiesRequest"
    DatabaseApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        workspace:
          allOf:
          - "$ref": "#/components/schemas/Workspace"
          description: The workspace that the application belongs to.
        created_on:
          type: string
          format: date-time
          readOnly: true
        tables:
          type: array
          items:
            "$ref": "#/components/schemas/Table"
          readOnly: true
          description: This field is specific to the `database` application and contains
            an array of tables that are in the database.
      required:
      - created_on
      - id
      - name
      - order
      - tables
      - type
      - workspace
    DatabaseBaseApplicationCreatePolymorphic:
      type: object
      properties:
        name:
          type: string
          maxLength: 160
        type:
          "$ref": "#/components/schemas/TypeAc1Enum"
        init_with_data:
          type: boolean
          default: false
      required:
      - name
      - type
    DatabaseBaseApplicationUpdatePolymorphic:
      type: object
      properties:
        name:
          type: string
          maxLength: 160
      required:
      - name
    DateFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: "('A UTC offset in minutes to add to all the field datetimes
            values.',)"
      required:
      - type
    DateFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    DateFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - order
      - read_only
      - related_fields
      - table_id
      - type
    DateFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: "('A UTC offset in minutes to add to all the field datetimes
            values.',)"
    DateFormatEnum:
      enum:
      - EU
      - US
      - ISO
      type: string
      description: |-
        * `EU` - European (D/M/Y)
        * `US` - US (M/D/Y)
        * `ISO` - ISO (Y-M-D)
    DateTimeFormatEnum:
      enum:
      - '24'
      - '12'
      type: string
      description: |-
        * `24` - 24 hour
        * `12` - 12 hour
    DateTimePickerElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        label:
          type: string
          default: ''
          description: The text label for this date time picker
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        default_value:
          type: string
          default: ''
          description: This date time picker input's default value.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          default: EU
          description: |-
            EU (25/04/2024), US (04/25/2024) or ISO (2024-04-25)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        include_time:
          type: boolean
          default: false
          description: Whether to include time in the representation of the date
        time_format:
          allOf:
          - "$ref": "#/components/schemas/TimeFormatEnum"
          default: '24'
          description: |-
            24 (14:00) or 12 (02:30) PM

            * `24` - 24 hour
            * `12` - 12 hour
      required:
      - order
      - type
    DateTimePickerElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this date time picker
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        default_value:
          type: string
          default: ''
          description: This date time picker input's default value.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          default: EU
          description: |-
            EU (25/04/2024), US (04/25/2024) or ISO (2024-04-25)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        include_time:
          type: boolean
          default: false
          description: Whether to include time in the representation of the date
        time_format:
          allOf:
          - "$ref": "#/components/schemas/TimeFormatEnum"
          default: '24'
          description: |-
            24 (14:00) or 12 (02:30) PM

            * `24` - 24 hour
            * `12` - 12 hour
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    DateTimePickerElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this date time picker
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        default_value:
          type: string
          default: ''
          description: This date time picker input's default value.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          default: EU
          description: |-
            EU (25/04/2024), US (04/25/2024) or ISO (2024-04-25)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        include_time:
          type: boolean
          default: false
          description: Whether to include time in the representation of the date
        time_format:
          allOf:
          - "$ref": "#/components/schemas/TimeFormatEnum"
          default: '24'
          description: |-
            24 (14:00) or 12 (02:30) PM

            * `24` - 24 hour
            * `12` - 12 hour
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    DateTimePickerElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this date time picker
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        default_value:
          type: string
          default: ''
          description: This date time picker input's default value.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          default: EU
          description: |-
            EU (25/04/2024), US (04/25/2024) or ISO (2024-04-25)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        include_time:
          type: boolean
          default: false
          description: Whether to include time in the representation of the date
        time_format:
          allOf:
          - "$ref": "#/components/schemas/TimeFormatEnum"
          default: '24'
          description: |-
            24 (14:00) or 12 (02:30) PM

            * `24` - 24 hour
            * `12` - 12 hour
    Decorator_Value_Provider_TypeCreateViewDecoration:
      oneOf:
      - "$ref": "#/components/schemas/GeneratedSingle_select_colorCreateViewDecoration"
      - "$ref": "#/components/schemas/GeneratedConditional_colorCreateViewDecoration"
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: "#/components/schemas/GeneratedSingle_select_colorCreateViewDecoration"
          conditional_color: "#/components/schemas/GeneratedConditional_colorCreateViewDecoration"
    Decorator_Value_Provider_TypeViewDecoration:
      oneOf:
      - "$ref": "#/components/schemas/GeneratedSingle_select_colorViewDecoration"
      - "$ref": "#/components/schemas/GeneratedConditional_colorViewDecoration"
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: "#/components/schemas/GeneratedSingle_select_colorViewDecoration"
          conditional_color: "#/components/schemas/GeneratedConditional_colorViewDecoration"
    DirectionEnum:
      enum:
      - ASC
      - DESC
      type: string
      description: |-
        * `ASC` - Ascending
        * `DESC` - Descending
    DispatchDataSourceDataSourceContext:
      type: object
      properties:
        element:
          type: integer
          nullable: true
          description: Optionally provide an `element` to the data source. Currently
            only used in element-level filtering, sorting and searching if the element
            is a collection element.
    DispatchDataSourceRequest:
      type: object
      properties:
        data_source:
          allOf:
          - "$ref": "#/components/schemas/DispatchDataSourceDataSourceContext"
          default:
            element: 
          description: The data source dispatch context data.
    Domain_TypeCreateDomain:
      oneOf:
      - "$ref": "#/components/schemas/CustomDomainCreateDomain"
      - "$ref": "#/components/schemas/SubDomainCreateDomain"
      discriminator:
        propertyName: type
        mapping:
          custom: "#/components/schemas/CustomDomainCreateDomain"
          sub_domain: "#/components/schemas/SubDomainCreateDomain"
    Domain_TypeDomain:
      oneOf:
      - "$ref": "#/components/schemas/CustomDomainDomain"
      - "$ref": "#/components/schemas/SubDomainDomain"
      discriminator:
        propertyName: type
        mapping:
          custom: "#/components/schemas/CustomDomainDomain"
          sub_domain: "#/components/schemas/SubDomainDomain"
    DuplicateApplicationJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        application_id:
          type: integer
          description: The application ID to duplicate.
      required:
      - application_id
      - type
    DuplicateApplicationJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_application:
          allOf:
          - "$ref": "#/components/schemas/ApplicationApplication"
          readOnly: true
        duplicated_application:
          allOf:
          - "$ref": "#/components/schemas/ApplicationApplication"
          readOnly: true
      required:
      - duplicated_application
      - id
      - original_application
      - progress_percentage
      - state
      - type
    DuplicateApplicationJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_application:
          allOf:
          - "$ref": "#/components/schemas/ApplicationApplication"
          readOnly: true
        duplicated_application:
          allOf:
          - "$ref": "#/components/schemas/ApplicationApplication"
          readOnly: true
      required:
      - duplicated_application
      - id
      - original_application
      - progress_percentage
      - state
      - type
    DuplicateElement:
      type: object
      properties:
        elements:
          type: array
          items:
            "$ref": "#/components/schemas/Element"
          readOnly: true
          description: The duplicated elements.
        workflow_actions:
          type: array
          items:
            "$ref": "#/components/schemas/BuilderWorkflowAction"
          readOnly: true
          description: The duplicated workflow actions
      required:
      - elements
      - workflow_actions
    DuplicateFieldJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        field_id:
          type: integer
          description: The ID of the field to duplicate.
        duplicate_data:
          type: boolean
          default: false
          description: Whether to duplicate the data of the field.
      required:
      - field_id
      - type
    DuplicateFieldJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_field:
          allOf:
          - "$ref": "#/components/schemas/Field"
          readOnly: true
        duplicated_field:
          allOf:
          - "$ref": "#/components/schemas/FieldSerializerWithRelatedFields"
          readOnly: true
      required:
      - duplicated_field
      - id
      - original_field
      - progress_percentage
      - state
      - type
    DuplicateFieldJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_field:
          allOf:
          - "$ref": "#/components/schemas/Field"
          readOnly: true
        duplicated_field:
          allOf:
          - "$ref": "#/components/schemas/FieldSerializerWithRelatedFields"
          readOnly: true
      required:
      - duplicated_field
      - id
      - original_field
      - progress_percentage
      - state
      - type
    DuplicatePageJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        page_id:
          type: integer
          description: The ID of the page to duplicate.
      required:
      - page_id
      - type
    DuplicatePageJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_page:
          allOf:
          - "$ref": "#/components/schemas/Page"
          readOnly: true
        duplicated_page:
          allOf:
          - "$ref": "#/components/schemas/Page"
          readOnly: true
      required:
      - duplicated_page
      - id
      - original_page
      - progress_percentage
      - state
      - type
    DuplicatePageJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_page:
          allOf:
          - "$ref": "#/components/schemas/Page"
          readOnly: true
        duplicated_page:
          allOf:
          - "$ref": "#/components/schemas/Page"
          readOnly: true
      required:
      - duplicated_page
      - id
      - original_page
      - progress_percentage
      - state
      - type
    DuplicateTableJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        table_id:
          type: integer
          description: The ID of the table to duplicate.
      required:
      - table_id
      - type
    DuplicateTableJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_table:
          allOf:
          - "$ref": "#/components/schemas/Table"
          readOnly: true
        duplicated_table:
          allOf:
          - "$ref": "#/components/schemas/Table"
          readOnly: true
      required:
      - duplicated_table
      - id
      - original_table
      - progress_percentage
      - state
      - type
    DuplicateTableJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        original_table:
          allOf:
          - "$ref": "#/components/schemas/Table"
          readOnly: true
        duplicated_table:
          allOf:
          - "$ref": "#/components/schemas/Table"
          readOnly: true
      required:
      - duplicated_table
      - id
      - original_table
      - progress_percentage
      - state
      - type
    DurationFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        duration_format:
          allOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
      required:
      - name
      - type
    DurationFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        duration_format:
          allOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    DurationFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        duration_format:
          allOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    DurationFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        duration_format:
          allOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
    DurationFormatEnum:
      enum:
      - h:mm
      - h:mm:ss
      - h:mm:ss.s
      - h:mm:ss.ss
      - h:mm:ss.sss
      - d h
      - d h:mm
      - d h:mm:ss
      - d h mm
      - d h mm ss
      type: string
      description: |-
        * `h:mm` - hours:minutes
        * `h:mm:ss` - hours:minutes:seconds
        * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
        * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
        * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
        * `d h` - days:hours
        * `d h:mm` - days:hours:minutes
        * `d h:mm:ss` - days:hours:minutes:seconds
        * `d h mm` - days:hours:minutes:with_spaces
        * `d h mm ss` - days:hours:minutes:seconds:with_spaces
    Element:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    Element_TypeCreateElement:
      oneOf:
      - "$ref": "#/components/schemas/HeadingElementCreateElement"
      - "$ref": "#/components/schemas/TextElementCreateElement"
      - "$ref": "#/components/schemas/RatingElementCreateElement"
      - "$ref": "#/components/schemas/RatingInputElementCreateElement"
      - "$ref": "#/components/schemas/LinkElementCreateElement"
      - "$ref": "#/components/schemas/ImageElementCreateElement"
      - "$ref": "#/components/schemas/InputTextElementCreateElement"
      - "$ref": "#/components/schemas/ColumnElementCreateElement"
      - "$ref": "#/components/schemas/ButtonElementCreateElement"
      - "$ref": "#/components/schemas/TableElementCreateElement"
      - "$ref": "#/components/schemas/RepeatElementCreateElement"
      - "$ref": "#/components/schemas/RecordSelectorElementCreateElement"
      - "$ref": "#/components/schemas/FormContainerElementCreateElement"
      - "$ref": "#/components/schemas/ChoiceElementCreateElement"
      - "$ref": "#/components/schemas/CheckboxElementCreateElement"
      - "$ref": "#/components/schemas/IFrameElementCreateElement"
      - "$ref": "#/components/schemas/DateTimePickerElementCreateElement"
      - "$ref": "#/components/schemas/HeaderElementCreateElement"
      - "$ref": "#/components/schemas/FooterElementCreateElement"
      - "$ref": "#/components/schemas/MenuElementCreateElement"
      - "$ref": "#/components/schemas/SimpleContainerElementCreateElement"
      - "$ref": "#/components/schemas/AuthFormElementCreateElement"
      discriminator:
        propertyName: type
        mapping:
          heading: "#/components/schemas/HeadingElementCreateElement"
          text: "#/components/schemas/TextElementCreateElement"
          rating: "#/components/schemas/RatingElementCreateElement"
          rating_input: "#/components/schemas/RatingInputElementCreateElement"
          link: "#/components/schemas/LinkElementCreateElement"
          image: "#/components/schemas/ImageElementCreateElement"
          input_text: "#/components/schemas/InputTextElementCreateElement"
          column: "#/components/schemas/ColumnElementCreateElement"
          button: "#/components/schemas/ButtonElementCreateElement"
          table: "#/components/schemas/TableElementCreateElement"
          repeat: "#/components/schemas/RepeatElementCreateElement"
          record_selector: "#/components/schemas/RecordSelectorElementCreateElement"
          form_container: "#/components/schemas/FormContainerElementCreateElement"
          choice: "#/components/schemas/ChoiceElementCreateElement"
          checkbox: "#/components/schemas/CheckboxElementCreateElement"
          iframe: "#/components/schemas/IFrameElementCreateElement"
          datetime_picker: "#/components/schemas/DateTimePickerElementCreateElement"
          header: "#/components/schemas/HeaderElementCreateElement"
          footer: "#/components/schemas/FooterElementCreateElement"
          menu: "#/components/schemas/MenuElementCreateElement"
          simple_container: "#/components/schemas/SimpleContainerElementCreateElement"
          auth_form: "#/components/schemas/AuthFormElementCreateElement"
    Element_TypeElement:
      oneOf:
      - "$ref": "#/components/schemas/HeadingElementElement"
      - "$ref": "#/components/schemas/TextElementElement"
      - "$ref": "#/components/schemas/RatingElementElement"
      - "$ref": "#/components/schemas/RatingInputElementElement"
      - "$ref": "#/components/schemas/LinkElementElement"
      - "$ref": "#/components/schemas/ImageElementElement"
      - "$ref": "#/components/schemas/InputTextElementElement"
      - "$ref": "#/components/schemas/ColumnElementElement"
      - "$ref": "#/components/schemas/ButtonElementElement"
      - "$ref": "#/components/schemas/TableElementElement"
      - "$ref": "#/components/schemas/RepeatElementElement"
      - "$ref": "#/components/schemas/RecordSelectorElementElement"
      - "$ref": "#/components/schemas/FormContainerElementElement"
      - "$ref": "#/components/schemas/ChoiceElementElement"
      - "$ref": "#/components/schemas/CheckboxElementElement"
      - "$ref": "#/components/schemas/IFrameElementElement"
      - "$ref": "#/components/schemas/DateTimePickerElementElement"
      - "$ref": "#/components/schemas/HeaderElementElement"
      - "$ref": "#/components/schemas/FooterElementElement"
      - "$ref": "#/components/schemas/MenuElementElement"
      - "$ref": "#/components/schemas/SimpleContainerElementElement"
      - "$ref": "#/components/schemas/AuthFormElementElement"
      discriminator:
        propertyName: type
        mapping:
          heading: "#/components/schemas/HeadingElementElement"
          text: "#/components/schemas/TextElementElement"
          rating: "#/components/schemas/RatingElementElement"
          rating_input: "#/components/schemas/RatingInputElementElement"
          link: "#/components/schemas/LinkElementElement"
          image: "#/components/schemas/ImageElementElement"
          input_text: "#/components/schemas/InputTextElementElement"
          column: "#/components/schemas/ColumnElementElement"
          button: "#/components/schemas/ButtonElementElement"
          table: "#/components/schemas/TableElementElement"
          repeat: "#/components/schemas/RepeatElementElement"
          record_selector: "#/components/schemas/RecordSelectorElementElement"
          form_container: "#/components/schemas/FormContainerElementElement"
          choice: "#/components/schemas/ChoiceElementElement"
          checkbox: "#/components/schemas/CheckboxElementElement"
          iframe: "#/components/schemas/IFrameElementElement"
          datetime_picker: "#/components/schemas/DateTimePickerElementElement"
          header: "#/components/schemas/HeaderElementElement"
          footer: "#/components/schemas/FooterElementElement"
          menu: "#/components/schemas/MenuElementElement"
          simple_container: "#/components/schemas/SimpleContainerElementElement"
          auth_form: "#/components/schemas/AuthFormElementElement"
    Element_TypePublicElement:
      oneOf:
      - "$ref": "#/components/schemas/HeadingElementPublicElement"
      - "$ref": "#/components/schemas/TextElementPublicElement"
      - "$ref": "#/components/schemas/RatingElementPublicElement"
      - "$ref": "#/components/schemas/RatingInputElementPublicElement"
      - "$ref": "#/components/schemas/LinkElementPublicElement"
      - "$ref": "#/components/schemas/ImageElementPublicElement"
      - "$ref": "#/components/schemas/InputTextElementPublicElement"
      - "$ref": "#/components/schemas/ColumnElementPublicElement"
      - "$ref": "#/components/schemas/ButtonElementPublicElement"
      - "$ref": "#/components/schemas/TableElementPublicElement"
      - "$ref": "#/components/schemas/RepeatElementPublicElement"
      - "$ref": "#/components/schemas/RecordSelectorElementPublicElement"
      - "$ref": "#/components/schemas/FormContainerElementPublicElement"
      - "$ref": "#/components/schemas/ChoiceElementPublicElement"
      - "$ref": "#/components/schemas/CheckboxElementPublicElement"
      - "$ref": "#/components/schemas/IFrameElementPublicElement"
      - "$ref": "#/components/schemas/DateTimePickerElementPublicElement"
      - "$ref": "#/components/schemas/HeaderElementPublicElement"
      - "$ref": "#/components/schemas/FooterElementPublicElement"
      - "$ref": "#/components/schemas/MenuElementPublicElement"
      - "$ref": "#/components/schemas/SimpleContainerElementPublicElement"
      - "$ref": "#/components/schemas/AuthFormElementPublicElement"
      discriminator:
        propertyName: type
        mapping:
          heading: "#/components/schemas/HeadingElementPublicElement"
          text: "#/components/schemas/TextElementPublicElement"
          rating: "#/components/schemas/RatingElementPublicElement"
          rating_input: "#/components/schemas/RatingInputElementPublicElement"
          link: "#/components/schemas/LinkElementPublicElement"
          image: "#/components/schemas/ImageElementPublicElement"
          input_text: "#/components/schemas/InputTextElementPublicElement"
          column: "#/components/schemas/ColumnElementPublicElement"
          button: "#/components/schemas/ButtonElementPublicElement"
          table: "#/components/schemas/TableElementPublicElement"
          repeat: "#/components/schemas/RepeatElementPublicElement"
          record_selector: "#/components/schemas/RecordSelectorElementPublicElement"
          form_container: "#/components/schemas/FormContainerElementPublicElement"
          choice: "#/components/schemas/ChoiceElementPublicElement"
          checkbox: "#/components/schemas/CheckboxElementPublicElement"
          iframe: "#/components/schemas/IFrameElementPublicElement"
          datetime_picker: "#/components/schemas/DateTimePickerElementPublicElement"
          header: "#/components/schemas/HeaderElementPublicElement"
          footer: "#/components/schemas/FooterElementPublicElement"
          menu: "#/components/schemas/MenuElementPublicElement"
          simple_container: "#/components/schemas/SimpleContainerElementPublicElement"
          auth_form: "#/components/schemas/AuthFormElementPublicElement"
    EmailFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    EmailFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    EmailFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    EmailFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    EmailNotificationFrequencyEnum:
      enum:
      - instant
      - daily
      - weekly
      - never
      type: string
      description: |-
        * `instant` - instant
        * `daily` - daily
        * `weekly` - weekly
        * `never` - never
    EmailTesterRequest:
      type: object
      properties:
        target_email:
          type: string
          format: email
      required:
      - target_email
    EmailTesterResponse:
      type: object
      properties:
        succeeded:
          type: boolean
          description: Whether or not the test email was sent successfully.
        error_stack:
          type: string
          nullable: true
          description: The full stack trace and error message if the test email failed.
        error_type:
          type: string
          nullable: true
          description: The type of error that occurred if the test email failed.
        error:
          type: string
          nullable: true
          description: A short message describing the error that occured if the test
            email failed
      required:
      - succeeded
    EmailVerificationEnum:
      enum:
      - no_verification
      - recommended
      - enforced
      type: string
      description: |-
        * `no_verification` - no_verification
        * `recommended` - recommended
        * `enforced` - enforced
    EventTypeEnum:
      enum:
      - rows.created
      - rows.updated
      - rows.deleted
      - field.created
      - field.updated
      - field.deleted
      - view.created
      - view.updated
      - view.deleted
      - view.rows_entered
      type: string
      description: |-
        * `rows.created` - rows.created
        * `rows.updated` - rows.updated
        * `rows.deleted` - rows.deleted
        * `field.created` - field.created
        * `field.updated` - field.updated
        * `field.deleted` - field.deleted
        * `view.created` - view.created
        * `view.updated` - view.updated
        * `view.deleted` - view.deleted
        * `view.rows_entered` - view.rows_entered
    EventsEnum:
      enum:
      - rows.created
      - rows.updated
      - rows.deleted
      - field.created
      - field.updated
      - field.deleted
      - view.created
      - view.updated
      - view.deleted
      - view.rows_entered
      type: string
      description: |-
        * `rows.created` - rows.created
        * `rows.updated` - rows.updated
        * `rows.deleted` - rows.deleted
        * `field.created` - field.created
        * `field.updated` - field.updated
        * `field.deleted` - field.deleted
        * `view.created` - view.created
        * `view.updated` - view.updated
        * `view.deleted` - view.deleted
        * `view.rows_entered` - view.rows_entered
    ExampleBatchRowsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowRequestSerializerWithUserFieldNames"
          maxItems: 200
          minItems: 1
      required:
      - items
    ExampleBatchRowsResponse:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
          maxItems: 200
          minItems: 1
      required:
      - items
    ExampleBatchUpdateRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the row in the table.
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in
            field_2 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: "^-?\\d{0,50}(?:\\.\\d{0,0})?$"
          nullable: true
          description: 'This field represents the `number` field. The number in field_5
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in
            field_13 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. The provided value can be
            a string in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match the
            field''s duration format.'
        field_14:
          type: array
          items: {}
          description: 'This field represents the `link_row` field. The number in
            field_14 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the value
            of the primary key of the related row. This field also accepts a string
            with names separated by a comma or an array of row names. You can also
            provide a unique row Id.The response contains a list of objects containing
            the `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items: {}
          nullable: true
          description: 'This field represents the `file` field. The number in field_15
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of
            more detailed objects related to the files.'
        field_16:
          type: integer
          nullable: true
          description: 'This field represents the `single_select` field. The number
            in field_16 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the field.
            Available ids can be found when getting or listing the field. The response
            represents chosen field, but also the value and color is exposed.'
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: 'This field represents the `multiple_select` field. The number
              in field_17 is in a normal request or response the id of the field.
              If the GET parameter user_field_names is provided and its value is one
              of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
              the key will instead be the actual name of the field. This field accepts
              a list of `integer` each of which representing the chosen select option
              id related to the field. Available ids can be foundwhen getting or listing
              the field. You can also send a list of option names in which case the
              option are searched by name. The first one that matches is used. This
              field also accepts a string with names separated by a comma or an array
              of file names. The response represents chosen field, but also the value
              and color is exposed.'
          description: 'This field represents the `multiple_select` field. The number
            in field_17 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts a
            list of `integer` each of which representing the chosen select option
            id related to the field. Available ids can be foundwhen getting or listing
            the field. You can also send a list of option names in which case the
            option are searched by name. The first one that matches is used. This
            field also accepts a string with names separated by a comma or an array
            of file names. The response represents chosen field, but also the value
            and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number
            in field_18 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `multiple_collaborators` field.
            The number in field_23 is in a normal request or response the id of the
            field. If the GET parameter user_field_names is provided and its value
            is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field
            accepts a list of objects representing the chosen collaborators through
            the object''s `id` property. The id is Baserow user id. The response objects
            also contains the collaborator name directly along with its id.'
        field_26:
          type: string
          nullable: true
          description: 'This field represents the `password` field. The number in
            field_26 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null` will
            unset it, `true` will be ignored. The response will respond with `true`
            is a password is set, but will never expose the password itself.'
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
      required:
      - field_27
      - id
    ExampleRowRequest:
      type: object
      properties:
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1
            is in a normal request or response the id of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in
            field_2 is in a normal request or response the id of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3
            is in a normal request or response the id of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4
            is in a normal request or response the id of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: "^-?\\d{0,50}(?:\\.\\d{0,0})?$"
          nullable: true
          description: 'This field represents the `number` field. The number in field_5
            is in a normal request or response the id of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6
            is in a normal request or response the id of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7
            is in a normal request or response the id of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8
            is in a normal request or response the id of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. The provided value
            can be a string in one of the available formats or a number representing
            the duration in seconds. In any case, the value will be rounded to match
            the field's duration format.
        field_14:
          type: array
          items: {}
          description: This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. This field accepts
            an `array` containing the ids or the names of the related rows. A name
            is the value of the primary key of the related row. This field also accepts
            a string with names separated by a comma or an array of row names. You
            can also provide a unique row Id.The response contains a list of objects
            containing the `id` and the primary field's `value` as a string for display
            purposes.
        field_15:
          type: array
          items: {}
          nullable: true
          description: This field represents the `file` field. The number in field_15
            is in a normal request or response the id of the field. This field accepts
            an `array` containing objects with the name of the file. The response
            contains an `array` of more detailed objects related to the files.
        field_16:
          type: integer
          nullable: true
          description: This field represents the `single_select` field. The number
            in field_16 is in a normal request or response the id of the field. This
            field accepts an `integer` representing the chosen select option id related
            to the field. Available ids can be found when getting or listing the field.
            The response represents chosen field, but also the value and color is
            exposed.
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: This field represents the `multiple_select` field. The number
              in field_17 is in a normal request or response the id of the field.
              This field accepts a list of `integer` each of which representing the
              chosen select option id related to the field. Available ids can be foundwhen
              getting or listing the field. You can also send a list of option names
              in which case the option are searched by name. The first one that matches
              is used. This field also accepts a string with names separated by a
              comma or an array of file names. The response represents chosen field,
              but also the value and color is exposed.
          description: This field represents the `multiple_select` field. The number
            in field_17 is in a normal request or response the id of the field. This
            field accepts a list of `integer` each of which representing the chosen
            select option id related to the field. Available ids can be foundwhen
            getting or listing the field. You can also send a list of option names
            in which case the option are searched by name. The first one that matches
            is used. This field also accepts a string with names separated by a comma
            or an array of file names. The response represents chosen field, but also
            the value and color is exposed.
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number
            in field_18 is in a normal request or response the id of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          description: This field represents the `multiple_collaborators` field. The
            number in field_23 is in a normal request or response the id of the field.
            This field accepts a list of objects representing the chosen collaborators
            through the object's `id` property. The id is Baserow user id. The response
            objects also contains the collaborator name directly along with its id.
        field_26:
          type: string
          nullable: true
          description: This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. Allows setting
            a write only password value. Providing a string will set the password,
            `null` will unset it, `true` will be ignored. The response will respond
            with `true` is a password is set, but will never expose the password itself.
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: This field represents the `ai` field. The number in field_27
            is in a normal request or response the id of the field. Holds a value
            that is generated by a generative AI model using a dynamic prompt.
      required:
      - field_27
    ExampleRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in
            field_2 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: "^-?\\d{0,50}(?:\\.\\d{0,0})?$"
          nullable: true
          description: 'This field represents the `number` field. The number in field_5
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in
            field_13 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. The provided value can be
            a string in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match the
            field''s duration format.'
        field_14:
          type: array
          items: {}
          description: 'This field represents the `link_row` field. The number in
            field_14 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the value
            of the primary key of the related row. This field also accepts a string
            with names separated by a comma or an array of row names. You can also
            provide a unique row Id.The response contains a list of objects containing
            the `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items: {}
          nullable: true
          description: 'This field represents the `file` field. The number in field_15
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of
            more detailed objects related to the files.'
        field_16:
          type: integer
          nullable: true
          description: 'This field represents the `single_select` field. The number
            in field_16 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the field.
            Available ids can be found when getting or listing the field. The response
            represents chosen field, but also the value and color is exposed.'
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: 'This field represents the `multiple_select` field. The number
              in field_17 is in a normal request or response the id of the field.
              If the GET parameter user_field_names is provided and its value is one
              of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
              the key will instead be the actual name of the field. This field accepts
              a list of `integer` each of which representing the chosen select option
              id related to the field. Available ids can be foundwhen getting or listing
              the field. You can also send a list of option names in which case the
              option are searched by name. The first one that matches is used. This
              field also accepts a string with names separated by a comma or an array
              of file names. The response represents chosen field, but also the value
              and color is exposed.'
          description: 'This field represents the `multiple_select` field. The number
            in field_17 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts a
            list of `integer` each of which representing the chosen select option
            id related to the field. Available ids can be foundwhen getting or listing
            the field. You can also send a list of option names in which case the
            option are searched by name. The first one that matches is used. This
            field also accepts a string with names separated by a comma or an array
            of file names. The response represents chosen field, but also the value
            and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number
            in field_18 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `multiple_collaborators` field.
            The number in field_23 is in a normal request or response the id of the
            field. If the GET parameter user_field_names is provided and its value
            is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field
            accepts a list of objects representing the chosen collaborators through
            the object''s `id` property. The id is Baserow user id. The response objects
            also contains the collaborator name directly along with its id.'
        field_26:
          type: string
          nullable: true
          description: 'This field represents the `password` field. The number in
            field_26 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null` will
            unset it, `true` will be ignored. The response will respond with `true`
            is a password is set, but will never expose the password itself.'
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
      required:
      - field_27
    ExampleRowResponse:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the row in the table.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          description: Indicates the position of the row, lowest first and highest
            last.
        metadata:
          allOf:
          - "$ref": "#/components/schemas/RowMetadata"
          description: Additional metadata for the row, if `include=metadata' is provided
            as query parameter.
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1
            is in a normal request or response the id of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in
            field_2 is in a normal request or response the id of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3
            is in a normal request or response the id of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4
            is in a normal request or response the id of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: "^-?\\d{0,50}(?:\\.\\d{0,0})?$"
          nullable: true
          description: 'This field represents the `number` field. The number in field_5
            is in a normal request or response the id of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6
            is in a normal request or response the id of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7
            is in a normal request or response the id of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8
            is in a normal request or response the id of the field. '
        field_9:
          type: string
          format: date-time
          description: 'This field represents the `last_modified` field. The number
            in field_9 is in a normal request or response the id of the field. '
        field_10:
          allOf:
          - "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `last_modified_by` field. The number
            in field_10 is in a normal request or response the id of the field. '
        field_11:
          type: string
          format: date-time
          description: 'This field represents the `created_on` field. The number in
            field_11 is in a normal request or response the id of the field. '
        field_12:
          allOf:
          - "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `created_by` field. The number in
            field_12 is in a normal request or response the id of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: This field represents the `duration` field. The number in field_13
            is in a normal request or response the id of the field. The provided value
            can be a string in one of the available formats or a number representing
            the duration in seconds. In any case, the value will be rounded to match
            the field's duration format.
        field_14:
          type: array
          items:
            "$ref": "#/components/schemas/LinkRowValue"
          description: This field represents the `link_row` field. The number in field_14
            is in a normal request or response the id of the field. This field accepts
            an `array` containing the ids or the names of the related rows. A name
            is the value of the primary key of the related row. This field also accepts
            a string with names separated by a comma or an array of row names. You
            can also provide a unique row Id.The response contains a list of objects
            containing the `id` and the primary field's `value` as a string for display
            purposes.
        field_15:
          type: array
          items:
            "$ref": "#/components/schemas/FileFieldResponse"
          description: This field represents the `file` field. The number in field_15
            is in a normal request or response the id of the field. This field accepts
            an `array` containing objects with the name of the file. The response
            contains an `array` of more detailed objects related to the files.
        field_16:
          allOf:
          - "$ref": "#/components/schemas/SelectOption"
          nullable: true
          description: This field represents the `single_select` field. The number
            in field_16 is in a normal request or response the id of the field. This
            field accepts an `integer` representing the chosen select option id related
            to the field. Available ids can be found when getting or listing the field.
            The response represents chosen field, but also the value and color is
            exposed.
        field_17:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          nullable: true
          description: This field represents the `multiple_select` field. The number
            in field_17 is in a normal request or response the id of the field. This
            field accepts a list of `integer` each of which representing the chosen
            select option id related to the field. Available ids can be foundwhen
            getting or listing the field. You can also send a list of option names
            in which case the option are searched by name. The first one that matches
            is used. This field also accepts a string with names separated by a comma
            or an array of file names. The response represents chosen field, but also
            the value and color is exposed.
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number
            in field_18 is in a normal request or response the id of the field. '
          maxLength: 100
        field_19:
          type: string
          nullable: true
          description: 'This field represents the `formula` field. The number in field_19
            is in a normal request or response the id of the field. '
        field_20:
          type: string
          nullable: true
          description: 'This field represents the `count` field. The number in field_20
            is in a normal request or response the id of the field. '
        field_21:
          type: string
          nullable: true
          description: 'This field represents the `rollup` field. The number in field_21
            is in a normal request or response the id of the field. '
        field_22:
          type: string
          nullable: true
          description: 'This field represents the `lookup` field. The number in field_22
            is in a normal request or response the id of the field. '
        field_23:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          description: This field represents the `multiple_collaborators` field. The
            number in field_23 is in a normal request or response the id of the field.
            This field accepts a list of objects representing the chosen collaborators
            through the object's `id` property. The id is Baserow user id. The response
            objects also contains the collaborator name directly along with its id.
        field_24:
          type: string
          format: uuid
          description: This field represents the `uuid` field. The number in field_24
            is in a normal request or response the id of the field. Contains a unique
            and persistent UUID for every row.
        field_25:
          type: integer
          description: This field represents the `autonumber` field. The number in
            field_25 is in a normal request or response the id of the field. Contains
            a unique and persistent incremental integer number for every row.
        field_26:
          type: boolean
          description: This field represents the `password` field. The number in field_26
            is in a normal request or response the id of the field. Allows setting
            a write only password value. Providing a string will set the password,
            `null` will unset it, `true` will be ignored. The response will respond
            with `true` is a password is set, but will never expose the password itself.
        field_27:
          type: string
          nullable: true
          description: This field represents the `ai` field. The number in field_27
            is in a normal request or response the id of the field. Holds a value
            that is generated by a generative AI model using a dynamic prompt.
      required:
      - id
    ExampleRowResponseSerializerWithUserFieldNames:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the row in the table.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          description: Indicates the position of the row, lowest first and highest
            last.
        metadata:
          allOf:
          - "$ref": "#/components/schemas/RowMetadata"
          description: Additional metadata for the row, if `include=metadata' is provided
            as query parameter.
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in
            field_2 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: "^-?\\d{0,50}(?:\\.\\d{0,0})?$"
          nullable: true
          description: 'This field represents the `number` field. The number in field_5
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_9:
          type: string
          format: date-time
          description: 'This field represents the `last_modified` field. The number
            in field_9 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. '
        field_10:
          allOf:
          - "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `last_modified_by` field. The number
            in field_10 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. '
        field_11:
          type: string
          format: date-time
          description: 'This field represents the `created_on` field. The number in
            field_11 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_12:
          allOf:
          - "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `created_by` field. The number in
            field_12 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in
            field_13 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. The provided value can be
            a string in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match the
            field''s duration format.'
        field_14:
          type: array
          items:
            "$ref": "#/components/schemas/LinkRowValue"
          description: 'This field represents the `link_row` field. The number in
            field_14 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the value
            of the primary key of the related row. This field also accepts a string
            with names separated by a comma or an array of row names. You can also
            provide a unique row Id.The response contains a list of objects containing
            the `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items:
            "$ref": "#/components/schemas/FileFieldResponse"
          description: 'This field represents the `file` field. The number in field_15
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of
            more detailed objects related to the files.'
        field_16:
          allOf:
          - "$ref": "#/components/schemas/SelectOption"
          nullable: true
          description: 'This field represents the `single_select` field. The number
            in field_16 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the field.
            Available ids can be found when getting or listing the field. The response
            represents chosen field, but also the value and color is exposed.'
        field_17:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          nullable: true
          description: 'This field represents the `multiple_select` field. The number
            in field_17 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts a
            list of `integer` each of which representing the chosen select option
            id related to the field. Available ids can be foundwhen getting or listing
            the field. You can also send a list of option names in which case the
            option are searched by name. The first one that matches is used. This
            field also accepts a string with names separated by a comma or an array
            of file names. The response represents chosen field, but also the value
            and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number
            in field_18 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. '
          maxLength: 100
        field_19:
          type: string
          nullable: true
          description: 'This field represents the `formula` field. The number in field_19
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_20:
          type: string
          nullable: true
          description: 'This field represents the `count` field. The number in field_20
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_21:
          type: string
          nullable: true
          description: 'This field represents the `rollup` field. The number in field_21
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_22:
          type: string
          nullable: true
          description: 'This field represents the `lookup` field. The number in field_22
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_23:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `multiple_collaborators` field.
            The number in field_23 is in a normal request or response the id of the
            field. If the GET parameter user_field_names is provided and its value
            is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field
            accepts a list of objects representing the chosen collaborators through
            the object''s `id` property. The id is Baserow user id. The response objects
            also contains the collaborator name directly along with its id.'
        field_24:
          type: string
          format: uuid
          description: 'This field represents the `uuid` field. The number in field_24
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. Contains a unique and persistent UUID for
            every row.'
        field_25:
          type: integer
          description: 'This field represents the `autonumber` field. The number in
            field_25 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Contains a unique and persistent
            incremental integer number for every row.'
        field_26:
          type: boolean
          description: 'This field represents the `password` field. The number in
            field_26 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null` will
            unset it, `true` will be ignored. The response will respond with `true`
            is a password is set, but will never expose the password itself.'
        field_27:
          type: string
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
      required:
      - id
    ExcelExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters,
            sorts and other view specific settings.'
        exporter_type:
          allOf:
          - "$ref": "#/components/schemas/ExporterTypeEnum"
          description: |-
            The file type to export to.

            * `csv` - csv
            * `json` - json
            * `xml` - xml
            * `excel` - excel
            * `file` - file
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        filters:
          allOf:
          - "$ref": "#/components/schemas/PublicViewFilters"
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply
            to this view. The filter tree is a nested structure containing the filters
            that need to be applied. \n\nAn example of a valid filter tree is the
            following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\":
            \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of
            the field to filter on, or the name of the field if `user_field_names`
            is true.\n\nThe following filters are available: equal, not_equal, filename_contains,
            files_lower_than, has_file_type, contains, contains_not, contains_word,
            doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,
            lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,
            date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,
            date_not_equal, date_equals_today, date_before_today, date_after_today,
            date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month,
            date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,
            date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,
            single_select_equal, single_select_not_equal, single_select_is_any_of,
            single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
            link_row_not_contains, boolean, empty, not_empty, multiple_select_has,
            multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,
            user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains,
            has_not_value_contains, has_value_contains_word, has_not_value_contains_word,
            has_value_length_is_lower_than, has_all_values_equal, has_empty_value,
            has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,
            has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,
            has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal,
            has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,
            has_not_date_before, has_date_on_or_before, has_not_date_on_or_before,
            has_date_on_or_after, has_not_date_on_or_after, has_date_after, has_not_date_after,
            has_date_within, has_not_date_within.\n\n**Please note that if this parameter
            is provided, all other `filter__{field}__{filter}` will be ignored, as
            well as the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order, but
            by prepending the field with a '-' it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the
            desired order.
        excel_include_header:
          type: boolean
          default: true
          description: Whether or not to generate the field names as header row at
            the top of the Excel file.
      required:
      - exporter_type
    Export:
      oneOf:
      - "$ref": "#/components/schemas/CsvExporterOptions"
      - "$ref": "#/components/schemas/BaseExporterOptions"
      - "$ref": "#/components/schemas/BaseExporterOptions"
      - "$ref": "#/components/schemas/ExcelExporterOptions"
      - "$ref": "#/components/schemas/FileExporterOptions"
      discriminator:
        propertyName: exporter_type
        mapping:
          csv: "#/components/schemas/CsvExporterOptions"
          json: "#/components/schemas/BaseExporterOptions"
          xml: "#/components/schemas/BaseExporterOptions"
          excel: "#/components/schemas/ExcelExporterOptions"
          file: "#/components/schemas/FileExporterOptions"
    ExportApplicationsJobCreateJob:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        exported_file_name:
          type: string
          readOnly: true
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        application_ids:
          type: array
          items:
            type: integer
          nullable: true
          description: The application IDs to export. If not provided, all the applications
            for the workspace will be exported.
        only_structure:
          type: boolean
          default: false
          description: If True, only the structure of the applications will be exported.
            If False, the data will be included as well.
      required:
      - exported_file_name
      - type
      - url
    ExportApplicationsJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        exported_file_name:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        workspace_id:
          type: integer
          nullable: true
          description: The workspace that the applications are going to be exported
            from.
          readOnly: true
      required:
      - created_on
      - exported_file_name
      - id
      - progress_percentage
      - state
      - type
      - url
      - workspace_id
    ExportApplicationsJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        exported_file_name:
          type: string
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        workspace_id:
          type: integer
          nullable: true
          description: The workspace that the applications are going to be exported
            from.
          readOnly: true
      required:
      - created_on
      - exported_file_name
      - id
      - progress_percentage
      - state
      - type
      - url
      - workspace_id
    ExportCharsetEnum:
      enum:
      - utf-8
      - iso-8859-6
      - windows-1256
      - iso-8859-4
      - windows-1257
      - iso-8859-14
      - iso-8859-2
      - windows-1250
      - gbk
      - gb18030
      - big5
      - koi8-r
      - koi8-u
      - iso-8859-5
      - windows-1251
      - x-mac-cyrillic
      - iso-8859-7
      - windows-1253
      - iso-8859-8
      - windows-1255
      - euc-jp
      - iso-2022-jp
      - shift-jis
      - euc-kr
      - macintosh
      - iso-8859-10
      - iso-8859-16
      - windows-874
      - windows-1254
      - windows-1258
      - iso-8859-1
      - windows-1252
      - iso-8859-3
      type: string
      description: |-
        * `utf-8` - utf-8
        * `iso-8859-6` - iso-8859-6
        * `windows-1256` - windows-1256
        * `iso-8859-4` - iso-8859-4
        * `windows-1257` - windows-1257
        * `iso-8859-14` - iso-8859-14
        * `iso-8859-2` - iso-8859-2
        * `windows-1250` - windows-1250
        * `gbk` - gbk
        * `gb18030` - gb18030
        * `big5` - big5
        * `koi8-r` - koi8-r
        * `koi8-u` - koi8-u
        * `iso-8859-5` - iso-8859-5
        * `windows-1251` - windows-1251
        * `x-mac-cyrillic` - mac-cyrillic
        * `iso-8859-7` - iso-8859-7
        * `windows-1253` - windows-1253
        * `iso-8859-8` - iso-8859-8
        * `windows-1255` - windows-1255
        * `euc-jp` - euc-jp
        * `iso-2022-jp` - iso-2022-jp
        * `shift-jis` - shift-jis
        * `euc-kr` - euc-kr
        * `macintosh` - macintosh
        * `iso-8859-10` - iso-8859-10
        * `iso-8859-16` - iso-8859-16
        * `windows-874` - cp874
        * `windows-1254` - windows-1254
        * `windows-1258` - windows-1258
        * `iso-8859-1` - iso-8859-1
        * `windows-1252` - windows-1252
        * `iso-8859-3` - iso-8859-3
    ExportJob:
      type: object
      description: |-
        When mixed in to a model serializer for an ExportJob this will add an url field
        with the actual usable url of the export job's file (if it has one).
      properties:
        id:
          type: integer
          readOnly: true
        table:
          type: integer
          nullable: true
        view:
          type: integer
          nullable: true
        exporter_type:
          type: string
        state:
          "$ref": "#/components/schemas/StateEnum"
        status:
          type: string
          readOnly: true
          description: 'DEPRECATED: Use state instead'
        exported_file_name:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        progress_percentage:
          type: number
          format: double
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - created_at
      - exporter_type
      - id
      - state
      - status
      - url
    ExporterTypeEnum:
      enum:
      - csv
      - json
      - xml
      - excel
      - file
      type: string
      description: |-
        * `csv` - csv
        * `json` - json
        * `xml` - xml
        * `excel` - excel
        * `file` - file
    FacebookAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    Field:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    FieldCreateField:
      oneOf:
      - "$ref": "#/components/schemas/TextFieldCreateField"
      - "$ref": "#/components/schemas/LongTextFieldCreateField"
      - "$ref": "#/components/schemas/URLFieldCreateField"
      - "$ref": "#/components/schemas/EmailFieldCreateField"
      - "$ref": "#/components/schemas/NumberFieldCreateField"
      - "$ref": "#/components/schemas/RatingFieldCreateField"
      - "$ref": "#/components/schemas/BooleanFieldCreateField"
      - "$ref": "#/components/schemas/DateFieldCreateField"
      - "$ref": "#/components/schemas/LastModifiedFieldCreateField"
      - "$ref": "#/components/schemas/LastModifiedByFieldCreateField"
      - "$ref": "#/components/schemas/CreatedOnFieldCreateField"
      - "$ref": "#/components/schemas/CreatedByFieldCreateField"
      - "$ref": "#/components/schemas/DurationFieldCreateField"
      - "$ref": "#/components/schemas/LinkRowFieldCreateField"
      - "$ref": "#/components/schemas/FileFieldCreateField"
      - "$ref": "#/components/schemas/SingleSelectFieldCreateField"
      - "$ref": "#/components/schemas/MultipleSelectFieldCreateField"
      - "$ref": "#/components/schemas/PhoneNumberFieldCreateField"
      - "$ref": "#/components/schemas/FormulaFieldCreateField"
      - "$ref": "#/components/schemas/CountFieldCreateField"
      - "$ref": "#/components/schemas/RollupFieldCreateField"
      - "$ref": "#/components/schemas/LookupFieldCreateField"
      - "$ref": "#/components/schemas/MultipleCollaboratorsFieldCreateField"
      - "$ref": "#/components/schemas/UUIDFieldCreateField"
      - "$ref": "#/components/schemas/AutonumberFieldCreateField"
      - "$ref": "#/components/schemas/PasswordFieldCreateField"
      - "$ref": "#/components/schemas/AIFieldCreateField"
      discriminator:
        propertyName: type
        mapping:
          text: "#/components/schemas/TextFieldCreateField"
          long_text: "#/components/schemas/LongTextFieldCreateField"
          url: "#/components/schemas/URLFieldCreateField"
          email: "#/components/schemas/EmailFieldCreateField"
          number: "#/components/schemas/NumberFieldCreateField"
          rating: "#/components/schemas/RatingFieldCreateField"
          boolean: "#/components/schemas/BooleanFieldCreateField"
          date: "#/components/schemas/DateFieldCreateField"
          last_modified: "#/components/schemas/LastModifiedFieldCreateField"
          last_modified_by: "#/components/schemas/LastModifiedByFieldCreateField"
          created_on: "#/components/schemas/CreatedOnFieldCreateField"
          created_by: "#/components/schemas/CreatedByFieldCreateField"
          duration: "#/components/schemas/DurationFieldCreateField"
          link_row: "#/components/schemas/LinkRowFieldCreateField"
          file: "#/components/schemas/FileFieldCreateField"
          single_select: "#/components/schemas/SingleSelectFieldCreateField"
          multiple_select: "#/components/schemas/MultipleSelectFieldCreateField"
          phone_number: "#/components/schemas/PhoneNumberFieldCreateField"
          formula: "#/components/schemas/FormulaFieldCreateField"
          count: "#/components/schemas/CountFieldCreateField"
          rollup: "#/components/schemas/RollupFieldCreateField"
          lookup: "#/components/schemas/LookupFieldCreateField"
          multiple_collaborators: "#/components/schemas/MultipleCollaboratorsFieldCreateField"
          uuid: "#/components/schemas/UUIDFieldCreateField"
          autonumber: "#/components/schemas/AutonumberFieldCreateField"
          password: "#/components/schemas/PasswordFieldCreateField"
          ai: "#/components/schemas/AIFieldCreateField"
    FieldField:
      oneOf:
      - "$ref": "#/components/schemas/TextFieldField"
      - "$ref": "#/components/schemas/LongTextFieldField"
      - "$ref": "#/components/schemas/URLFieldField"
      - "$ref": "#/components/schemas/EmailFieldField"
      - "$ref": "#/components/schemas/NumberFieldField"
      - "$ref": "#/components/schemas/RatingFieldField"
      - "$ref": "#/components/schemas/BooleanFieldField"
      - "$ref": "#/components/schemas/DateFieldField"
      - "$ref": "#/components/schemas/LastModifiedFieldField"
      - "$ref": "#/components/schemas/LastModifiedByFieldField"
      - "$ref": "#/components/schemas/CreatedOnFieldField"
      - "$ref": "#/components/schemas/CreatedByFieldField"
      - "$ref": "#/components/schemas/DurationFieldField"
      - "$ref": "#/components/schemas/LinkRowFieldField"
      - "$ref": "#/components/schemas/FileFieldField"
      - "$ref": "#/components/schemas/SingleSelectFieldField"
      - "$ref": "#/components/schemas/MultipleSelectFieldField"
      - "$ref": "#/components/schemas/PhoneNumberFieldField"
      - "$ref": "#/components/schemas/FormulaFieldField"
      - "$ref": "#/components/schemas/CountFieldField"
      - "$ref": "#/components/schemas/RollupFieldField"
      - "$ref": "#/components/schemas/LookupFieldField"
      - "$ref": "#/components/schemas/MultipleCollaboratorsFieldField"
      - "$ref": "#/components/schemas/UUIDFieldField"
      - "$ref": "#/components/schemas/AutonumberFieldField"
      - "$ref": "#/components/schemas/PasswordFieldField"
      - "$ref": "#/components/schemas/AIFieldField"
      discriminator:
        propertyName: type
        mapping:
          text: "#/components/schemas/TextFieldField"
          long_text: "#/components/schemas/LongTextFieldField"
          url: "#/components/schemas/URLFieldField"
          email: "#/components/schemas/EmailFieldField"
          number: "#/components/schemas/NumberFieldField"
          rating: "#/components/schemas/RatingFieldField"
          boolean: "#/components/schemas/BooleanFieldField"
          date: "#/components/schemas/DateFieldField"
          last_modified: "#/components/schemas/LastModifiedFieldField"
          last_modified_by: "#/components/schemas/LastModifiedByFieldField"
          created_on: "#/components/schemas/CreatedOnFieldField"
          created_by: "#/components/schemas/CreatedByFieldField"
          duration: "#/components/schemas/DurationFieldField"
          link_row: "#/components/schemas/LinkRowFieldField"
          file: "#/components/schemas/FileFieldField"
          single_select: "#/components/schemas/SingleSelectFieldField"
          multiple_select: "#/components/schemas/MultipleSelectFieldField"
          phone_number: "#/components/schemas/PhoneNumberFieldField"
          formula: "#/components/schemas/FormulaFieldField"
          count: "#/components/schemas/CountFieldField"
          rollup: "#/components/schemas/RollupFieldField"
          lookup: "#/components/schemas/LookupFieldField"
          multiple_collaborators: "#/components/schemas/MultipleCollaboratorsFieldField"
          uuid: "#/components/schemas/UUIDFieldField"
          autonumber: "#/components/schemas/AutonumberFieldField"
          password: "#/components/schemas/PasswordFieldField"
          ai: "#/components/schemas/AIFieldField"
    FieldFieldSerializerWithRelatedFields:
      oneOf:
      - "$ref": "#/components/schemas/TextFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/URLFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/EmailFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/NumberFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/RatingFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/DateFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/DurationFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/FileFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/CountFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/RollupFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/LookupFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/PasswordFieldFieldSerializerWithRelatedFields"
      - "$ref": "#/components/schemas/AIFieldFieldSerializerWithRelatedFields"
      discriminator:
        propertyName: type
        mapping:
          text: "#/components/schemas/TextFieldFieldSerializerWithRelatedFields"
          long_text: "#/components/schemas/LongTextFieldFieldSerializerWithRelatedFields"
          url: "#/components/schemas/URLFieldFieldSerializerWithRelatedFields"
          email: "#/components/schemas/EmailFieldFieldSerializerWithRelatedFields"
          number: "#/components/schemas/NumberFieldFieldSerializerWithRelatedFields"
          rating: "#/components/schemas/RatingFieldFieldSerializerWithRelatedFields"
          boolean: "#/components/schemas/BooleanFieldFieldSerializerWithRelatedFields"
          date: "#/components/schemas/DateFieldFieldSerializerWithRelatedFields"
          last_modified: "#/components/schemas/LastModifiedFieldFieldSerializerWithRelatedFields"
          last_modified_by: "#/components/schemas/LastModifiedByFieldFieldSerializerWithRelatedFields"
          created_on: "#/components/schemas/CreatedOnFieldFieldSerializerWithRelatedFields"
          created_by: "#/components/schemas/CreatedByFieldFieldSerializerWithRelatedFields"
          duration: "#/components/schemas/DurationFieldFieldSerializerWithRelatedFields"
          link_row: "#/components/schemas/LinkRowFieldFieldSerializerWithRelatedFields"
          file: "#/components/schemas/FileFieldFieldSerializerWithRelatedFields"
          single_select: "#/components/schemas/SingleSelectFieldFieldSerializerWithRelatedFields"
          multiple_select: "#/components/schemas/MultipleSelectFieldFieldSerializerWithRelatedFields"
          phone_number: "#/components/schemas/PhoneNumberFieldFieldSerializerWithRelatedFields"
          formula: "#/components/schemas/FormulaFieldFieldSerializerWithRelatedFields"
          count: "#/components/schemas/CountFieldFieldSerializerWithRelatedFields"
          rollup: "#/components/schemas/RollupFieldFieldSerializerWithRelatedFields"
          lookup: "#/components/schemas/LookupFieldFieldSerializerWithRelatedFields"
          multiple_collaborators: "#/components/schemas/MultipleCollaboratorsFieldFieldSerializerWithRelatedFields"
          uuid: "#/components/schemas/UUIDFieldFieldSerializerWithRelatedFields"
          autonumber: "#/components/schemas/AutonumberFieldFieldSerializerWithRelatedFields"
          password: "#/components/schemas/PasswordFieldFieldSerializerWithRelatedFields"
          ai: "#/components/schemas/AIFieldFieldSerializerWithRelatedFields"
    FieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    FileExporterOptions:
      type: object
      properties:
        view_id:
          type: integer
          minimum: 0
          nullable: true
          description: 'Optional: The view for this table to export using its filters,
            sorts and other view specific settings.'
        exporter_type:
          allOf:
          - "$ref": "#/components/schemas/ExporterTypeEnum"
          description: |-
            The file type to export to.

            * `csv` - csv
            * `json` - json
            * `xml` - xml
            * `excel` - excel
            * `file` - file
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        filters:
          allOf:
          - "$ref": "#/components/schemas/PublicViewFilters"
          nullable: true
          description: "A JSON serialized string containing the filter tree to apply
            to this view. The filter tree is a nested structure containing the filters
            that need to be applied. \n\nAn example of a valid filter tree is the
            following:`{\"filter_type\": \"AND\", \"filters\": [{\"field\": 1, \"type\":
            \"equal\", \"value\": \"test\"}]}`. The `field` value must be the ID of
            the field to filter on, or the name of the field if `user_field_names`
            is true.\n\nThe following filters are available: equal, not_equal, filename_contains,
            files_lower_than, has_file_type, contains, contains_not, contains_word,
            doesnt_contain_word, length_is_lower_than, higher_than, higher_than_or_equal,
            lower_than, lower_than_or_equal, is_even_and_whole, date_equal, date_before,
            date_before_or_equal, date_after_days_ago, date_after, date_after_or_equal,
            date_not_equal, date_equals_today, date_before_today, date_after_today,
            date_within_days, date_within_weeks, date_within_months, date_equals_days_ago,
            date_equals_months_ago, date_equals_years_ago, date_equals_week, date_equals_month,
            date_equals_day_of_month, date_equals_year, date_is, date_is_not, date_is_before,
            date_is_on_or_before, date_is_after, date_is_on_or_after, date_is_within,
            single_select_equal, single_select_not_equal, single_select_is_any_of,
            single_select_is_none_of, link_row_has, link_row_has_not, link_row_contains,
            link_row_not_contains, boolean, empty, not_empty, multiple_select_has,
            multiple_select_has_not, multiple_collaborators_has, multiple_collaborators_has_not,
            user_is, user_is_not, has_value_equal, has_not_value_equal, has_value_contains,
            has_not_value_contains, has_value_contains_word, has_not_value_contains_word,
            has_value_length_is_lower_than, has_all_values_equal, has_empty_value,
            has_not_empty_value, has_any_select_option_equal, has_none_select_option_equal,
            has_value_lower, has_value_lower_or_equal, has_value_higher, has_value_higher_or_equal,
            has_not_value_higher_or_equal, has_not_value_higher, has_not_value_lower_or_equal,
            has_not_value_lower, has_date_equal, has_not_date_equal, has_date_before,
            has_not_date_before, has_date_on_or_before, has_not_date_on_or_before,
            has_date_on_or_after, has_not_date_on_or_after, has_date_after, has_not_date_after,
            has_date_within, has_not_date_within.\n\n**Please note that if this parameter
            is provided, all other `filter__{field}__{filter}` will be ignored, as
            well as the `filter_type` parameter.**"
        order_by:
          type: string
          nullable: true
          description: Optionally the rows can be ordered by provided field ids separated
            by comma. By default a field is ordered in ascending (A-Z) order, but
            by prepending the field with a '-' it can be ordered descending (Z-A).
        fields:
          type: array
          items:
            type: integer
          nullable: true
          description: List of field IDs that must be included in the export, in the
            desired order.
        organize_files:
          type: boolean
          default: true
          description: Whether or not to group files by row id in the export.
      required:
      - exporter_type
    FileFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    FileFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    FileFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    FileFieldResponse:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        visible_name:
          type: string
        name:
          type: string
        size:
          type: integer
        mime_type:
          type: string
        is_image:
          type: boolean
        image_width:
          type: integer
        image_height:
          type: integer
        uploaded_at:
          type: string
          format: date-time
      required:
      - image_height
      - image_width
      - is_image
      - mime_type
      - name
      - size
      - thumbnails
      - uploaded_at
      - url
      - visible_name
    FileFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    FileImportJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
      required:
      - type
    FileImportJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        database_id:
          type: integer
          description: Database id where the table will be created.
        name:
          type: string
          description: The name of the new table.
          maxLength: 255
        table_id:
          type: integer
          description: Table id where the data will be imported.
        first_row_header:
          type: boolean
          default: false
        report:
          allOf:
          - "$ref": "#/components/schemas/Report"
          description: Import error report.
      required:
      - database_id
      - id
      - progress_percentage
      - report
      - state
      - type
    FileImportJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        database_id:
          type: integer
          description: Database id where the table will be created.
        name:
          type: string
          description: The name of the new table.
          maxLength: 255
        table_id:
          type: integer
          description: Table id where the data will be imported.
        first_row_header:
          type: boolean
          default: false
        report:
          allOf:
          - "$ref": "#/components/schemas/Report"
          description: Import error report.
      required:
      - database_id
      - id
      - progress_percentage
      - report
      - state
      - type
    FilterActionTypeEnum:
      enum:
      - create_group
      - delete_group
      - update_group
      - order_groups
      - create_application
      - update_application
      - delete_application
      - order_applications
      - duplicate_application
      - install_template
      - create_group_invitation
      - delete_group_invitation
      - accept_group_invitation
      - reject_group_invitation
      - update_group_invitation_permissions
      - leave_group
      - create_initial_workspace
      - export_applications
      - import_applications
      - create_snapshot
      - delete_snapshot
      - restore_snapshot
      - empty_trash
      - restore_from_trash
      - create_user
      - update_user
      - schedule_user_deletion
      - cancel_user_deletion
      - sign_in_user
      - change_user_password
      - send_reset_user_password
      - reset_user_password
      - send_verify_email
      - verify_email
      - create_db_token
      - update_db_token_name
      - update_db_token_permissions
      - rotate_db_token_key
      - delete_db_token_key
      - create_webhook
      - delete_webhook
      - update_webhook
      - export_table
      - import_database_from_airtable
      - create_table
      - delete_table
      - order_tables
      - update_table
      - duplicate_table
      - create_row
      - create_rows
      - import_rows
      - delete_row
      - delete_rows
      - move_row
      - update_row
      - update_rows
      - create_view
      - duplicate_view
      - delete_view
      - order_views
      - update_view
      - create_view_filter
      - update_view_filter
      - delete_view_filter
      - create_view_sort
      - update_view_sort
      - delete_view_sort
      - create_view_group
      - update_view_group
      - delete_view_group
      - submit_form
      - rotate_view_slug
      - update_view_field_options
      - create_decoration
      - update_decoration
      - delete_decoration
      - create_view_filter_group
      - update_view_filter_group
      - delete_view_filter_group
      - create_data_sync_table
      - update_data_sync_table
      - sync_data_sync_table
      - create_field
      - delete_field
      - update_field
      - duplicate_field
      - change_primary_field
      - create_widget
      - update_widget
      - delete_widget
      - update_dashboard_data_source
      - generate_formula_with_ai
      - create_row_comment
      - delete_row_comment
      - update_row_comment
      - rotate_calendar_ical_view_slug
      - create_team
      - update_team
      - delete_team
      - create_team_subject
      - delete_team_subject
      - batch_assign_role
      - update_periodic_data_sync_interval
      type: string
      description: |-
        * `create_group` - create_group
        * `delete_group` - delete_group
        * `update_group` - update_group
        * `order_groups` - order_groups
        * `create_application` - create_application
        * `update_application` - update_application
        * `delete_application` - delete_application
        * `order_applications` - order_applications
        * `duplicate_application` - duplicate_application
        * `install_template` - install_template
        * `create_group_invitation` - create_group_invitation
        * `delete_group_invitation` - delete_group_invitation
        * `accept_group_invitation` - accept_group_invitation
        * `reject_group_invitation` - reject_group_invitation
        * `update_group_invitation_permissions` - update_group_invitation_permissions
        * `leave_group` - leave_group
        * `create_initial_workspace` - create_initial_workspace
        * `export_applications` - export_applications
        * `import_applications` - import_applications
        * `create_snapshot` - create_snapshot
        * `delete_snapshot` - delete_snapshot
        * `restore_snapshot` - restore_snapshot
        * `empty_trash` - empty_trash
        * `restore_from_trash` - restore_from_trash
        * `create_user` - create_user
        * `update_user` - update_user
        * `schedule_user_deletion` - schedule_user_deletion
        * `cancel_user_deletion` - cancel_user_deletion
        * `sign_in_user` - sign_in_user
        * `change_user_password` - change_user_password
        * `send_reset_user_password` - send_reset_user_password
        * `reset_user_password` - reset_user_password
        * `send_verify_email` - send_verify_email
        * `verify_email` - verify_email
        * `create_db_token` - create_db_token
        * `update_db_token_name` - update_db_token_name
        * `update_db_token_permissions` - update_db_token_permissions
        * `rotate_db_token_key` - rotate_db_token_key
        * `delete_db_token_key` - delete_db_token_key
        * `create_webhook` - create_webhook
        * `delete_webhook` - delete_webhook
        * `update_webhook` - update_webhook
        * `export_table` - export_table
        * `import_database_from_airtable` - import_database_from_airtable
        * `create_table` - create_table
        * `delete_table` - delete_table
        * `order_tables` - order_tables
        * `update_table` - update_table
        * `duplicate_table` - duplicate_table
        * `create_row` - create_row
        * `create_rows` - create_rows
        * `import_rows` - import_rows
        * `delete_row` - delete_row
        * `delete_rows` - delete_rows
        * `move_row` - move_row
        * `update_row` - update_row
        * `update_rows` - update_rows
        * `create_view` - create_view
        * `duplicate_view` - duplicate_view
        * `delete_view` - delete_view
        * `order_views` - order_views
        * `update_view` - update_view
        * `create_view_filter` - create_view_filter
        * `update_view_filter` - update_view_filter
        * `delete_view_filter` - delete_view_filter
        * `create_view_sort` - create_view_sort
        * `update_view_sort` - update_view_sort
        * `delete_view_sort` - delete_view_sort
        * `create_view_group` - create_view_group
        * `update_view_group` - update_view_group
        * `delete_view_group` - delete_view_group
        * `submit_form` - submit_form
        * `rotate_view_slug` - rotate_view_slug
        * `update_view_field_options` - update_view_field_options
        * `create_decoration` - create_decoration
        * `update_decoration` - update_decoration
        * `delete_decoration` - delete_decoration
        * `create_view_filter_group` - create_view_filter_group
        * `update_view_filter_group` - update_view_filter_group
        * `delete_view_filter_group` - delete_view_filter_group
        * `create_data_sync_table` - create_data_sync_table
        * `update_data_sync_table` - update_data_sync_table
        * `sync_data_sync_table` - sync_data_sync_table
        * `create_field` - create_field
        * `delete_field` - delete_field
        * `update_field` - update_field
        * `duplicate_field` - duplicate_field
        * `change_primary_field` - change_primary_field
        * `create_widget` - create_widget
        * `update_widget` - update_widget
        * `delete_widget` - delete_widget
        * `update_dashboard_data_source` - update_dashboard_data_source
        * `generate_formula_with_ai` - generate_formula_with_ai
        * `create_row_comment` - create_row_comment
        * `delete_row_comment` - delete_row_comment
        * `update_row_comment` - update_row_comment
        * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug
        * `create_team` - create_team
        * `update_team` - update_team
        * `delete_team` - delete_team
        * `create_team_subject` - create_team_subject
        * `delete_team_subject` - delete_team_subject
        * `batch_assign_role` - batch_assign_role
        * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval
    FooterElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
      required:
      - order
      - type
    FooterElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    FooterElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    FooterElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
    FormContainerElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        submit_button_label:
          type: string
          default: ''
        reset_initial_values_post_submission:
          type: boolean
          description: Whether to reset the form to using its initial values after
            a successful form submission.
      required:
      - order
      - type
    FormContainerElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        submit_button_label:
          type: string
          default: ''
        reset_initial_values_post_submission:
          type: boolean
          description: Whether to reset the form to using its initial values after
            a successful form submission.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    FormContainerElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        submit_button_label:
          type: string
          default: ''
        reset_initial_values_post_submission:
          type: boolean
          description: Whether to reset the form to using its initial values after
            a successful form submission.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    FormContainerElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        submit_button_label:
          type: string
          default: ''
        reset_initial_values_post_submission:
          type: boolean
          description: Whether to reset the form to using its initial values after
            a successful form submission.
    FormViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/TypeBc4Enum"
        ownership_type:
          allOf:
          - "$ref": "#/components/schemas/OwnershipTypeEnum"
          default: collaborative
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - "$ref": "#/components/schemas/Mode51eEnum"
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        cover_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The cover image that must be displayed at the top of the form.
        logo_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The logo image that must be displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        submit_action:
          allOf:
          - "$ref": "#/components/schemas/SubmitActionEnum"
          description: |-
            The action that must be performed after the visitor has filled out the form.

            * `MESSAGE` - Message
            * `REDIRECT` - Redirect
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be
            shown to the visitor after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          maxLength: 2000
        receive_notification_on_submit:
          type: boolean
          readOnly: true
          description: A boolean indicating if the current user should be notified
            when the form is submitted.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - receive_notification_on_submit
      - slug
      - type
    FormViewFieldOptions:
      type: object
      properties:
        name:
          type: string
          description: By default, the name of the related field will be shown to
            the visitor. Optionally another name can be used by setting this name.
          maxLength: 255
        description:
          type: string
          description: If provided, then this value be will be shown under the field
            name.
        enabled:
          type: boolean
          description: Indicates whether the field is included in the form.
        required:
          type: boolean
          description: Indicates whether the field is required for the visitor to
            fill out.
        show_when_matching_conditions:
          type: boolean
          description: Indicates whether this field is visible when the conditions
            are met.
        condition_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all (AND) or any (OR) of the conditions should match before shown.

            * `AND` - And
            * `OR` - Or
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the form. Lower value is first.
        conditions:
          type: array
          items:
            "$ref": "#/components/schemas/FormViewFieldOptionsCondition"
        condition_groups:
          type: array
          items:
            "$ref": "#/components/schemas/FormViewFieldOptionsConditionGroup"
        field_component:
          type: string
          description: Indicates which field input component is used in the form.
            The value is only used in the frontend, and can differ per field.
          maxLength: 32
        include_all_select_options:
          type: boolean
          description: Indicates whether all fields must be included. Only works if
            the related field type can have select options.
        allowed_select_options:
          type: array
          items:
            type: integer
    FormViewFieldOptionsCondition:
      type: object
      properties:
        id:
          type: integer
        field:
          type: integer
        type:
          type: string
          description: 'Indicates how the field''s value must be compared to the filter''s
            value. The filter is always in this order `field` `type` `value` (example:
            `field_1` `contains` `Test`).'
          maxLength: 48
        value:
          type: string
          description: The filter value that must be compared to the field's value.
        group:
          type: integer
          nullable: true
      required:
      - field
      - id
      - type
    FormViewFieldOptionsConditionGroup:
      type: object
      properties:
        id:
          type: integer
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.

            * `AND` - And
            * `OR` - Or
        parent_group:
          type: integer
          nullable: true
      required:
      - id
    FormViewSubmitted:
      type: object
      properties:
        submit_action:
          allOf:
          - "$ref": "#/components/schemas/SubmitActionEnum"
          description: |-
            The action that must be performed after the visitor has filled out the form.

            * `MESSAGE` - Message
            * `REDIRECT` - Redirect
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be
            shown to the visitor after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          maxLength: 2000
        row_id:
          type: integer
      required:
      - row_id
    FormViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - "$ref": "#/components/schemas/Mode51eEnum"
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        cover_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The cover image that must be displayed at the top of the form.
        logo_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The logo image that must be displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        submit_action:
          allOf:
          - "$ref": "#/components/schemas/SubmitActionEnum"
          description: |-
            The action that must be performed after the visitor has filled out the form.

            * `MESSAGE` - Message
            * `REDIRECT` - Redirect
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be
            shown to the visitor after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          maxLength: 2000
        receive_notification_on_submit:
          type: boolean
          readOnly: true
          description: A boolean indicating if the current user should be notified
            when the form is submitted.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - receive_notification_on_submit
      - slug
      - table
      - table_id
      - type
    FormatEnum:
      enum:
      - plain
      - markdown
      type: string
      description: |-
        * `plain` - Plain
        * `markdown` - Markdown
    FormulaFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        formula:
          type: string
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - error
      - formula
      - name
      - nullable
      - type
    FormulaFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        formula:
          type: string
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - available_collaborators
      - error
      - formula
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - select_options
      - table_id
      - type
    FormulaFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        formula:
          type: string
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - available_collaborators
      - error
      - formula
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - select_options
      - table_id
      - type
    FormulaFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        formula:
          type: string
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - error
      - formula
      - nullable
    FormulaTypeEnum:
      enum:
      - invalid
      - text
      - char
      - button
      - link
      - date_interval
      - duration
      - date
      - boolean
      - number
      - array
      - single_select
      - multiple_select
      - single_file
      - url
      - multiple_collaborators
      type: string
      description: |-
        * `invalid` - invalid
        * `text` - text
        * `char` - char
        * `button` - button
        * `link` - link
        * `date_interval` - date_interval
        * `duration` - duration
        * `date` - date
        * `boolean` - boolean
        * `number` - number
        * `array` - array
        * `single_select` - single_select
        * `multiple_select` - multiple_select
        * `single_file` - single_file
        * `url` - url
        * `multiple_collaborators` - multiple_collaborators
    FullHealthCheck:
      type: object
      properties:
        passing:
          type: boolean
          readOnly: true
          description: False if any of the critical service health checks are failing,
            true otherwise.
        checks:
          type: object
          additionalProperties:
            type: string
          readOnly: true
          description: An object keyed by the name of the health check and the value
            being the result.
        celery_queue_size:
          type: integer
          description: The number of enqueued celery tasks.
        celery_export_queue_size:
          type: integer
          description: The number of enqueued celery export worker tasks.
      required:
      - celery_export_queue_size
      - celery_queue_size
      - checks
      - passing
    GalleryViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/TypeBc4Enum"
        ownership_type:
          allOf:
          - "$ref": "#/components/schemas/OwnershipTypeEnum"
          default: collaborative
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown
            as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    GalleryViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the form. Lower value is first.
    GalleryViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown
            as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    GenerateFormulaWithAIRequest:
      type: object
      properties:
        ai_type:
          type: string
          description: The AI model type that must be used when generating the formula.
        ai_model:
          type: string
          description: The AI model that must be used when generating the formula.
        ai_temperature:
          type: number
          format: double
          maximum: 2
          minimum: 0
          nullable: true
          description: Between 0 and 2, adjusts response randomness—lower values yield
            focused answers, while higher values increase creativity.
        ai_prompt:
          type: string
          description: The human readable input used to generate the formula.
          maxLength: 1000
      required:
      - ai_model
      - ai_prompt
      - ai_type
    GenerateFormulaWithAIResponse:
      type: object
      properties:
        formula:
          type: string
          description: The formula generated by the AI.
      required:
      - formula
    GeneratedConditional_colorCreateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9c4Enum"
          description: |-
            The decorator type. This is then interpreted by the frontend to display the decoration.

            * `left_border_color` - left_border_color
            * `background_color` - background_color
        value_provider_type:
          default: ''
          description: "The value provider type that gives the value to the decorator.\n\n*
            `` - \n* `single_select_color` - single_select_color\n* `conditional_color`
            - conditional_color"
          oneOf:
          - "$ref": "#/components/schemas/ValueProviderTypeEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        value_provider_conf:
          allOf:
          - "$ref": "#/components/schemas/ConditionalColorValueProviderConfColors"
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
      required:
      - type
    GeneratedConditional_colorUpdateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9c4Enum"
          description: |-
            The decorator type. This is then interpreted by the frontend to display the decoration.

            * `left_border_color` - left_border_color
            * `background_color` - background_color
        value_provider_type:
          description: "The value provider type that gives the value to the decorator.\n\n*
            `` - \n* `single_select_color` - single_select_color\n* `conditional_color`
            - conditional_color"
          oneOf:
          - "$ref": "#/components/schemas/ValueProviderTypeEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        value_provider_conf:
          allOf:
          - "$ref": "#/components/schemas/ConditionalColorValueProviderConfColors"
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
    GeneratedConditional_colorViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the decoration applies. Each view can have
            his own decorations.
        type:
          type: string
          description: The decorator type. This is then interpreted by the frontend
            to display the decoration.
          maxLength: 255
        value_provider_type:
          type: string
          description: The value provider type that gives the value to the decorator.
          maxLength: 255
        value_provider_conf:
          allOf:
          - "$ref": "#/components/schemas/ConditionalColorValueProviderConfColors"
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
      required:
      - id
    GeneratedSingle_select_colorCreateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9c4Enum"
          description: |-
            The decorator type. This is then interpreted by the frontend to display the decoration.

            * `left_border_color` - left_border_color
            * `background_color` - background_color
        value_provider_type:
          default: ''
          description: "The value provider type that gives the value to the decorator.\n\n*
            `` - \n* `single_select_color` - single_select_color\n* `conditional_color`
            - conditional_color"
          oneOf:
          - "$ref": "#/components/schemas/ValueProviderTypeEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        value_provider_conf:
          allOf:
          - "$ref": "#/components/schemas/SelectColorValueProviderConf"
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
      required:
      - type
    GeneratedSingle_select_colorUpdateViewDecoration:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9c4Enum"
          description: |-
            The decorator type. This is then interpreted by the frontend to display the decoration.

            * `left_border_color` - left_border_color
            * `background_color` - background_color
        value_provider_type:
          description: "The value provider type that gives the value to the decorator.\n\n*
            `` - \n* `single_select_color` - single_select_color\n* `conditional_color`
            - conditional_color"
          oneOf:
          - "$ref": "#/components/schemas/ValueProviderTypeEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        value_provider_conf:
          allOf:
          - "$ref": "#/components/schemas/SelectColorValueProviderConf"
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
    GeneratedSingle_select_colorViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the decoration applies. Each view can have
            his own decorations.
        type:
          type: string
          description: The decorator type. This is then interpreted by the frontend
            to display the decoration.
          maxLength: 255
        value_provider_type:
          type: string
          description: The value provider type that gives the value to the decorator.
          maxLength: 255
        value_provider_conf:
          allOf:
          - "$ref": "#/components/schemas/SelectColorValueProviderConf"
          description: The configuration of the value provider
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
      required:
      - id
    GenerativeAISettings:
      type: object
      properties:
        openai:
          "$ref": "#/components/schemas/OpenAISettings"
        anthropic:
          "$ref": "#/components/schemas/AnthropicSettings"
        mistral:
          "$ref": "#/components/schemas/MistralSettings"
        ollama:
          "$ref": "#/components/schemas/OllamaSettings"
        openrouter:
          "$ref": "#/components/schemas/OpenRouterSettings"
    GitHubAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    GitHubIssuesDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
      - synced_properties
      - table_name
      - type
    GitHubIssuesDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
      - id
      - synced_properties
      - type
    GitHubIssuesDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
      - type
    GitHubIssuesDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        github_issues_owner:
          type: string
          description: The owner of the repository on GitHub.
          maxLength: 255
        github_issues_repo:
          type: string
          description: The name of the repository on GitHub.
          maxLength: 255
      required:
      - github_issues_owner
      - github_issues_repo
    GitLabAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          format: uri
          description: Base URL of the authorization server
          maxLength: 200
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    GitLabIssuesDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
      - synced_properties
      - table_name
      - type
    GitLabIssuesDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
      - id
      - synced_properties
      - type
    GitLabIssuesDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
      - type
    GitLabIssuesDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        gitlab_url:
          type: string
          format: uri
          description: The base URL to your GitLab instance (e.g. https://gitlab.com)
          maxLength: 2000
        gitlab_project_id:
          type: string
          description: The ID of the GitLab project where to sync the issues with.
          maxLength: 255
      required:
      - gitlab_project_id
    GoogleAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    GridViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/TypeBc4Enum"
        ownership_type:
          allOf:
          - "$ref": "#/components/schemas/OwnershipTypeEnum"
          default: collaborative
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        row_identifier_type:
          "$ref": "#/components/schemas/RowIdentifierTypeEnum"
        row_height_size:
          "$ref": "#/components/schemas/RowHeightSizeEnum"
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    GridViewFieldOptions:
      type: object
      properties:
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The width of the table field in the related view.
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the current view.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position that the field has within the view, lowest first.
            If there is another field with the same order value then the field with
            the lowest id must be shown first.
        aggregation_type:
          type: string
          description: 'Indicates how the field value is aggregated. This value is
            different from the `aggregation_raw_type`. The `aggregation_raw_type`
            is the value extracted from the database, while the `aggregation_type`
            can implies further calculations. For example: if you want to compute
            an average, `sum` is going to be the `aggregation_raw_type`, the value
            extracted from database, and `sum / row_count` will be the aggregation
            result displayed to the user. This aggregation_type should be used by
            the client to compute the final value.'
          maxLength: 48
        aggregation_raw_type:
          description: |-
            Indicates how to compute the raw aggregation value from database. This type must be registered in the backend prior to use it.

            * `empty_count` - empty_count
            * `not_empty_count` - not_empty_count
            * `unique_count` - unique_count
            * `min` - min
            * `max` - max
            * `sum` - sum
            * `average` - average
            * `median` - median
            * `decile` - decile
            * `variance` - variance
            * `std_dev` - std_dev
            * `distribution` - distribution
          oneOf:
          - "$ref": "#/components/schemas/AggregationRawTypeEnum"
          - "$ref": "#/components/schemas/BlankEnum"
    GridViewFilter:
      type: object
      properties:
        field_ids:
          type: array
          items:
            type: integer
          description: Only the fields related to the provided ids are added to the
            response. If None are provided all fields will be returned.
        row_ids:
          type: array
          items:
            type: integer
          description: Only rows related to the provided ids are added to the response.
      required:
      - row_ids
    GridViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        row_identifier_type:
          "$ref": "#/components/schemas/RowIdentifierTypeEnum"
        row_height_size:
          "$ref": "#/components/schemas/RowHeightSizeEnum"
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    HeaderElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
      required:
      - order
      - type
    HeaderElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    HeaderElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    HeaderElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        share_type:
          "$ref": "#/components/schemas/ShareTypeEnum"
        pages:
          type: array
          items:
            type: integer
    Heading1FontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    Heading1TextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    Heading2FontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    Heading2TextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    Heading3FontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    Heading3TextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    Heading4FontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    Heading4TextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    Heading5FontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    Heading5TextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    Heading6FontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    Heading6TextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    HeadingElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        level:
          type: integer
          maximum: 6
          minimum: 1
          default: 1
          description: The level of the heading from 1 to 6.
      required:
      - order
      - type
    HeadingElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        level:
          type: integer
          maximum: 6
          minimum: 1
          default: 1
          description: The level of the heading from 1 to 6.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    HeadingElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        level:
          type: integer
          maximum: 6
          minimum: 1
          default: 1
          description: The level of the heading from 1 to 6.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    HeadingElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        level:
          type: integer
          maximum: 6
          minimum: 1
          default: 1
          description: The level of the heading from 1 to 6.
    HubSpotContactsDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
      required:
      - synced_properties
      - table_name
      - type
    HubSpotContactsDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
      required:
      - id
      - synced_properties
      - type
    HubSpotContactsDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
      required:
      - type
    HubSpotContactsDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
    ICalCalendarDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
      - synced_properties
      - table_name
      - type
    ICalCalendarDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
      - id
      - synced_properties
      - type
    ICalCalendarDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
      - type
    ICalCalendarDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        ical_url:
          type: string
          format: uri
          maxLength: 2000
      required:
      - ical_url
    IFrameElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        source_type:
          allOf:
          - "$ref": "#/components/schemas/SourceTypeEnum"
          default: url
        url:
          type: string
          default: ''
          description: A link to the page to embed
        embed:
          type: string
          default: ''
          description: Inline HTML to embed
        height:
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
          description: Height in pixels of the iframe
      required:
      - order
      - type
    IFrameElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        source_type:
          allOf:
          - "$ref": "#/components/schemas/SourceTypeEnum"
          default: url
        url:
          type: string
          default: ''
          description: A link to the page to embed
        embed:
          type: string
          default: ''
          description: Inline HTML to embed
        height:
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
          description: Height in pixels of the iframe
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    IFrameElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        source_type:
          allOf:
          - "$ref": "#/components/schemas/SourceTypeEnum"
          default: url
        url:
          type: string
          default: ''
          description: A link to the page to embed
        embed:
          type: string
          default: ''
          description: Inline HTML to embed
        height:
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
          description: Height in pixels of the iframe
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    IFrameElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        source_type:
          allOf:
          - "$ref": "#/components/schemas/SourceTypeEnum"
          default: url
        url:
          type: string
          default: ''
          description: A link to the page to embed
        embed:
          type: string
          default: ''
          description: Inline HTML to embed
        height:
          type: integer
          maximum: 2000
          minimum: 1
          default: 300
          description: Height in pixels of the iframe
    IdEnum:
      enum:
      - create_group
      - delete_group
      - update_group
      - order_groups
      - create_application
      - update_application
      - delete_application
      - order_applications
      - duplicate_application
      - install_template
      - create_group_invitation
      - delete_group_invitation
      - accept_group_invitation
      - reject_group_invitation
      - update_group_invitation_permissions
      - leave_group
      - create_initial_workspace
      - export_applications
      - import_applications
      - create_snapshot
      - delete_snapshot
      - restore_snapshot
      - empty_trash
      - restore_from_trash
      - create_user
      - update_user
      - schedule_user_deletion
      - cancel_user_deletion
      - sign_in_user
      - change_user_password
      - send_reset_user_password
      - reset_user_password
      - send_verify_email
      - verify_email
      - create_db_token
      - update_db_token_name
      - update_db_token_permissions
      - rotate_db_token_key
      - delete_db_token_key
      - create_webhook
      - delete_webhook
      - update_webhook
      - export_table
      - import_database_from_airtable
      - create_table
      - delete_table
      - order_tables
      - update_table
      - duplicate_table
      - create_row
      - create_rows
      - import_rows
      - delete_row
      - delete_rows
      - move_row
      - update_row
      - update_rows
      - create_view
      - duplicate_view
      - delete_view
      - order_views
      - update_view
      - create_view_filter
      - update_view_filter
      - delete_view_filter
      - create_view_sort
      - update_view_sort
      - delete_view_sort
      - create_view_group
      - update_view_group
      - delete_view_group
      - submit_form
      - rotate_view_slug
      - update_view_field_options
      - create_decoration
      - update_decoration
      - delete_decoration
      - create_view_filter_group
      - update_view_filter_group
      - delete_view_filter_group
      - create_data_sync_table
      - update_data_sync_table
      - sync_data_sync_table
      - create_field
      - delete_field
      - update_field
      - duplicate_field
      - change_primary_field
      - create_widget
      - update_widget
      - delete_widget
      - update_dashboard_data_source
      - generate_formula_with_ai
      - create_row_comment
      - delete_row_comment
      - update_row_comment
      - rotate_calendar_ical_view_slug
      - create_team
      - update_team
      - delete_team
      - create_team_subject
      - delete_team_subject
      - batch_assign_role
      - update_periodic_data_sync_interval
      type: string
      description: |-
        * `create_group` - create_group
        * `delete_group` - delete_group
        * `update_group` - update_group
        * `order_groups` - order_groups
        * `create_application` - create_application
        * `update_application` - update_application
        * `delete_application` - delete_application
        * `order_applications` - order_applications
        * `duplicate_application` - duplicate_application
        * `install_template` - install_template
        * `create_group_invitation` - create_group_invitation
        * `delete_group_invitation` - delete_group_invitation
        * `accept_group_invitation` - accept_group_invitation
        * `reject_group_invitation` - reject_group_invitation
        * `update_group_invitation_permissions` - update_group_invitation_permissions
        * `leave_group` - leave_group
        * `create_initial_workspace` - create_initial_workspace
        * `export_applications` - export_applications
        * `import_applications` - import_applications
        * `create_snapshot` - create_snapshot
        * `delete_snapshot` - delete_snapshot
        * `restore_snapshot` - restore_snapshot
        * `empty_trash` - empty_trash
        * `restore_from_trash` - restore_from_trash
        * `create_user` - create_user
        * `update_user` - update_user
        * `schedule_user_deletion` - schedule_user_deletion
        * `cancel_user_deletion` - cancel_user_deletion
        * `sign_in_user` - sign_in_user
        * `change_user_password` - change_user_password
        * `send_reset_user_password` - send_reset_user_password
        * `reset_user_password` - reset_user_password
        * `send_verify_email` - send_verify_email
        * `verify_email` - verify_email
        * `create_db_token` - create_db_token
        * `update_db_token_name` - update_db_token_name
        * `update_db_token_permissions` - update_db_token_permissions
        * `rotate_db_token_key` - rotate_db_token_key
        * `delete_db_token_key` - delete_db_token_key
        * `create_webhook` - create_webhook
        * `delete_webhook` - delete_webhook
        * `update_webhook` - update_webhook
        * `export_table` - export_table
        * `import_database_from_airtable` - import_database_from_airtable
        * `create_table` - create_table
        * `delete_table` - delete_table
        * `order_tables` - order_tables
        * `update_table` - update_table
        * `duplicate_table` - duplicate_table
        * `create_row` - create_row
        * `create_rows` - create_rows
        * `import_rows` - import_rows
        * `delete_row` - delete_row
        * `delete_rows` - delete_rows
        * `move_row` - move_row
        * `update_row` - update_row
        * `update_rows` - update_rows
        * `create_view` - create_view
        * `duplicate_view` - duplicate_view
        * `delete_view` - delete_view
        * `order_views` - order_views
        * `update_view` - update_view
        * `create_view_filter` - create_view_filter
        * `update_view_filter` - update_view_filter
        * `delete_view_filter` - delete_view_filter
        * `create_view_sort` - create_view_sort
        * `update_view_sort` - update_view_sort
        * `delete_view_sort` - delete_view_sort
        * `create_view_group` - create_view_group
        * `update_view_group` - update_view_group
        * `delete_view_group` - delete_view_group
        * `submit_form` - submit_form
        * `rotate_view_slug` - rotate_view_slug
        * `update_view_field_options` - update_view_field_options
        * `create_decoration` - create_decoration
        * `update_decoration` - update_decoration
        * `delete_decoration` - delete_decoration
        * `create_view_filter_group` - create_view_filter_group
        * `update_view_filter_group` - update_view_filter_group
        * `delete_view_filter_group` - delete_view_filter_group
        * `create_data_sync_table` - create_data_sync_table
        * `update_data_sync_table` - update_data_sync_table
        * `sync_data_sync_table` - sync_data_sync_table
        * `create_field` - create_field
        * `delete_field` - delete_field
        * `update_field` - update_field
        * `duplicate_field` - duplicate_field
        * `change_primary_field` - change_primary_field
        * `create_widget` - create_widget
        * `update_widget` - update_widget
        * `delete_widget` - delete_widget
        * `update_dashboard_data_source` - update_dashboard_data_source
        * `generate_formula_with_ai` - generate_formula_with_ai
        * `create_row_comment` - create_row_comment
        * `delete_row_comment` - delete_row_comment
        * `update_row_comment` - update_row_comment
        * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug
        * `create_team` - create_team
        * `update_team` - update_team
        * `delete_team` - delete_team
        * `create_team_subject` - create_team_subject
        * `delete_team_subject` - delete_team_subject
        * `batch_assign_role` - batch_assign_role
        * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval
    ImageAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    ImageConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        image:
          "$ref": "#/components/schemas/image_constraint"
    ImageConstraintEnum:
      enum:
      - cover
      - contain
      - full-width
      type: string
      description: |-
        * `cover` - Cover
        * `contain` - Contain
        * `full-width` - Full Width
    ImageElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ImageConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        image_source_type:
          "$ref": "#/components/schemas/ImageSourceTypeEnum"
        image_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The image file
        image_url:
          type: string
          description: A link to the image file
          maxLength: 1000
        alt_text:
          type: string
          description: Text that is displayed when the image can't load
      required:
      - order
      - type
    ImageElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ImageConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        image_source_type:
          "$ref": "#/components/schemas/ImageSourceTypeEnum"
        image_file:
          "$ref": "#/components/schemas/UserFile"
        image_url:
          type: string
          default: ''
          description: A link to the image file
        alt_text:
          type: string
          default: ''
          description: Text that is displayed when the image can't load
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ImageElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ImageConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        image_source_type:
          "$ref": "#/components/schemas/ImageSourceTypeEnum"
        image_file:
          "$ref": "#/components/schemas/UserFile"
        image_url:
          type: string
          default: ''
          description: A link to the image file
        alt_text:
          type: string
          default: ''
          description: Text that is displayed when the image can't load
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    ImageElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ImageConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        image_source_type:
          "$ref": "#/components/schemas/ImageSourceTypeEnum"
        image_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The image file
        image_url:
          type: string
          description: A link to the image file
          maxLength: 1000
        alt_text:
          type: string
          description: Text that is displayed when the image can't load
    ImageSourceTypeEnum:
      enum:
      - upload
      - url
      type: string
      description: |-
        * `upload` - Upload
        * `url` - Url
    ImportApplicationsJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        resource_id:
          type: integer
          minimum: 1
          description: The ID of the import resource that contains the applications.
      required:
      - resource_id
      - type
    ImportApplicationsJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        installed_applications: {}
        workspace_id:
          type: integer
        resource:
          "$ref": "#/components/schemas/ImportResource"
      required:
      - id
      - installed_applications
      - progress_percentage
      - resource
      - state
      - type
      - workspace_id
    ImportApplicationsJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        installed_applications: {}
        workspace_id:
          type: integer
        resource:
          "$ref": "#/components/schemas/ImportResource"
      required:
      - id
      - installed_applications
      - progress_percentage
      - resource
      - state
      - type
      - workspace_id
    ImportResource:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        size:
          type: integer
          maximum: 9223372036854776000
          minimum: 0
          format: int64
          description: The size of the resource in bytes.
      required:
      - id
      - name
    InputConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        input:
          "$ref": "#/components/schemas/input_horizontal_padding"
    InputFontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    InputTextElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: This text input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        validation_type:
          allOf:
          - "$ref": "#/components/schemas/ValidationTypeEnum"
          description: |-
            Optionally set the validation type to use when applying form data.

            * `any` - Any
            * `email` - Email
            * `integer` - Integer
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        is_multiline:
          type: boolean
          default: false
          description: Whether this text input is multiline.
        rows:
          type: integer
          maximum: 100
          minimum: 1
          default: 3
          description: Number of rows displayed by the rendered input element
        input_type:
          allOf:
          - "$ref": "#/components/schemas/InputTypeEnum"
          default: text
          description: |-
            The type of the input, not applicable for multiline inputs.

            * `text` - Text
            * `password` - Password
      required:
      - order
      - type
    InputTextElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: This text input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        validation_type:
          allOf:
          - "$ref": "#/components/schemas/ValidationTypeEnum"
          description: |-
            Optionally set the validation type to use when applying form data.

            * `any` - Any
            * `email` - Email
            * `integer` - Integer
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        is_multiline:
          type: boolean
          default: false
          description: Whether this text input is multiline.
        rows:
          type: integer
          maximum: 100
          minimum: 1
          default: 3
          description: Number of rows displayed by the rendered input element
        input_type:
          allOf:
          - "$ref": "#/components/schemas/InputTypeEnum"
          default: text
          description: |-
            The type of the input, not applicable for multiline inputs.

            * `text` - Text
            * `password` - Password
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    InputTextElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: This text input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        validation_type:
          allOf:
          - "$ref": "#/components/schemas/ValidationTypeEnum"
          description: |-
            Optionally set the validation type to use when applying form data.

            * `any` - Any
            * `email` - Email
            * `integer` - Integer
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        is_multiline:
          type: boolean
          default: false
          description: Whether this text input is multiline.
        rows:
          type: integer
          maximum: 100
          minimum: 1
          default: 3
          description: Number of rows displayed by the rendered input element
        input_type:
          allOf:
          - "$ref": "#/components/schemas/InputTypeEnum"
          default: text
          description: |-
            The type of the input, not applicable for multiline inputs.

            * `text` - Text
            * `password` - Password
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    InputTextElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/InputConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        label:
          type: string
          default: ''
          description: The text label for this input
        default_value:
          type: string
          default: ''
          description: This text input's default value.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        validation_type:
          allOf:
          - "$ref": "#/components/schemas/ValidationTypeEnum"
          description: |-
            Optionally set the validation type to use when applying form data.

            * `any` - Any
            * `email` - Email
            * `integer` - Integer
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        is_multiline:
          type: boolean
          default: false
          description: Whether this text input is multiline.
        rows:
          type: integer
          maximum: 100
          minimum: 1
          default: 3
          description: Number of rows displayed by the rendered input element
        input_type:
          allOf:
          - "$ref": "#/components/schemas/InputTypeEnum"
          default: text
          description: |-
            The type of the input, not applicable for multiline inputs.

            * `text` - Text
            * `password` - Password
    InputTypeEnum:
      enum:
      - text
      - password
      type: string
      description: |-
        * `text` - Text
        * `password` - Password
    InstallTemplateJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        workspace_id:
          type: integer
          description: The ID of the workspace where the template will be installed.
        template_id:
          type: integer
          description: The template ID that will be installed.
      required:
      - template_id
      - type
    InstallTemplateJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        workspace:
          allOf:
          - "$ref": "#/components/schemas/Workspace"
          readOnly: true
        template:
          allOf:
          - "$ref": "#/components/schemas/Template"
          readOnly: true
        installed_applications:
          readOnly: true
      required:
      - id
      - installed_applications
      - progress_percentage
      - state
      - template
      - type
      - workspace
    InstallTemplateJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        workspace:
          allOf:
          - "$ref": "#/components/schemas/Workspace"
          readOnly: true
        template:
          allOf:
          - "$ref": "#/components/schemas/Template"
          readOnly: true
        installed_applications:
          readOnly: true
      required:
      - id
      - installed_applications
      - progress_percentage
      - state
      - template
      - type
      - workspace
    InstanceId:
      type: object
      properties:
        instance_id:
          type: string
          readOnly: true
          pattern: "^[-a-zA-Z0-9_]+$"
      required:
      - instance_id
    IntegrationCreateIntegration:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowIntegrationCreateIntegration"
      discriminator:
        propertyName: type
        mapping:
          local_baserow: "#/components/schemas/LocalBaserowIntegrationCreateIntegration"
    IntegrationIntegration:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowIntegrationIntegration"
      discriminator:
        propertyName: type
        mapping:
          local_baserow: "#/components/schemas/LocalBaserowIntegrationIntegration"
    Integration_Service:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRow"
      - "$ref": "#/components/schemas/LocalBaserowListRows"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRows"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRow"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRow"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRows"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: "#/components/schemas/LocalBaserowGetRow"
          local_baserow_list_rows: "#/components/schemas/LocalBaserowListRows"
          local_baserow_aggregate_rows: "#/components/schemas/LocalBaserowAggregateRows"
          local_baserow_upsert_row: "#/components/schemas/LocalBaserowUpsertRow"
          local_baserow_delete_row: "#/components/schemas/LocalBaserowDeleteRow"
          local_baserow_grouped_aggregate_rows: "#/components/schemas/LocalBaserowGroupedAggregateRows"
    Integration_ServiceCreateDataSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowCreateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowListRowsCreateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsCreateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowCreateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowCreateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsCreateDataSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: "#/components/schemas/LocalBaserowGetRowCreateDataSource"
          local_baserow_list_rows: "#/components/schemas/LocalBaserowListRowsCreateDataSource"
          local_baserow_aggregate_rows: "#/components/schemas/LocalBaserowAggregateRowsCreateDataSource"
          local_baserow_upsert_row: "#/components/schemas/LocalBaserowUpsertRowCreateDataSource"
          local_baserow_delete_row: "#/components/schemas/LocalBaserowDeleteRowCreateDataSource"
          local_baserow_grouped_aggregate_rows: "#/components/schemas/LocalBaserowGroupedAggregateRowsCreateDataSource"
    Integration_ServiceDashboardDataSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowListRowsDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsDashboardDataSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: "#/components/schemas/LocalBaserowGetRowDashboardDataSource"
          local_baserow_list_rows: "#/components/schemas/LocalBaserowListRowsDashboardDataSource"
          local_baserow_aggregate_rows: "#/components/schemas/LocalBaserowAggregateRowsDashboardDataSource"
          local_baserow_upsert_row: "#/components/schemas/LocalBaserowUpsertRowDashboardDataSource"
          local_baserow_delete_row: "#/components/schemas/LocalBaserowDeleteRowDashboardDataSource"
          local_baserow_grouped_aggregate_rows: "#/components/schemas/LocalBaserowGroupedAggregateRowsDashboardDataSource"
    Integration_ServiceDataSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowDataSource"
      - "$ref": "#/components/schemas/LocalBaserowListRowsDataSource"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsDataSource"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowDataSource"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowDataSource"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsDataSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: "#/components/schemas/LocalBaserowGetRowDataSource"
          local_baserow_list_rows: "#/components/schemas/LocalBaserowListRowsDataSource"
          local_baserow_aggregate_rows: "#/components/schemas/LocalBaserowAggregateRowsDataSource"
          local_baserow_upsert_row: "#/components/schemas/LocalBaserowUpsertRowDataSource"
          local_baserow_delete_row: "#/components/schemas/LocalBaserowDeleteRowDataSource"
          local_baserow_grouped_aggregate_rows: "#/components/schemas/LocalBaserowGroupedAggregateRowsDataSource"
    Integration_ServicePublicDataSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowPublicDataSource"
      - "$ref": "#/components/schemas/LocalBaserowListRowsPublicDataSource"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsPublicDataSource"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowPublicDataSource"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowPublicDataSource"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsPublicDataSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: "#/components/schemas/LocalBaserowGetRowPublicDataSource"
          local_baserow_list_rows: "#/components/schemas/LocalBaserowListRowsPublicDataSource"
          local_baserow_aggregate_rows: "#/components/schemas/LocalBaserowAggregateRowsPublicDataSource"
          local_baserow_upsert_row: "#/components/schemas/LocalBaserowUpsertRowPublicDataSource"
          local_baserow_delete_row: "#/components/schemas/LocalBaserowDeleteRowPublicDataSource"
          local_baserow_grouped_aggregate_rows: "#/components/schemas/LocalBaserowGroupedAggregateRowsPublicDataSource"
    Integration_ServiceService:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowService"
      - "$ref": "#/components/schemas/LocalBaserowListRowsService"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsService"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowService"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowService"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsService"
      discriminator:
        propertyName: type
        mapping:
          local_baserow_get_row: "#/components/schemas/LocalBaserowGetRowService"
          local_baserow_list_rows: "#/components/schemas/LocalBaserowListRowsService"
          local_baserow_aggregate_rows: "#/components/schemas/LocalBaserowAggregateRowsService"
          local_baserow_upsert_row: "#/components/schemas/LocalBaserowUpsertRowService"
          local_baserow_delete_row: "#/components/schemas/LocalBaserowDeleteRowService"
          local_baserow_grouped_aggregate_rows: "#/components/schemas/LocalBaserowGroupedAggregateRowsService"
    IntervalEnum:
      enum:
      - MANUAL
      - DAILY
      - HOURLY
      type: string
      description: |-
        * `MANUAL` - MANUAL
        * `DAILY` - DAILY
        * `HOURLY` - HOURLY
    JiraIssuesDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - jira_url
      - jira_username
      - synced_properties
      - table_name
      - type
    JiraIssuesDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - id
      - jira_url
      - jira_username
      - synced_properties
      - type
    JiraIssuesDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - jira_url
      - jira_username
      - type
    JiraIssuesDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        jira_url:
          type: string
          format: uri
          description: The base URL of your Jira instance (e.g., https://your-domain.atlassian.net).
          maxLength: 2000
        jira_project_key:
          type: string
          description: The project key of the Jira project (e.g., PROJ).
          maxLength: 255
        jira_username:
          type: string
          description: The username of the Jira account used to authenticate.
          maxLength: 255
      required:
      - jira_url
      - jira_username
    Job:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
      required:
      - id
      - progress_percentage
      - state
      - type
    Job_TypeCreateJob:
      oneOf:
      - "$ref": "#/components/schemas/DuplicateApplicationJobCreateJob"
      - "$ref": "#/components/schemas/InstallTemplateJobCreateJob"
      - "$ref": "#/components/schemas/CreateSnapshotJobCreateJob"
      - "$ref": "#/components/schemas/RestoreSnapshotJobCreateJob"
      - "$ref": "#/components/schemas/ExportApplicationsJobCreateJob"
      - "$ref": "#/components/schemas/ImportApplicationsJobCreateJob"
      - "$ref": "#/components/schemas/AirtableImportJobCreateJob"
      - "$ref": "#/components/schemas/FileImportJobCreateJob"
      - "$ref": "#/components/schemas/DuplicateTableJobCreateJob"
      - "$ref": "#/components/schemas/DuplicateFieldJobCreateJob"
      - "$ref": "#/components/schemas/SyncDataSyncTableJobCreateJob"
      - "$ref": "#/components/schemas/DuplicatePageJobCreateJob"
      - "$ref": "#/components/schemas/PublishDomainJobCreateJob"
      - "$ref": "#/components/schemas/AuditLogExportJobCreateJob"
      discriminator:
        propertyName: type
        mapping:
          duplicate_application: "#/components/schemas/DuplicateApplicationJobCreateJob"
          install_template: "#/components/schemas/InstallTemplateJobCreateJob"
          create_snapshot: "#/components/schemas/CreateSnapshotJobCreateJob"
          restore_snapshot: "#/components/schemas/RestoreSnapshotJobCreateJob"
          export_applications: "#/components/schemas/ExportApplicationsJobCreateJob"
          import_applications: "#/components/schemas/ImportApplicationsJobCreateJob"
          airtable: "#/components/schemas/AirtableImportJobCreateJob"
          file_import: "#/components/schemas/FileImportJobCreateJob"
          duplicate_table: "#/components/schemas/DuplicateTableJobCreateJob"
          duplicate_field: "#/components/schemas/DuplicateFieldJobCreateJob"
          sync_data_sync_table: "#/components/schemas/SyncDataSyncTableJobCreateJob"
          duplicate_page: "#/components/schemas/DuplicatePageJobCreateJob"
          publish_domain: "#/components/schemas/PublishDomainJobCreateJob"
          audit_log_export: "#/components/schemas/AuditLogExportJobCreateJob"
    Job_TypeJob:
      oneOf:
      - "$ref": "#/components/schemas/DuplicateApplicationJobJob"
      - "$ref": "#/components/schemas/InstallTemplateJobJob"
      - "$ref": "#/components/schemas/CreateSnapshotJobJob"
      - "$ref": "#/components/schemas/RestoreSnapshotJobJob"
      - "$ref": "#/components/schemas/ExportApplicationsJobJob"
      - "$ref": "#/components/schemas/ImportApplicationsJobJob"
      - "$ref": "#/components/schemas/AirtableImportJobJob"
      - "$ref": "#/components/schemas/FileImportJobJob"
      - "$ref": "#/components/schemas/DuplicateTableJobJob"
      - "$ref": "#/components/schemas/DuplicateFieldJobJob"
      - "$ref": "#/components/schemas/SyncDataSyncTableJobJob"
      - "$ref": "#/components/schemas/DuplicatePageJobJob"
      - "$ref": "#/components/schemas/PublishDomainJobJob"
      - "$ref": "#/components/schemas/AuditLogExportJobJob"
      discriminator:
        propertyName: type
        mapping:
          duplicate_application: "#/components/schemas/DuplicateApplicationJobJob"
          install_template: "#/components/schemas/InstallTemplateJobJob"
          create_snapshot: "#/components/schemas/CreateSnapshotJobJob"
          restore_snapshot: "#/components/schemas/RestoreSnapshotJobJob"
          export_applications: "#/components/schemas/ExportApplicationsJobJob"
          import_applications: "#/components/schemas/ImportApplicationsJobJob"
          airtable: "#/components/schemas/AirtableImportJobJob"
          file_import: "#/components/schemas/FileImportJobJob"
          duplicate_table: "#/components/schemas/DuplicateTableJobJob"
          duplicate_field: "#/components/schemas/DuplicateFieldJobJob"
          sync_data_sync_table: "#/components/schemas/SyncDataSyncTableJobJob"
          duplicate_page: "#/components/schemas/DuplicatePageJobJob"
          publish_domain: "#/components/schemas/PublishDomainJobJob"
          audit_log_export: "#/components/schemas/AuditLogExportJobJob"
    KanbanViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/TypeBc4Enum"
        ownership_type:
          allOf:
          - "$ref": "#/components/schemas/OwnershipTypeEnum"
          default: collaborative
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown
            as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    KanbanViewExampleResponse:
      type: object
      properties:
        rows:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/KanbanViewExampleResponseStack"
          description: Every select option related to the view's single select field
            can have its own entry like this.
        field_options:
          type: array
          items:
            "$ref": "#/components/schemas/KanbanViewFieldOptions"
        row_metadata:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/RowMetadata"
          description: An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata and
            will not be present as a key if so.
      required:
      - field_options
      - rows
    KanbanViewExampleResponseStack:
      type: object
      properties:
        count:
          type: integer
          description: The total count of rows that are included in this group.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
          description: All the rows that belong in this group related with the provided
            `limit` and `offset`.
      required:
      - count
      - results
    KanbanViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the view. Lower value is first.
    KanbanViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown
            as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    LabelFontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    LastModifiedByFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    LastModifiedByFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LastModifiedByFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          description: A list of all the available collaborators.
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LastModifiedByFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    LastModifiedFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: "('A UTC offset in minutes to add to all the field datetimes
            values.',)"
      required:
      - type
    LastModifiedFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LastModifiedFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LastModifiedFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        date_format:
          allOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
        date_include_time:
          type: boolean
          description: Indicates if the field also includes a time.
        date_time_format:
          allOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
        date_show_tzinfo:
          type: boolean
          description: Indicates if the timezone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_force_timezone_offset:
          type: integer
          nullable: true
          description: "('A UTC offset in minutes to add to all the field datetimes
            values.',)"
    License:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        license_id:
          type: string
          description: Unique identifier of the license.
        is_active:
          type: boolean
          description: Indicates if the backend deems the license valid.
        last_check:
          type: string
          format: date-time
          nullable: true
        valid_from:
          type: string
          format: date-time
          description: From which timestamp the license becomes active.
        valid_through:
          type: string
          format: date-time
          description: Until which timestamp the license is active.
        free_users_count:
          type: integer
          readOnly: true
          description: The amount of free users that are currently using the license.
        seats_taken:
          type: integer
          readOnly: true
          description: The amount of users that are currently using the license.
        seats:
          type: integer
          description: The maximum amount of users that can use the license.
        application_users_taken:
          type: integer
          readOnly: true
          description: The amount of application builder users used so far in this
            license.
        application_users:
          type: integer
          description: The amount of application builder users permitted in this license.
        product_code:
          type: string
          description: The product code that indicates what the license unlocks.
        issued_on:
          type: string
          format: date-time
          description: The date when the license was issued. It could be that a new
            license is issued with the same `license_id` because it was updated. In
            that case, the one that has been issued last should be used.
        issued_to_email:
          type: string
          format: email
          description: Indicates to which email address the license has been issued.
        issued_to_name:
          type: string
          description: Indicates to whom the license has been issued.
      required:
      - application_users
      - application_users_taken
      - free_users_count
      - id
      - is_active
      - issued_on
      - issued_to_email
      - issued_to_name
      - license_id
      - product_code
      - seats
      - seats_taken
      - valid_from
      - valid_through
    LicenseUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - id
    LicenseUserLookup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        value:
          type: string
          description: The name and the email address of the user.
          readOnly: true
      required:
      - id
      - value
    LicenseWithUsers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        license_id:
          type: string
          description: Unique identifier of the license.
        is_active:
          type: boolean
          description: Indicates if the backend deems the license valid.
        last_check:
          type: string
          format: date-time
          nullable: true
        valid_from:
          type: string
          format: date-time
          description: From which timestamp the license becomes active.
        valid_through:
          type: string
          format: date-time
          description: Until which timestamp the license is active.
        free_users_count:
          type: integer
          readOnly: true
          description: The amount of free users that are currently using the license.
        seats_taken:
          type: integer
          readOnly: true
          description: The amount of users that are currently using the license.
        seats:
          type: integer
          description: The maximum amount of users that can use the license.
        application_users_taken:
          type: integer
          readOnly: true
          description: The amount of application builder users used so far in this
            license.
        application_users:
          type: integer
          description: The amount of application builder users permitted in this license.
        product_code:
          type: string
          description: The product code that indicates what the license unlocks.
        issued_on:
          type: string
          format: date-time
          description: The date when the license was issued. It could be that a new
            license is issued with the same `license_id` because it was updated. In
            that case, the one that has been issued last should be used.
        issued_to_email:
          type: string
          format: email
          description: Indicates to which email address the license has been issued.
        issued_to_name:
          type: string
          description: Indicates to whom the license has been issued.
        users:
          type: array
          items:
            "$ref": "#/components/schemas/LicenseUser"
          readOnly: true
      required:
      - application_users
      - application_users_taken
      - free_users_count
      - id
      - is_active
      - issued_on
      - issued_to_email
      - issued_to_name
      - license_id
      - product_code
      - seats
      - seats_taken
      - users
      - valid_from
      - valid_through
    LinkElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        variant:
          allOf:
          - "$ref": "#/components/schemas/VariantEnum"
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
      required:
      - order
      - type
    LinkElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        variant:
          allOf:
          - "$ref": "#/components/schemas/VariantEnum"
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    LinkElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        variant:
          allOf:
          - "$ref": "#/components/schemas/VariantEnum"
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    LinkElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
        value:
          type: string
          default: ''
          description: The value of the element. Must be an formula.
        variant:
          allOf:
          - "$ref": "#/components/schemas/VariantEnum"
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
    LinkFontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    LinkRowFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_table:
          type: integer
          nullable: true
          description: "(Deprecated) The id of the linked table."
        has_related_field:
          type: boolean
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          default: -1
          description: The ID of the view in the related table where row selection
            must be limited to.
      required:
      - name
      - type
    LinkRowFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_related_field_id:
          type: integer
          nullable: true
          description: The id of the related field.
          readOnly: true
        link_row_table:
          type: integer
          nullable: true
          description: "(Deprecated) The id of the linked table."
        link_row_related_field:
          type: integer
          readOnly: true
          description: "(Deprecated) The id of the related field."
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          description: The ID of the view in the related table where row selection
            must be limited to.
        link_row_table_primary_field:
          type: string
          readOnly: true
          description: The primary field of the table that is linked to.
      required:
      - id
      - immutable_properties
      - immutable_type
      - link_row_related_field
      - link_row_related_field_id
      - link_row_table_primary_field
      - name
      - order
      - read_only
      - table_id
      - type
    LinkRowFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_related_field_id:
          type: integer
          nullable: true
          description: The id of the related field.
          readOnly: true
        link_row_table:
          type: integer
          nullable: true
          description: "(Deprecated) The id of the linked table."
        link_row_related_field:
          type: integer
          readOnly: true
          description: "(Deprecated) The id of the related field."
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          description: The ID of the view in the related table where row selection
            must be limited to.
        link_row_table_primary_field:
          type: string
          readOnly: true
          description: The primary field of the table that is linked to.
      required:
      - id
      - immutable_properties
      - immutable_type
      - link_row_related_field
      - link_row_related_field_id
      - link_row_table_primary_field
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LinkRowFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        link_row_table_id:
          type: integer
          nullable: true
          description: The id of the linked table.
        link_row_table:
          type: integer
          nullable: true
          description: "(Deprecated) The id of the linked table."
        has_related_field:
          type: boolean
        link_row_limit_selection_view_id:
          type: integer
          nullable: true
          default: -1
          description: The ID of the view in the related table where row selection
            must be limited to.
    LinkRowValue:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique identifier of the row in the related table.
        value:
          type: string
          description: The primary field's value as a string of the row in the related
            table.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
      required:
      - id
    LinkTextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    ListDataSyncProperty:
      type: object
      properties:
        unique_primary:
          type: boolean
        key:
          type: string
        name:
          type: string
        field_type:
          type: string
          readOnly: true
        initially_selected:
          type: boolean
      required:
      - field_type
      - initially_selected
      - key
      - name
      - unique_primary
    ListExportWorkspaceApplications:
      type: object
      properties:
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExportApplicationsJobTypeResponse"
      required:
      - results
    ListWorkspaceUsersWithMemberData:
      type: object
      description: |-
        Mixin to a DRF serializer class to raise an exception if data with unknown fields
        is provided to the serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          description: User defined name.
        email:
          type: string
          readOnly: true
          description: User email.
        workspace:
          type: integer
          description: The workspace that the user has access to.
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
        created_on:
          type: string
          format: date-time
          readOnly: true
        user_id:
          type: integer
          description: The user that has access to the workspace.
          readOnly: true
        to_be_deleted:
          type: boolean
          description: True if user account is pending deletion.
        teams:
          type: array
          items:
            "$ref": "#/components/schemas/WorkspaceUserEnterpriseTeam"
          description: 'Enterprise only: a list of team IDs and names, which this
            workspace user belongs to in this workspace.'
        role_uid:
          type: string
          nullable: true
          description: 'Enterprise or advanced only: the uid of the role that is assigned
            to this workspace user in this workspace.'
        highest_role_uid:
          type: string
          nullable: true
          description: 'Enterprise or advanced only: the highest role uid assigned
            to this user in this workspace on anything, including roles from teams.'
      required:
      - created_on
      - email
      - id
      - name
      - to_be_deleted
      - user_id
      - workspace
    LocalBaserowAggregateRows:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
    LocalBaserowAggregateRowsCreateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9b4Enum"
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
            * `local_baserow_delete_row` - local_baserow_delete_row
            * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
        name:
          type: string
          nullable: true
          description: Human name for this data source.
        page_id:
          type: integer
          nullable: true
          description: Page this data source is linked to.
        before_id:
          type: integer
          description: If provided, creates the data_source before the data_source
            with the given id.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
    LocalBaserowAggregateRowsDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        dashboard_id:
          type: integer
          readOnly: true
          description: Dashboard this data source is linked to.
        order:
          type: string
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
      required:
      - context_data
      - context_data_schema
      - dashboard_id
      - id
      - name
      - order
      - schema
      - type
    LocalBaserowAggregateRowsDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
      required:
      - context_data
      - context_data_schema
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowAggregateRowsPublicDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the data source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
      required:
      - context_data
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowAggregateRowsService:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the service.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
      required:
      - context_data
      - context_data_schema
      - id
      - schema
      - type
    LocalBaserowAggregateRowsUpdateDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
    LocalBaserowAggregateRowsUpdateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: The query to apply to the service to narrow the results down.
          maxLength: 225
        field_id:
          type: integer
          nullable: true
          description: The id of the Baserow field we want to aggregate on.
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
    LocalBaserowContextData:
      type: object
      properties:
        databases:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowDatabaseApplication"
      required:
      - databases
    LocalBaserowCreateRowWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_ServiceService"
          description: The service which this workflow action is associated with.
      required:
      - element_id
      - event
      - id
      - order
      - service
      - type
    LocalBaserowCreateRowWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_Service"
          description: The service which this workflow action is associated with.
      required:
      - event
      - id
      - type
    LocalBaserowCreateRowWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_Service"
          description: The service which this workflow action is associated with.
    LocalBaserowDatabaseApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        workspace:
          allOf:
          - "$ref": "#/components/schemas/Workspace"
          description: The workspace that the application belongs to.
        created_on:
          type: string
          format: date-time
          readOnly: true
        tables:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTable"
          description: This field is specific to the `database` application and contains
            an array of tables that are in the database.
        views:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowView"
          description: This field is specific to the `database` application and contains
            an array of views that are in the tables.
      required:
      - created_on
      - id
      - name
      - order
      - tables
      - type
      - views
      - workspace
    LocalBaserowDeleteRow:
      type: object
      properties:
        row_id:
          type: string
          description: A formula for defining the intended row.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
    LocalBaserowDeleteRowCreateDataSource:
      type: object
      description: |-
        This serializer allow to set the type of a data_source and the data_source id
        before which we want to insert the new data_source.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9b4Enum"
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
            * `local_baserow_delete_row` - local_baserow_delete_row
            * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
        name:
          type: string
          nullable: true
          description: Human name for this data source.
        page_id:
          type: integer
          nullable: true
          description: Page this data source is linked to.
        before_id:
          type: integer
          description: If provided, creates the data_source before the data_source
            with the given id.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowDeleteRowDashboardDataSource:
      type: object
      description: |-
        Basic data source serializer mostly for returned values.
        This serializer flatten the service properties so that from
        an API POV only the data source object exists.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        dashboard_id:
          type: integer
          readOnly: true
          description: Dashboard this data source is linked to.
        order:
          type: string
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - dashboard_id
      - id
      - name
      - order
      - schema
      - type
    LocalBaserowDeleteRowDataSource:
      type: object
      description: |-
        Basic data_source serializer mostly for returned values. This serializer flatten the
        service properties so that from an API POV the data_source object only exists.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowDeleteRowPublicDataSource:
      type: object
      description: |-
        Basic data_source serializer mostly for returned values. This serializer flatten the
        service properties so that from an API POV the data_source object only exists.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the data source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowDeleteRowService:
      type: object
      description: Basic service serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the service.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - id
      - schema
      - type
    LocalBaserowDeleteRowUpdateDashboardDataSource:
      type: object
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowDeleteRowUpdateDataSource:
      type: object
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowDeleteRowWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_ServiceService"
          description: The service which this workflow action is associated with.
      required:
      - element_id
      - event
      - id
      - order
      - service
      - type
    LocalBaserowDeleteRowWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_Service"
          description: The service which this workflow action is associated with.
      required:
      - event
      - id
      - type
    LocalBaserowDeleteRowWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_Service"
          description: The service which this workflow action is associated with.
    LocalBaserowGetRow:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
    LocalBaserowGetRowCreateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9b4Enum"
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
            * `local_baserow_delete_row` - local_baserow_delete_row
            * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
        name:
          type: string
          nullable: true
          description: Human name for this data source.
        page_id:
          type: integer
          nullable: true
          description: Page this data source is linked to.
        before_id:
          type: integer
          description: If provided, creates the data_source before the data_source
            with the given id.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowGetRowDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        dashboard_id:
          type: integer
          readOnly: true
          description: Dashboard this data source is linked to.
        order:
          type: string
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - dashboard_id
      - id
      - name
      - order
      - schema
      - type
    LocalBaserowGetRowDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowGetRowPublicDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the data source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowGetRowService:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the service.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - id
      - schema
      - type
    LocalBaserowGetRowUpdateDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowGetRowUpdateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowGroupedAggregateRows:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
    LocalBaserowGroupedAggregateRowsCreateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9b4Enum"
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
            * `local_baserow_delete_row` - local_baserow_delete_row
            * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
        name:
          type: string
          nullable: true
          description: Human name for this data source.
        page_id:
          type: integer
          nullable: true
          description: Page this data source is linked to.
        before_id:
          type: integer
          description: If provided, creates the data_source before the data_source
            with the given id.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
    LocalBaserowGroupedAggregateRowsDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        dashboard_id:
          type: integer
          readOnly: true
          description: Dashboard this data source is linked to.
        order:
          type: string
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
      required:
      - context_data
      - context_data_schema
      - dashboard_id
      - id
      - name
      - order
      - schema
      - type
    LocalBaserowGroupedAggregateRowsDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
      required:
      - context_data
      - context_data_schema
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowGroupedAggregateRowsPublicDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the data source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
      required:
      - context_data
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowGroupedAggregateRowsService:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the service.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
      required:
      - context_data
      - context_data_schema
      - id
      - schema
      - type
    LocalBaserowGroupedAggregateRowsUpdateDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
    LocalBaserowGroupedAggregateRowsUpdateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        aggregation_series:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSeries"
        aggregation_group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationGroupBy"
        aggregation_sorts:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceAggregationSortBy"
    LocalBaserowIntegrationCreateIntegration:
      type: object
      description: |-
        This serializer allow to set the type of an integration and the integration id
        before which we want to insert the new integration.
      properties:
        before_id:
          type: integer
          description: If provided, creates the integration before the integration
            with the given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/Type050Enum"
          description: |-
            The type of the integration.

            * `local_baserow` - local_baserow
        name:
          type: string
          maxLength: 255
        context_data:
          allOf:
          - "$ref": "#/components/schemas/LocalBaserowContextData"
          readOnly: true
        authorized_user:
          allOf:
          - "$ref": "#/components/schemas/SubjectUser"
          readOnly: true
      required:
      - authorized_user
      - context_data
      - name
      - type
    LocalBaserowIntegrationIntegration:
      type: object
      description: Basic integration serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        application_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the integration.
        name:
          type: string
          readOnly: true
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        context_data:
          allOf:
          - "$ref": "#/components/schemas/LocalBaserowContextData"
          readOnly: true
        authorized_user:
          allOf:
          - "$ref": "#/components/schemas/SubjectUser"
          readOnly: true
      required:
      - application_id
      - authorized_user
      - context_data
      - id
      - name
      - order
      - type
    LocalBaserowIntegrationUpdateIntegration:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        context_data:
          allOf:
          - "$ref": "#/components/schemas/LocalBaserowContextData"
          readOnly: true
        authorized_user:
          allOf:
          - "$ref": "#/components/schemas/SubjectUser"
          readOnly: true
      required:
      - authorized_user
      - context_data
    LocalBaserowListRows:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
    LocalBaserowListRowsCreateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9b4Enum"
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
            * `local_baserow_delete_row` - local_baserow_delete_row
            * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
        name:
          type: string
          nullable: true
          description: Human name for this data source.
        page_id:
          type: integer
          nullable: true
          description: Page this data source is linked to.
        before_id:
          type: integer
          description: If provided, creates the data_source before the data_source
            with the given id.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
    LocalBaserowListRowsDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        dashboard_id:
          type: integer
          readOnly: true
          description: Dashboard this data source is linked to.
        order:
          type: string
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
      required:
      - context_data
      - context_data_schema
      - dashboard_id
      - id
      - name
      - order
      - schema
      - type
    LocalBaserowListRowsDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
      required:
      - context_data
      - context_data_schema
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowListRowsPublicDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the data source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
      required:
      - context_data
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowListRowsService:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the service.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
      required:
      - context_data
      - context_data_schema
      - id
      - schema
      - type
    LocalBaserowListRowsUpdateDashboardDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
    LocalBaserowListRowsUpdateDataSource:
      type: object
      description: |-
        A serializer mixin for services which implement the local Baserow filterable mixin.
        It ensures that when serialize the service, *all* filters (including those pointing
        to trashed fields) are serialized.
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        view_id:
          type: integer
          nullable: true
          description: The id of the Baserow view we want the data for.
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        search_query:
          type: string
          description: Any search queries to apply to the service when it is dispatched.
    LocalBaserowPasswordAppAuthProviderAppAuthProvider:
      type: object
      description: Basic app_auth_provider serializer mostly for returned values.
      properties:
        type:
          type: string
          readOnly: true
          description: The type of the app_auth_provider.
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
          maxLength: 255
        password_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as password for the user account.
      required:
      - id
      - type
    LocalBaserowPasswordAppAuthProviderBaseAppAuthProvider:
      type: object
      description: |-
        This serializer allow to set the type of an app_auth_provider and the
        app_auth_provider id before which we want to insert the new app_auth_provider.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type128Enum"
          description: |-
            The type of the app_auth_provider.

            * `local_baserow_password` - local_baserow_password
            * `saml` - saml
            * `openid_connect` - openid_connect
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
        password_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as password for the user account.
      required:
      - type
      - user_source_id
    LocalBaserowTable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_data_sync:
          type: boolean
          description: Whether this table is a data synced table or not.
      required:
      - database_id
      - id
      - is_data_sync
      - name
    LocalBaserowTableDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching
            the filters will be synced.
      required:
      - source_table_id
      - synced_properties
      - table_name
      - type
    LocalBaserowTableDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching
            the filters will be synced.
      required:
      - id
      - source_table_id
      - synced_properties
      - type
    LocalBaserowTableDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching
            the filters will be synced.
      required:
      - source_table_id
      - type
    LocalBaserowTableDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        source_table_id:
          type: integer
          description: The ID of the source table that must be synced.
        source_table_view_id:
          type: integer
          nullable: true
          description: If provided, then only the visible fields and rows matching
            the filters will be synced.
      required:
      - source_table_id
    LocalBaserowTableServiceAggregationGroupBy:
      type: object
      properties:
        order:
          type: integer
          readOnly: true
        field_id:
          type: integer
          nullable: true
      required:
      - field_id
      - order
    LocalBaserowTableServiceAggregationSeries:
      type: object
      properties:
        order:
          type: integer
          readOnly: true
        aggregation_type:
          type: string
          description: The field aggregation type.
          maxLength: 48
        field_id:
          type: integer
          nullable: true
      required:
      - field_id
      - order
    LocalBaserowTableServiceAggregationSortBy:
      type: object
      properties:
        order:
          type: integer
          readOnly: true
        sort_on:
          "$ref": "#/components/schemas/SortOnEnum"
        reference:
          type: string
          maxLength: 255
        direction:
          "$ref": "#/components/schemas/DirectionEnum"
      required:
      - direction
      - order
      - reference
      - sort_on
    LocalBaserowTableServiceFieldMapping:
      type: object
      properties:
        field_id:
          type: integer
          description: The primary key of the associated database table field.
        enabled:
          type: boolean
          description: Indicates whether the field mapping is enabled or not.
        value:
          type: string
      required:
      - enabled
      - field_id
      - value
    LocalBaserowUpdateRowWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_ServiceService"
          description: The service which this workflow action is associated with.
      required:
      - element_id
      - event
      - id
      - order
      - service
      - type
    LocalBaserowUpdateRowWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_Service"
          description: The service which this workflow action is associated with.
      required:
      - event
      - id
      - type
    LocalBaserowUpdateRowWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        service:
          allOf:
          - "$ref": "#/components/schemas/Integration_Service"
          description: The service which this workflow action is associated with.
    LocalBaserowUpsertRow:
      type: object
      properties:
        row_id:
          type: string
          description: A formula for defining the intended row.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
    LocalBaserowUpsertRowCreateDataSource:
      type: object
      description: |-
        This serializer allow to set the type of a data_source and the data_source id
        before which we want to insert the new data_source.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type9b4Enum"
          description: |-
            The type of the service.

            * `local_baserow_get_row` - local_baserow_get_row
            * `local_baserow_list_rows` - local_baserow_list_rows
            * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
            * `local_baserow_upsert_row` - local_baserow_upsert_row
            * `local_baserow_delete_row` - local_baserow_delete_row
            * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
        name:
          type: string
          nullable: true
          description: Human name for this data source.
        page_id:
          type: integer
          nullable: true
          description: Page this data source is linked to.
        before_id:
          type: integer
          description: If provided, creates the data_source before the data_source
            with the given id.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowUpsertRowDashboardDataSource:
      type: object
      description: |-
        Basic data source serializer mostly for returned values.
        This serializer flatten the service properties so that from
        an API POV only the data source object exists.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        dashboard_id:
          type: integer
          readOnly: true
          description: Dashboard this data source is linked to.
        order:
          type: string
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - dashboard_id
      - id
      - name
      - order
      - schema
      - type
    LocalBaserowUpsertRowDataSource:
      type: object
      description: |-
        Basic data_source serializer mostly for returned values. This serializer flatten the
        service properties so that from an API POV the data_source object only exists.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowUpsertRowPublicDataSource:
      type: object
      description: |-
        Basic data_source serializer mostly for returned values. This serializer flatten the
        service properties so that from an API POV the data_source object only exists.
      properties:
        id:
          type: integer
          readOnly: true
          description: Data source id.
        type:
          type: string
          readOnly: true
          description: The type of the data source.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        name:
          type: string
          readOnly: true
          description: Human name for this data source.
        page_id:
          type: integer
          readOnly: true
          description: Page this data source is linked to.
        order:
          type: number
          format: float
          readOnly: true
          description: Lowest first.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the data source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - id
      - name
      - order
      - page_id
      - schema
      - type
    LocalBaserowUpsertRowService:
      type: object
      description: Basic service serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        type:
          type: string
          readOnly: true
          description: The type of the service.
        schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema of the service.
        context_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The context data of the service.
        context_data_schema:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The schema context data of the service.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
      required:
      - context_data
      - context_data_schema
      - id
      - schema
      - type
    LocalBaserowUpsertRowUpdateDashboardDataSource:
      type: object
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowUpsertRowUpdateDataSource:
      type: object
      properties:
        integration_id:
          type: integer
          nullable: true
          description: The id of the Baserow integration we want the data for.
        name:
          type: string
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        field_mappings:
          type: array
          items:
            "$ref": "#/components/schemas/LocalBaserowTableServiceFieldMapping"
          description: The field mapping associated with this service.
        row_id:
          type: string
          description: A formula for defining the intended row.
    LocalBaserowUserSourceBasePublicUserSource:
      type: object
      description: Basic user source serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          readOnly: true
          description: Unique id for this user source.
        type:
          type: string
          readOnly: true
          description: The type of the user_source.
        name:
          type: string
          readOnly: true
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        auth_providers:
          type: array
          items:
            "$ref": "#/components/schemas/App_Auth_ProviderAppAuthProvider"
          description: Auth providers related to this user source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - id
      - name
      - order
      - type
      - uid
    LocalBaserowUserSourceCreateUserSource:
      type: object
      description: |-
        This serializer allow to set the type of an user_source and the user_source id
        before which we want to insert the new user_source.
      properties:
        before_id:
          type: integer
          description: If provided, creates the user_source before the user_source
            with the given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/Type050Enum"
          description: |-
            The type of the user_source.

            * `local_baserow` - local_baserow
        name:
          type: string
          maxLength: 255
        integration_id:
          type: integer
          description: The related integration id.
        auth_providers:
          type: array
          items:
            "$ref": "#/components/schemas/App_Auth_ProviderBaseAppAuthProvider"
          description: Auth providers related to this user source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - integration_id
      - name
      - type
    LocalBaserowUserSourceUpdateUserSource:
      type: object
      description: A serializer to update a user source.
      properties:
        name:
          type: string
          maxLength: 255
        integration_id:
          type: integer
          description: The related integration id.
        auth_providers:
          type: array
          items:
            "$ref": "#/components/schemas/App_Auth_ProviderBaseAppAuthProvider"
          description: Auth providers related to this user source.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
    LocalBaserowUserSourceUserSource:
      type: object
      description: Basic user_source serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        uid:
          type: string
          readOnly: true
          description: Unique id for this user source.
        application_id:
          type: integer
          readOnly: true
        integration_id:
          type: integer
          nullable: true
          description: The Integration used to establish the connection with the service.
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the user_source.
        name:
          type: string
          readOnly: true
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        auth_providers:
          type: array
          items:
            "$ref": "#/components/schemas/App_Auth_ProviderAppAuthProvider"
          description: Auth providers related to this user source.
        user_count:
          type: integer
          readOnly: true
          description: The total number of users in the user source.
        user_count_updated_at:
          type: string
          format: date-time
          readOnly: true
          description: When the last user count took place.
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - application_id
      - id
      - integration_id
      - name
      - order
      - type
      - uid
      - user_count
      - user_count_updated_at
    LocalBaserowUserSourceUserSourceRoles:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        roles:
          type: array
          items:
            type: string
          readOnly: true
        table_id:
          type: integer
          nullable: true
          description: The id of the Baserow table we want the data for.
        email_field_id:
          type: integer
          nullable: true
          description: The id of the field to use as email for the user account.
        name_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user name.
        role_field_id:
          type: integer
          nullable: true
          description: The id of the field that contains the user role.
      required:
      - id
      - roles
    LocalBaserowView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
      - table_id
    LogoutWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
      required:
      - element_id
      - event
      - id
      - order
      - type
    LogoutWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
      required:
      - event
      - id
      - type
    LogoutWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
    LongTextFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
      required:
      - name
      - type
    LongTextFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    LongTextFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    LongTextFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        long_text_enable_rich_text:
          type: boolean
          nullable: true
          description: Enable rich text formatting for the field.
    LookupFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override
            the `through_field_name` parameter if both are provided, however only
            one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to lookup. Will override the `target_field_id` parameter if both are provided,
            however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field
            to lookup.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - error
      - name
      - nullable
      - type
    LookupFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override
            the `through_field_name` parameter if both are provided, however only
            one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to lookup. Will override the `target_field_id` parameter if both are provided,
            however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field
            to lookup.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - available_collaborators
      - error
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - select_options
      - table_id
      - type
    LookupFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          nullable: true
          description: A list of all the available collaborators.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
          readOnly: true
          nullable: true
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override
            the `through_field_name` parameter if both are provided, however only
            one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to lookup. Will override the `target_field_id` parameter if both are provided,
            however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field
            to lookup.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - available_collaborators
      - error
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - select_options
      - table_id
      - type
    LookupFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          readOnly: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to lookup values for. Will override
            the `through_field_name` parameter if both are provided, however only
            one is required.
        through_field_name:
          type: string
          nullable: true
          description: The name of the link row field to lookup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to lookup. Will override the `target_field_id` parameter if both are provided,
            however only one is required.
        target_field_name:
          type: string
          nullable: true
          description: The name of the field in the table linked to by the through_field
            to lookup.
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - error
      - nullable
    MenuElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonAndLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        orientation:
          "$ref": "#/components/schemas/OrientationE5aEnum"
        alignment:
          "$ref": "#/components/schemas/Alignment6bdEnum"
        menu_items:
          type: array
          items:
            "$ref": "#/components/schemas/MenuItem"
      required:
      - order
      - type
    MenuElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonAndLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        orientation:
          "$ref": "#/components/schemas/OrientationE5aEnum"
        alignment:
          "$ref": "#/components/schemas/Alignment6bdEnum"
        menu_items:
          allOf:
          - "$ref": "#/components/schemas/MenuItem"
          readOnly: true
          description: Menu items of the MenuElement.
      required:
      - id
      - menu_items
      - order
      - page_id
      - parent_element_id
      - type
    MenuElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonAndLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        orientation:
          "$ref": "#/components/schemas/OrientationE5aEnum"
        alignment:
          "$ref": "#/components/schemas/Alignment6bdEnum"
        menu_items:
          allOf:
          - "$ref": "#/components/schemas/MenuItem"
          readOnly: true
          description: Menu items of the MenuElement.
      required:
      - id
      - menu_items
      - order
      - page_id
      - parent_element_id
      - type
    MenuElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonAndLinkConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        orientation:
          "$ref": "#/components/schemas/OrientationE5aEnum"
        alignment:
          "$ref": "#/components/schemas/Alignment6bdEnum"
        menu_items:
          type: array
          items:
            "$ref": "#/components/schemas/MenuItem"
    MenuItem:
      type: object
      description: Serializes the MenuItemElement.
      properties:
        id:
          type: integer
          readOnly: true
        variant:
          allOf:
          - "$ref": "#/components/schemas/VariantEnum"
          description: |-
            The variant of the link.

            * `link` - Link
            * `button` - Button
        type:
          allOf:
          - "$ref": "#/components/schemas/MenuItemTypeEnum"
          description: |-
            The type of the Menu Item.

            * `button` - Button
            * `link` - Link
            * `separator` - Separator
            * `spacer` - Spacer
        menu_item_order:
          type: integer
          maximum: 2147483647
          minimum: 0
        uid:
          type: string
          format: uuid
        name:
          type: string
          description: The name of the Menu Item.
          maxLength: 225
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        parent_menu_item:
          type: integer
          nullable: true
          description: The parent MenuItemElement element, if it is a nested item.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
        children:
          type: array
          items:
            type: object
            additionalProperties: {}
          description: A MenuItemElement that is a child of this instance.
      required:
      - id
      - menu_item_order
      - name
    MenuItemTypeEnum:
      enum:
      - button
      - link
      - separator
      - spacer
      type: string
      description: |-
        * `button` - Button
        * `link` - Link
        * `separator` - Separator
        * `spacer` - Spacer
    MistralSettings:
      type: object
      properties:
        models:
          type: array
          items:
            type: string
          description: The models that are enabled for this AI type.
        api_key:
          type: string
          description: The Mistral API key that is used to authenticate with the Mistral
            API.
    Mode51eEnum:
      enum:
      - form
      - survey
      type: string
      description: |-
        * `form` - form
        * `survey` - survey
    Mode884Enum:
      enum:
      - all
      - mentions
      type: string
      description: |-
        * `all` - all
        * `mentions` - mentions
    MultipleCollaboratorsFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        notify_user_when_added:
          type: boolean
      required:
      - name
      - type
    MultipleCollaboratorsFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          description: A list of all the available collaborators.
        notify_user_when_added:
          type: boolean
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    MultipleCollaboratorsFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        available_collaborators:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          readOnly: true
          description: A list of all the available collaborators.
        notify_user_when_added:
          type: boolean
      required:
      - available_collaborators
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    MultipleCollaboratorsFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        notify_user_when_added:
          type: boolean
    MultipleSelectFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
      required:
      - name
      - type
    MultipleSelectFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    MultipleSelectFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    MultipleSelectFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
    NavigationTypeEnum:
      enum:
      - page
      - custom
      type: string
      description: |-
        * `page` - Page
        * `custom` - Custom
    NotificationRecipient:
      type: object
      description: |-
        Serialize notification data along with the recipient information about the
        read status for the given user.
      properties:
        id:
          type: integer
          description: The id of the notification.
        type:
          type: string
          description: The type of notification
        sender:
          allOf:
          - "$ref": "#/components/schemas/Sender"
          description: The user that sent the notification.
        workspace:
          type: string
          readOnly: true
          description: The workspace that the notification is in (if any).
        created_on:
          type: string
          format: date-time
          description: The date and time that the notification was created.
        read:
          type: boolean
          description: 'If True, then the notification has been read by the user. '
        data:
          description: The data associated with the notification.
      required:
      - created_on
      - data
      - id
      - sender
      - type
      - workspace
    NotificationWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        title:
          type: string
          default: ''
          description: The title of the notification. Must be an formula.
        description:
          type: string
          default: ''
          description: The description of the notification. Must be an formula.
      required:
      - element_id
      - event
      - id
      - order
      - type
    NotificationWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        title:
          type: string
          default: ''
          description: The title of the notification. Must be an formula.
        description:
          type: string
          default: ''
          description: The description of the notification. Must be an formula.
      required:
      - event
      - id
      - type
    NotificationWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        title:
          type: string
          default: ''
          description: The title of the notification. Must be an formula.
        description:
          type: string
          default: ''
          description: The description of the notification. Must be an formula.
    NullEnum:
      enum:
      - 
    NumberDecimalPlacesEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      type: integer
      description: |-
        * `0` - 1
        * `1` - 1.0
        * `2` - 1.00
        * `3` - 1.000
        * `4` - 1.0000
        * `5` - 1.00000
        * `6` - 1.000000
        * `7` - 1.0000000
        * `8` - 1.00000000
        * `9` - 1.000000000
        * `10` - 1.0000000000
    NumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        number_decimal_places:
          allOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
      required:
      - name
      - type
    NumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        number_decimal_places:
          allOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    NumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        number_decimal_places:
          allOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    NumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        number_decimal_places:
          allOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
        number_negative:
          type: boolean
          description: Indicates if negative values are allowed.
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 100
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
    NumberSeparatorEnum:
      enum:
      - SPACE_COMMA
      - SPACE_PERIOD
      - COMMA_PERIOD
      - PERIOD_COMMA
      type: string
      description: |-
        * `` - No formatting
        * `SPACE_COMMA` - Space, comma
        * `SPACE_PERIOD` - Space, period
        * `COMMA_PERIOD` - Comma, period
        * `PERIOD_COMMA` - Period, comma
    OllamaSettings:
      type: object
      properties:
        models:
          type: array
          items:
            type: string
          description: The models that are enabled for this AI type.
        host:
          type: string
          description: The host that is used to authenticate with the Ollama API.
    OpenAISettings:
      type: object
      properties:
        models:
          type: array
          items:
            type: string
          description: The models that are enabled for this AI type.
        api_key:
          type: string
          description: The OpenAI API key that is used to authenticate with the OpenAI
            API.
        organization:
          type: string
          description: The organization that the OpenAI API key belongs to.
    OpenApiRoleAssignment:
      type: object
      description: Serializer for RoleAssignment used for the Open API spec
      properties:
        id:
          type: integer
          readOnly: true
        role:
          type: string
          description: The uid of the role assigned to the user or team in the given
            workspace.
        subject:
          allOf:
          - "$ref": "#/components/schemas/OpenApiSubjectField"
          description: The structure of the subject field depends on the subject typereturned
            and will have additional fields accordingly
        subject_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The subject ID.
        scope_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The unique scope ID.
        subject_type:
          allOf:
          - "$ref": "#/components/schemas/SubjectType398Enum"
          description: |-
            The subject type.

            * `auth.User` - auth.User
            * `anonymous` - anonymous
            * `user_source.user` - user_source.user
            * `core.Token` - core.Token
            * `baserow_enterprise.Team` - baserow_enterprise.Team
        scope_type:
          allOf:
          - "$ref": "#/components/schemas/ScopeTypeEnum"
          description: |-
            The type of the scope object. The scope object limit the role assignment to this scope and all its descendants.

            * `core` - core
            * `application` - application
            * `workspace` - workspace
            * `workspace_invitation` - workspace_invitation
            * `snapshot` - snapshot
            * `workspace_user` - workspace_user
            * `integration` - integration
            * `user_source` - user_source
            * `database` - database
            * `database_table` - database_table
            * `database_field` - database_field
            * `database_view` - database_view
            * `database_view_decoration` - database_view_decoration
            * `database_view_sort` - database_view_sort
            * `database_view_group` - database_view_group
            * `database_view_filter` - database_view_filter
            * `database_view_filter_group` - database_view_filter_group
            * `token` - token
            * `builder` - builder
            * `builder_page` - builder_page
            * `builder_element` - builder_element
            * `builder_domain` - builder_domain
            * `builder_data_source` - builder_data_source
            * `builder_workflow_action` - builder_workflow_action
            * `dashboard` - dashboard
            * `dashboard_data_source` - dashboard_data_source
            * `dashboard_widget` - dashboard_widget
            * `team` - team
            * `team_subject` - team_subject
            * `license` - license
      required:
      - id
      - role
      - scope_id
      - scope_type
      - subject
      - subject_id
      - subject_type
    OpenApiSubjectField:
      type: object
      properties:
        id:
          type: integer
      required:
      - id
    OpenIdConnectAppAuthProviderModelAppAuthProvider:
      type: object
      description: Basic app_auth_provider serializer mostly for returned values.
      properties:
        type:
          type: string
          readOnly: true
          description: The type of the app_auth_provider.
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
          maxLength: 255
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          description: The provider base url.
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - id
      - name
      - secret
      - type
    OpenIdConnectAppAuthProviderModelBaseAppAuthProvider:
      type: object
      description: |-
        This serializer allow to set the type of an app_auth_provider and the
        app_auth_provider id before which we want to insert the new app_auth_provider.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type128Enum"
          description: |-
            The type of the app_auth_provider.

            * `local_baserow_password` - local_baserow_password
            * `saml` - saml
            * `openid_connect` - openid_connect
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          description: The provider base url.
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - name
      - secret
      - type
      - user_source_id
    OpenIdConnectAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        name:
          type: string
          maxLength: 255
        base_url:
          type: string
          format: uri
          description: Base URL of the authorization server
          maxLength: 200
        client_id:
          type: string
          description: App ID, or consumer key
          maxLength: 191
        secret:
          type: string
          description: API secret, client secret, or consumer secret
          maxLength: 191
      required:
      - base_url
      - client_id
      - domain
      - id
      - name
      - secret
      - type
    OpenPageWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
      required:
      - element_id
      - event
      - id
      - order
      - type
    OpenPageWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
      required:
      - event
      - id
      - type
    OpenPageWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        navigation_type:
          allOf:
          - "$ref": "#/components/schemas/NavigationTypeEnum"
          description: |-
            The navigation type.

            * `page` - Page
            * `custom` - Custom
        navigate_to_page_id:
          type: integer
          nullable: true
          description: "('Destination page id for this link. If null then we use the
            navigate_to_url property instead.',)"
        navigate_to_url:
          type: string
          default: ''
          description: If no page is selected, this indicate the destination of the
            link.
        page_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The parameters for each parameters of the selected page if
            any.
        query_parameters:
          type: array
          items:
            "$ref": "#/components/schemas/PageParameterValue"
          default: []
          description: The query parameters for each parameter of the selected page
            if any.
        target:
          allOf:
          - "$ref": "#/components/schemas/TargetEnum"
          description: |-
            The target of the link when we click on it.

            * `self` - Self
            * `blank` - Blank
    OpenRouterSettings:
      type: object
      properties:
        models:
          type: array
          items:
            type: string
          description: The models that are enabled for this AI type.
        api_key:
          type: string
          description: The OpenRouter API key that is used to authenticate with the
            OpenAI API.
        organization:
          type: string
          description: The organization that the OpenRouter API key belongs to.
    OptionTypeEnum:
      enum:
      - manual
      - formulas
      type: string
      description: |-
        * `manual` - Manual
        * `formulas` - Formulas
    OrderApplications:
      type: object
      properties:
        application_ids:
          type: array
          items:
            type: integer
          description: Application ids in the desired order.
      required:
      - application_ids
    OrderDomains:
      type: object
      properties:
        domain_ids:
          type: array
          items:
            type: integer
          description: The ids of the domains in the order they are supposed to be
            set in
      required:
      - domain_ids
    OrderEnum:
      enum:
      - ASC
      - DESC
      type: string
      description: |-
        * `ASC` - Ascending
        * `DESC` - Descending
    OrderPages:
      type: object
      properties:
        page_ids:
          type: array
          items:
            type: integer
          description: The ids of the pages in the order they are supposed to be set
            in
      required:
      - page_ids
    OrderTables:
      type: object
      properties:
        table_ids:
          type: array
          items:
            type: integer
          description: Table ids in the desired order.
      required:
      - table_ids
    OrderViews:
      type: object
      properties:
        view_ids:
          type: array
          items:
            type: integer
          description: View ids in the desired order.
          minItems: 1
      required:
      - view_ids
    OrderWorkflowActions:
      type: object
      properties:
        workflow_action_ids:
          type: array
          items:
            type: integer
          description: The ids of the workflow actions in the order they are supposed
            to be set in
        element_id:
          type: integer
          description: The element the workflow actions belong to
      required:
      - workflow_action_ids
    OrderWorkspaces:
      type: object
      properties:
        workspaces:
          type: array
          items:
            type: integer
          description: Workspace ids in the desired order.
      required:
      - workspaces
    OrientationAf4Enum:
      enum:
      - vertical
      - horizontal
      type: string
      description: |-
        * `vertical` - Vertical
        * `horizontal` - Horizontal
    OrientationE5aEnum:
      enum:
      - horizontal
      - vertical
      type: string
      description: |-
        * `horizontal` - Horizontal
        * `vertical` - Vertical
    OwnershipTypeEnum:
      enum:
      - collaborative
      - personal
      type: string
      description: |-
        * `collaborative` - collaborative
        * `personal` - personal
    Page:
      type: object
      description: "\U0001F449 Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicPageSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            "$ref": "#/components/schemas/PathParam"
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        builder_id:
          type: integer
          readOnly: true
        shared:
          type: boolean
          readOnly: true
        visibility:
          allOf:
          - "$ref": "#/components/schemas/VisibilityC5fEnum"
          readOnly: true
          description: |-
            Controls the page's visibility. When set to 'logged-in', the builder's login_page must also be set.

            * `all` - All
            * `logged-in` - Logged In
        role_type:
          allOf:
          - "$ref": "#/components/schemas/RoleTypeEnum"
          readOnly: true
          description: |-
            Role type is used in conjunction with roles to control access to this page.

            * `allow_all` - Allow All
            * `allow_all_except` - Allow All Except
            * `disallow_all_except` - Disallow All Except
        roles:
          readOnly: true
          description: List of user roles that are associated with this page. Used
            in conjunction with role_type.
        query_params:
          type: array
          items:
            "$ref": "#/components/schemas/QueryParam"
      required:
      - builder_id
      - id
      - name
      - order
      - path
      - role_type
      - roles
      - shared
      - visibility
    PageBackgroundModeEnum:
      enum:
      - tile
      - fill
      - fit
      type: string
      description: |-
        * `tile` - Tile
        * `fill` - Fill
        * `fit` - Fit
    PageParameterValue:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
    PaginationSerializerAuditLog:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/AuditLog"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerAuditLogUser:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/AuditLogUser"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerAuditLogWorkspace:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/AuditLogWorkspace"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerExampleRowResponseSerializerWithUserFieldNames:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponseSerializerWithUserFieldNames"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerLicenseUserLookup:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/LicenseUserLookup"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerLinkRowValue:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/LinkRowValue"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerNotificationRecipient:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/NotificationRecipient"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerRowComment:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/RowComment"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerRowHistory:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/RowHistory"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerTrashContents:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/TrashContents"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerUserAdminResponse:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/UserAdminResponse"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GalleryViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
        row_metadata:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/RowMetadata"
          description: An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata and
            will not be present as a key if so.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerWithGridViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GridViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
        row_metadata:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/RowMetadata"
          description: An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata and
            will not be present as a key if so.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/TimelineViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
        row_metadata:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/RowMetadata"
          description: An object keyed by row id with a value being an object containing
            additional metadata about that row. A row might not have metadata and
            will not be present as a key if so.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
      required:
      - count
      - next
      - previous
      - results
    PaginationSerializerWorkspacesAdminResponse:
      type: object
      properties:
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/WorkspacesAdminResponse"
      required:
      - count
      - next
      - previous
      - results
    PasswordAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain (if any) registered with this password provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
      required:
      - id
      - type
    PasswordFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    PasswordFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    PasswordFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    PasswordFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    PatchedAccount:
      type: object
      description: This serializer must be kept in sync with `UserSerializer`.
      properties:
        first_name:
          type: string
          maxLength: 150
          minLength: 2
        language:
          type: string
          description: 'An ISO 639 language code (with optional variant) selected
            by the user. Ex: en-GB.'
          maxLength: 10
          minLength: 2
        email_notification_frequency:
          allOf:
          - "$ref": "#/components/schemas/EmailNotificationFrequencyEnum"
          description: |-
            The maximum frequency at which the user wants to receive email notifications.

            * `instant` - instant
            * `daily` - daily
            * `weekly` - weekly
            * `never` - never
        completed_onboarding:
          type: boolean
          description: Indicates whether the user has completed the onboarding.
        completed_guided_tours:
          type: array
          items:
            type: string
          description: Indicates which guided tour types have been completed.
    PatchedApplicationBaseApplicationUpdatePolymorphic:
      oneOf:
      - "$ref": "#/components/schemas/DatabaseBaseApplicationUpdatePolymorphic"
      - "$ref": "#/components/schemas/BuilderBaseApplicationUpdatePolymorphic"
      - "$ref": "#/components/schemas/DashboardBaseApplicationUpdatePolymorphic"
      discriminator:
        propertyName: type
        mapping:
          database: "#/components/schemas/DatabaseBaseApplicationUpdatePolymorphic"
          builder: "#/components/schemas/BuilderBaseApplicationUpdatePolymorphic"
          dashboard: "#/components/schemas/DashboardBaseApplicationUpdatePolymorphic"
    PatchedBuilder_Workflow_Action_TypeUpdateBuilderWorkflowActions:
      anyOf:
      - "$ref": "#/components/schemas/NotificationWorkflowActionUpdateBuilderWorkflowActions"
      - "$ref": "#/components/schemas/OpenPageWorkflowActionUpdateBuilderWorkflowActions"
      - "$ref": "#/components/schemas/LocalBaserowCreateRowWorkflowActionUpdateBuilderWorkflowActions"
      - "$ref": "#/components/schemas/LocalBaserowUpdateRowWorkflowActionUpdateBuilderWorkflowActions"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowWorkflowActionUpdateBuilderWorkflowActions"
      - "$ref": "#/components/schemas/LogoutWorkflowActionUpdateBuilderWorkflowActions"
      - "$ref": "#/components/schemas/RefreshDataSourceWorkflowActionUpdateBuilderWorkflowActions"
    PatchedColorTypographyButtonImagePageInputTableLinklink_active_text_decoration:
      type: object
      properties:
        primary_color:
          type: string
          maxLength: 255
        secondary_color:
          type: string
          maxLength: 255
        border_color:
          type: string
          maxLength: 255
        main_success_color:
          type: string
          maxLength: 255
        main_warning_color:
          type: string
          maxLength: 255
        main_error_color:
          type: string
          maxLength: 255
        custom_colors: {}
        heading_1_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_2_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_3_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_4_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_5_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_6_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        body_font_family:
          type: string
          maxLength: 250
        body_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        body_font_weight:
          "$ref": "#/components/schemas/BodyFontWeightEnum"
        body_text_color:
          type: string
          maxLength: 255
        body_text_alignment:
          "$ref": "#/components/schemas/BodyTextAlignmentEnum"
        heading_1_font_family:
          type: string
          maxLength: 250
        heading_1_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_1_font_weight:
          "$ref": "#/components/schemas/Heading1FontWeightEnum"
        heading_1_text_color:
          type: string
          maxLength: 255
        heading_1_text_alignment:
          "$ref": "#/components/schemas/Heading1TextAlignmentEnum"
        heading_2_font_family:
          type: string
          maxLength: 250
        heading_2_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_2_font_weight:
          "$ref": "#/components/schemas/Heading2FontWeightEnum"
        heading_2_text_color:
          type: string
          maxLength: 255
        heading_2_text_alignment:
          "$ref": "#/components/schemas/Heading2TextAlignmentEnum"
        heading_3_font_family:
          type: string
          maxLength: 250
        heading_3_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_3_font_weight:
          "$ref": "#/components/schemas/Heading3FontWeightEnum"
        heading_3_text_color:
          type: string
          maxLength: 255
        heading_3_text_alignment:
          "$ref": "#/components/schemas/Heading3TextAlignmentEnum"
        heading_4_font_family:
          type: string
          maxLength: 250
        heading_4_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_4_font_weight:
          "$ref": "#/components/schemas/Heading4FontWeightEnum"
        heading_4_text_color:
          type: string
          maxLength: 255
        heading_4_text_alignment:
          "$ref": "#/components/schemas/Heading4TextAlignmentEnum"
        heading_5_font_family:
          type: string
          maxLength: 250
        heading_5_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_5_font_weight:
          "$ref": "#/components/schemas/Heading5FontWeightEnum"
        heading_5_text_color:
          type: string
          maxLength: 255
        heading_5_text_alignment:
          "$ref": "#/components/schemas/Heading5TextAlignmentEnum"
        heading_6_font_family:
          type: string
          maxLength: 250
        heading_6_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_6_font_weight:
          "$ref": "#/components/schemas/Heading6FontWeightEnum"
        heading_6_text_color:
          type: string
          maxLength: 255
        heading_6_text_alignment:
          "$ref": "#/components/schemas/Heading6TextAlignmentEnum"
        button_font_family:
          type: string
          maxLength: 250
        button_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        button_font_weight:
          "$ref": "#/components/schemas/ButtonFontWeightEnum"
        button_alignment:
          "$ref": "#/components/schemas/ButtonAlignmentEnum"
        button_text_alignment:
          "$ref": "#/components/schemas/ButtonTextAlignmentEnum"
        button_width:
          "$ref": "#/components/schemas/ButtonWidthEnum"
        button_background_color:
          type: string
          description: The background color of buttons
          maxLength: 255
        button_text_color:
          type: string
          description: The text color of buttons
          maxLength: 255
        button_border_color:
          type: string
          description: The border color of buttons
          maxLength: 255
        button_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button border size
        button_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button border radius
        button_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button vertical padding
        button_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button horizontal padding
        button_hover_background_color:
          type: string
          description: The background color of buttons when hovered
          maxLength: 255
        button_hover_text_color:
          type: string
          description: The text color of buttons when hovered
          maxLength: 255
        button_hover_border_color:
          type: string
          description: The border color of buttons when hovered
          maxLength: 255
        button_active_background_color:
          type: string
          description: The background color of buttons when active
          maxLength: 255
        button_active_text_color:
          type: string
          description: The text color of buttons when active
          maxLength: 255
        button_active_border_color:
          type: string
          description: The border color of buttons when active
          maxLength: 255
        image_max_height:
          type: integer
          description: The image max height
        image_alignment:
          "$ref": "#/components/schemas/ImageAlignmentEnum"
        image_max_width:
          type: integer
          maximum: 100
          minimum: 0
          description: The max-width for this image element.
        image_border_radius:
          type: integer
          maximum: 100
          minimum: 0
          description: The border radius for this image element.
        image_constraint:
          allOf:
          - "$ref": "#/components/schemas/ImageConstraintEnum"
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
        page_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The image file
        page_background_color:
          type: string
          description: The background color of the page
          maxLength: 255
        page_background_mode:
          allOf:
          - "$ref": "#/components/schemas/PageBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        label_font_family:
          type: string
          description: The font family of the label
          maxLength: 250
        label_text_color:
          type: string
          description: The text color of the label
          maxLength: 255
        label_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The font size of the label
        label_font_weight:
          "$ref": "#/components/schemas/LabelFontWeightEnum"
        input_font_family:
          type: string
          description: The font family of the input
          maxLength: 250
        input_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        input_font_weight:
          "$ref": "#/components/schemas/InputFontWeightEnum"
        input_text_color:
          type: string
          description: The text color of the input
          maxLength: 255
        input_background_color:
          type: string
          description: The background color of the input
          maxLength: 255
        input_border_color:
          type: string
          description: The color of the input border
          maxLength: 255
        input_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input border size
        input_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input border radius
        input_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input vertical padding
        input_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input horizontal padding
        table_border_color:
          type: string
          description: The color of the table border
          maxLength: 255
        table_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table border size
        table_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table border radius
        table_header_background_color:
          type: string
          description: The background color of the table header cells
          maxLength: 255
        table_header_text_color:
          type: string
          description: The text color of the table header cells
          maxLength: 255
        table_header_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The font size of the header cells
        table_header_font_weight:
          "$ref": "#/components/schemas/TableHeaderFontWeightEnum"
        table_header_font_family:
          type: string
          description: The font family of the table header cells
          maxLength: 250
        table_header_text_alignment:
          "$ref": "#/components/schemas/TableHeaderTextAlignmentEnum"
        table_cell_background_color:
          type: string
          description: The background color of the table cells
          maxLength: 255
        table_cell_alternate_background_color:
          type: string
          description: The alternate background color of the table cells
          maxLength: 255
        table_cell_alignment:
          "$ref": "#/components/schemas/TableCellAlignmentEnum"
        table_cell_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table cell vertical padding
        table_cell_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table cell horizontal padding
        table_vertical_separator_color:
          type: string
          description: The color of the table vertical separator
          maxLength: 255
        table_vertical_separator_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table vertical separator size
        table_horizontal_separator_color:
          type: string
          description: The color of the table horizontal separator
          maxLength: 255
        table_horizontal_separator_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table horizontal separator size
        link_default_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Default text decoration: [underline, stroke, uppercase, italic]'
        link_hover_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Hover text decoration: [underline, stroke, uppercase, italic]'
        link_active_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Active text decoration: [underline, stroke, uppercase, italic]'
        link_font_family:
          type: string
          maxLength: 250
        link_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        link_font_weight:
          "$ref": "#/components/schemas/LinkFontWeightEnum"
        link_text_alignment:
          "$ref": "#/components/schemas/LinkTextAlignmentEnum"
        link_text_color:
          type: string
          description: The text color of links
          maxLength: 255
        link_hover_text_color:
          type: string
          description: The hover color of links when hovered
          maxLength: 255
        link_active_text_color:
          type: string
          description: The hover color of links when active
          maxLength: 255
    PatchedDashboard_WidgetUpdateWidget:
      anyOf:
      - "$ref": "#/components/schemas/SummaryWidgetUpdateWidget"
      - "$ref": "#/components/schemas/ChartWidgetUpdateWidget"
    PatchedData_SyncUpdateDataSync:
      oneOf:
      - "$ref": "#/components/schemas/ICalCalendarDataSyncUpdateDataSync"
      - "$ref": "#/components/schemas/PostgreSQLDataSyncUpdateDataSync"
      - "$ref": "#/components/schemas/LocalBaserowTableDataSyncUpdateDataSync"
      - "$ref": "#/components/schemas/JiraIssuesDataSyncUpdateDataSync"
      - "$ref": "#/components/schemas/GitHubIssuesDataSyncUpdateDataSync"
      - "$ref": "#/components/schemas/GitLabIssuesDataSyncUpdateDataSync"
      - "$ref": "#/components/schemas/HubSpotContactsDataSyncUpdateDataSync"
      discriminator:
        propertyName: type
        mapping:
          ical_calendar: "#/components/schemas/ICalCalendarDataSyncUpdateDataSync"
          postgresql: "#/components/schemas/PostgreSQLDataSyncUpdateDataSync"
          local_baserow_table: "#/components/schemas/LocalBaserowTableDataSyncUpdateDataSync"
          jira_issues: "#/components/schemas/JiraIssuesDataSyncUpdateDataSync"
          github_issues: "#/components/schemas/GitHubIssuesDataSyncUpdateDataSync"
          gitlab_issues: "#/components/schemas/GitLabIssuesDataSyncUpdateDataSync"
          hubspot_contacts: "#/components/schemas/HubSpotContactsDataSyncUpdateDataSync"
    PatchedDecorator_Value_Provider_TypeUpdateViewDecoration:
      oneOf:
      - "$ref": "#/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration"
      - "$ref": "#/components/schemas/GeneratedConditional_colorUpdateViewDecoration"
      discriminator:
        propertyName: value_provider_type
        mapping:
          single_select_color: "#/components/schemas/GeneratedSingle_select_colorUpdateViewDecoration"
          conditional_color: "#/components/schemas/GeneratedConditional_colorUpdateViewDecoration"
    PatchedElement_TypeUpdateElement:
      anyOf:
      - "$ref": "#/components/schemas/HeadingElementUpdateElement"
      - "$ref": "#/components/schemas/TextElementUpdateElement"
      - "$ref": "#/components/schemas/RatingElementUpdateElement"
      - "$ref": "#/components/schemas/RatingInputElementUpdateElement"
      - "$ref": "#/components/schemas/LinkElementUpdateElement"
      - "$ref": "#/components/schemas/ImageElementUpdateElement"
      - "$ref": "#/components/schemas/InputTextElementUpdateElement"
      - "$ref": "#/components/schemas/ColumnElementUpdateElement"
      - "$ref": "#/components/schemas/ButtonElementUpdateElement"
      - "$ref": "#/components/schemas/TableElementUpdateElement"
      - "$ref": "#/components/schemas/RepeatElementUpdateElement"
      - "$ref": "#/components/schemas/RecordSelectorElementUpdateElement"
      - "$ref": "#/components/schemas/FormContainerElementUpdateElement"
      - "$ref": "#/components/schemas/ChoiceElementUpdateElement"
      - "$ref": "#/components/schemas/CheckboxElementUpdateElement"
      - "$ref": "#/components/schemas/IFrameElementUpdateElement"
      - "$ref": "#/components/schemas/DateTimePickerElementUpdateElement"
      - "$ref": "#/components/schemas/HeaderElementUpdateElement"
      - "$ref": "#/components/schemas/FooterElementUpdateElement"
      - "$ref": "#/components/schemas/MenuElementUpdateElement"
      - "$ref": "#/components/schemas/SimpleContainerElementUpdateElement"
      - "$ref": "#/components/schemas/AuthFormElementUpdateElement"
    PatchedExampleBatchUpdateRowsRequest:
      type: object
      properties:
        items:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleBatchUpdateRowRequestSerializerWithUserFieldNames"
          maxItems: 200
          minItems: 1
    PatchedExampleUpdateRowRequestSerializerWithUserFieldNames:
      type: object
      properties:
        field_1:
          type: string
          nullable: true
          description: 'This field represents the `text` field. The number in field_1
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_2:
          type: string
          nullable: true
          description: 'This field represents the `long_text` field. The number in
            field_2 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. '
        field_3:
          type: string
          nullable: true
          description: 'This field represents the `url` field. The number in field_3
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_4:
          type: string
          nullable: true
          description: 'This field represents the `email` field. The number in field_4
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
          maxLength: 254
        field_5:
          type: string
          format: decimal
          pattern: "^-?\\d{0,50}(?:\\.\\d{0,0})?$"
          nullable: true
          description: 'This field represents the `number` field. The number in field_5
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_6:
          type: integer
          maximum: 5
          minimum: 0
          default: 0
          description: 'This field represents the `rating` field. The number in field_6
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_7:
          type: boolean
          default: false
          description: 'This field represents the `boolean` field. The number in field_7
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_8:
          type: string
          format: date
          nullable: true
          description: 'This field represents the `date` field. The number in field_8
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. '
        field_13:
          type: number
          format: float
          nullable: true
          description: 'This field represents the `duration` field. The number in
            field_13 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. The provided value can be
            a string in one of the available formats or a number representing the
            duration in seconds. In any case, the value will be rounded to match the
            field''s duration format.'
        field_14:
          type: array
          items: {}
          description: 'This field represents the `link_row` field. The number in
            field_14 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. This field accepts an `array`
            containing the ids or the names of the related rows. A name is the value
            of the primary key of the related row. This field also accepts a string
            with names separated by a comma or an array of row names. You can also
            provide a unique row Id.The response contains a list of objects containing
            the `id` and the primary field''s `value` as a string for display purposes.'
        field_15:
          type: array
          items: {}
          nullable: true
          description: 'This field represents the `file` field. The number in field_15
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. This field accepts an `array` containing
            objects with the name of the file. The response contains an `array` of
            more detailed objects related to the files.'
        field_16:
          type: integer
          nullable: true
          description: 'This field represents the `single_select` field. The number
            in field_16 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts an
            `integer` representing the chosen select option id related to the field.
            Available ids can be found when getting or listing the field. The response
            represents chosen field, but also the value and color is exposed.'
        field_17:
          type: array
          items:
            type: integer
            nullable: true
            description: 'This field represents the `multiple_select` field. The number
              in field_17 is in a normal request or response the id of the field.
              If the GET parameter user_field_names is provided and its value is one
              of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then
              the key will instead be the actual name of the field. This field accepts
              a list of `integer` each of which representing the chosen select option
              id related to the field. Available ids can be foundwhen getting or listing
              the field. You can also send a list of option names in which case the
              option are searched by name. The first one that matches is used. This
              field also accepts a string with names separated by a comma or an array
              of file names. The response represents chosen field, but also the value
              and color is exposed.'
          description: 'This field represents the `multiple_select` field. The number
            in field_17 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. This field accepts a
            list of `integer` each of which representing the chosen select option
            id related to the field. Available ids can be foundwhen getting or listing
            the field. You can also send a list of option names in which case the
            option are searched by name. The first one that matches is used. This
            field also accepts a string with names separated by a comma or an array
            of file names. The response represents chosen field, but also the value
            and color is exposed.'
        field_18:
          type: string
          nullable: true
          description: 'This field represents the `phone_number` field. The number
            in field_18 is in a normal request or response the id of the field. If
            the GET parameter user_field_names is provided and its value is one of
            the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the
            key will instead be the actual name of the field. '
          maxLength: 100
        field_23:
          type: array
          items:
            "$ref": "#/components/schemas/Collaborator"
          description: 'This field represents the `multiple_collaborators` field.
            The number in field_23 is in a normal request or response the id of the
            field. If the GET parameter user_field_names is provided and its value
            is one of the following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty,
            then the key will instead be the actual name of the field. This field
            accepts a list of objects representing the chosen collaborators through
            the object''s `id` property. The id is Baserow user id. The response objects
            also contains the collaborator name directly along with its id.'
        field_26:
          type: string
          nullable: true
          description: 'This field represents the `password` field. The number in
            field_26 is in a normal request or response the id of the field. If the
            GET parameter user_field_names is provided and its value is one of the
            following: `y`, `yes`, `true`, `t`, `on`, `1`, or empty, then the key
            will instead be the actual name of the field. Allows setting a write only
            password value. Providing a string will set the password, `null` will
            unset it, `true` will be ignored. The response will respond with `true`
            is a password is set, but will never expose the password itself.'
        field_27:
          type: string
          readOnly: true
          nullable: true
          description: 'This field represents the `ai` field. The number in field_27
            is in a normal request or response the id of the field. If the GET parameter
            user_field_names is provided and its value is one of the following: `y`,
            `yes`, `true`, `t`, `on`, `1`, or empty, then the key will instead be
            the actual name of the field. Holds a value that is generated by a generative
            AI model using a dynamic prompt.'
    PatchedFieldUpdateField:
      oneOf:
      - "$ref": "#/components/schemas/TextFieldUpdateField"
      - "$ref": "#/components/schemas/LongTextFieldUpdateField"
      - "$ref": "#/components/schemas/URLFieldUpdateField"
      - "$ref": "#/components/schemas/EmailFieldUpdateField"
      - "$ref": "#/components/schemas/NumberFieldUpdateField"
      - "$ref": "#/components/schemas/RatingFieldUpdateField"
      - "$ref": "#/components/schemas/BooleanFieldUpdateField"
      - "$ref": "#/components/schemas/DateFieldUpdateField"
      - "$ref": "#/components/schemas/LastModifiedFieldUpdateField"
      - "$ref": "#/components/schemas/LastModifiedByFieldUpdateField"
      - "$ref": "#/components/schemas/CreatedOnFieldUpdateField"
      - "$ref": "#/components/schemas/CreatedByFieldUpdateField"
      - "$ref": "#/components/schemas/DurationFieldUpdateField"
      - "$ref": "#/components/schemas/LinkRowFieldUpdateField"
      - "$ref": "#/components/schemas/FileFieldUpdateField"
      - "$ref": "#/components/schemas/SingleSelectFieldUpdateField"
      - "$ref": "#/components/schemas/MultipleSelectFieldUpdateField"
      - "$ref": "#/components/schemas/PhoneNumberFieldUpdateField"
      - "$ref": "#/components/schemas/FormulaFieldUpdateField"
      - "$ref": "#/components/schemas/CountFieldUpdateField"
      - "$ref": "#/components/schemas/RollupFieldUpdateField"
      - "$ref": "#/components/schemas/LookupFieldUpdateField"
      - "$ref": "#/components/schemas/MultipleCollaboratorsFieldUpdateField"
      - "$ref": "#/components/schemas/UUIDFieldUpdateField"
      - "$ref": "#/components/schemas/AutonumberFieldUpdateField"
      - "$ref": "#/components/schemas/PasswordFieldUpdateField"
      - "$ref": "#/components/schemas/AIFieldUpdateField"
      discriminator:
        propertyName: type
        mapping:
          text: "#/components/schemas/TextFieldUpdateField"
          long_text: "#/components/schemas/LongTextFieldUpdateField"
          url: "#/components/schemas/URLFieldUpdateField"
          email: "#/components/schemas/EmailFieldUpdateField"
          number: "#/components/schemas/NumberFieldUpdateField"
          rating: "#/components/schemas/RatingFieldUpdateField"
          boolean: "#/components/schemas/BooleanFieldUpdateField"
          date: "#/components/schemas/DateFieldUpdateField"
          last_modified: "#/components/schemas/LastModifiedFieldUpdateField"
          last_modified_by: "#/components/schemas/LastModifiedByFieldUpdateField"
          created_on: "#/components/schemas/CreatedOnFieldUpdateField"
          created_by: "#/components/schemas/CreatedByFieldUpdateField"
          duration: "#/components/schemas/DurationFieldUpdateField"
          link_row: "#/components/schemas/LinkRowFieldUpdateField"
          file: "#/components/schemas/FileFieldUpdateField"
          single_select: "#/components/schemas/SingleSelectFieldUpdateField"
          multiple_select: "#/components/schemas/MultipleSelectFieldUpdateField"
          phone_number: "#/components/schemas/PhoneNumberFieldUpdateField"
          formula: "#/components/schemas/FormulaFieldUpdateField"
          count: "#/components/schemas/CountFieldUpdateField"
          rollup: "#/components/schemas/RollupFieldUpdateField"
          lookup: "#/components/schemas/LookupFieldUpdateField"
          multiple_collaborators: "#/components/schemas/MultipleCollaboratorsFieldUpdateField"
          uuid: "#/components/schemas/UUIDFieldUpdateField"
          autonumber: "#/components/schemas/AutonumberFieldUpdateField"
          password: "#/components/schemas/PasswordFieldUpdateField"
          ai: "#/components/schemas/AIFieldUpdateField"
    PatchedGenerativeAISettings:
      type: object
      properties:
        openai:
          "$ref": "#/components/schemas/OpenAISettings"
        anthropic:
          "$ref": "#/components/schemas/AnthropicSettings"
        mistral:
          "$ref": "#/components/schemas/MistralSettings"
        ollama:
          "$ref": "#/components/schemas/OllamaSettings"
        openrouter:
          "$ref": "#/components/schemas/OpenRouterSettings"
    PatchedIntegrationUpdateIntegration:
      anyOf:
      - "$ref": "#/components/schemas/LocalBaserowIntegrationUpdateIntegration"
    PatchedIntegration_ServiceUpdateDashboardDataSource:
      anyOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowUpdateDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowListRowsUpdateDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsUpdateDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowUpdateDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowUpdateDashboardDataSource"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsUpdateDashboardDataSource"
    PatchedIntegration_ServiceUpdateDataSource:
      anyOf:
      - "$ref": "#/components/schemas/LocalBaserowGetRowUpdateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowListRowsUpdateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowAggregateRowsUpdateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowUpsertRowUpdateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowDeleteRowUpdateDataSource"
      - "$ref": "#/components/schemas/LocalBaserowGroupedAggregateRowsUpdateDataSource"
    PatchedMoveDataSource:
      type: object
      properties:
        before_id:
          type: integer
          nullable: true
          description: If provided, the data_source is moved before the data_source
            with this Id. Otherwise the data_source is placed  last for this page.
    PatchedMoveElement:
      type: object
      properties:
        before_id:
          type: integer
          nullable: true
          description: If provided, the element is moved before the element with this
            Id. Otherwise the element is placed at the end of the page.
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, the element is moved as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
    PatchedMoveIntegration:
      type: object
      properties:
        before_id:
          type: integer
          nullable: true
          description: If provided, the integration is moved before the integration
            with this Id. Otherwise the integration is placed at the end of the page.
    PatchedMoveUserSource:
      type: object
      description: Serializer used when moving a user source.
      properties:
        before_id:
          type: integer
          nullable: true
          description: If provided, the user_source is moved before the user_source
            with this Id. Otherwise the user_source is placed at the end of the page.
    PatchedPeriodicDataSyncInterval:
      type: object
      properties:
        interval:
          "$ref": "#/components/schemas/IntervalEnum"
        when:
          type: string
          format: time
        automatically_deactivated:
          type: boolean
          readOnly: true
          description: Indicates whether the periodic data sync has been deactivated.
    PatchedSettings:
      type: object
      properties:
        allow_new_signups:
          type: boolean
          description: Indicates whether new users can create a new account when signing
            up.
        allow_signups_via_workspace_invitations:
          type: boolean
          description: Indicates whether invited users can create an account when
            signing up, even if allow_new_signups is disabled.
        allow_reset_password:
          type: boolean
          description: Indicates whether users can request a password reset link.
        allow_global_workspace_creation:
          type: boolean
          description: Indicates whether all users can create workspaces, or just
            staff.
        account_deletion_grace_delay:
          type: integer
          maximum: 32767
          minimum: 0
          description: Number of days after the last login for an account pending
            deletion to be deleted
        show_admin_signup_page:
          type: boolean
          description: Indicates that there are no admin users in the database yet,
            so in the frontend the signup form will be shown instead of the login
            page.
        track_workspace_usage:
          type: boolean
          description: Runs a job once per day which calculates per workspace row
            counts and file storage usage, displayed on the admin workspace page.
        show_baserow_help_request:
          type: boolean
          description: Indicates whether the `We need your help!` message will be
            shown on the dashboard
        co_branding_logo:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: Co-branding logo that's placed next to the Baserow logo (176x29).
        email_verification:
          nullable: true
          description: |-
            Controls whether user email addresses have to be verified.

            * `no_verification` - no_verification
            * `recommended` - recommended
            * `enforced` - enforced
          oneOf:
          - "$ref": "#/components/schemas/EmailVerificationEnum"
          - "$ref": "#/components/schemas/NullEnum"
        verify_import_signature:
          type: boolean
          description: Indicates whether the signature of imported files should be
            verified.
    PatchedTableUpdate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
    PatchedTableWebhookUpdateRequest:
      type: object
      properties:
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        include_all_events:
          type: boolean
          description: Indicates whether this webhook should listen to all events.
        events:
          type: array
          items:
            "$ref": "#/components/schemas/EventsEnum"
          description: A list containing the events that will trigger this webhook.
        event_config:
          type: array
          items:
            "$ref": "#/components/schemas/TableWebhookEventConfig"
          description: A list containing the addition event options.
        request_method:
          allOf:
          - "$ref": "#/components/schemas/RequestMethodEnum"
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
        headers:
          type: object
          additionalProperties: {}
          description: The additional headers as an object where the key is the name
            and the value the value.
        name:
          type: string
          description: An internal name of the webhook.
          maxLength: 255
        active:
          type: boolean
          description: Indicates whether the web hook is active. When a webhook has
            failed multiple times, it will automatically be deactivated.
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key
            instead of the id.
    PatchedTokenUpdate:
      type: object
      properties:
        name:
          type: string
          description: The human readable name of the database token for the user.
          maxLength: 100
        permissions:
          type: object
          description: |-
            Indicates per operation which permissions the database token has within the whole workspace. If the value of for example `create` is `true`, then the token can create rows in all tables related to the workspace. If a list is provided with for example `[["table", 1]]` then the token only has create permissions for the table with id 1. Same goes for if a database references is provided. `[['database', 1]]` means create permissions for all tables in the database with id 1.

            Example:
            ```json
            {
              "create": true// Allows creating rows in all tables.
              // Allows reading rows from database 1 and table 10.
              "read": [["database", 1], ["table", 10]],
              "update": false  // Denies updating rows in all tables.
              "delete": []  // Denies deleting rows in all tables.
             }
            ```
          properties:
            create:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            read:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            update:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            delete:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
        rotate_key:
          type: boolean
          default: false
          description: Indicates if a new key must be generated.
    PatchedTrashEntryRequest:
      type: object
      description: |-
        Mixin to a DRF serializer class to raise an exception if data with unknown fields
        is provided to the serializer.
      properties:
        trash_item_id:
          type: integer
          minimum: 0
        parent_trash_item_id:
          type: integer
          minimum: 0
          nullable: true
        trash_item_type:
          "$ref": "#/components/schemas/TrashItemTypeEnum"
    PatchedUndoRedoRequest:
      type: object
      properties:
        scopes:
          allOf:
          - "$ref": "#/components/schemas/ActionScopes"
          description: A JSON object with keys and values representing the various
            action scopes to include when undoing or redoing. Every action in Baserow
            will be associated with a action scope, when undoing/redoing only actions
            which match any of the provided scope key:value pairs will included when
            this endpoint picks the next action to undo/redo. If no scopes are provided
            then all actions performed in the client session will be included when
            undoing/redoing.
    PatchedUpdateDomain:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type509Enum"
          description: |-
            The type of the domain.

            * `custom` - custom
            * `sub_domain` - sub_domain
        domain_name:
          type: string
    PatchedUpdatePage:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            "$ref": "#/components/schemas/PathParam"
        visibility:
          allOf:
          - "$ref": "#/components/schemas/VisibilityC5fEnum"
          description: |-
            Controls the page's visibility. When set to 'logged-in', the builder's login_page must also be set.

            * `all` - All
            * `logged-in` - Logged In
        role_type:
          allOf:
          - "$ref": "#/components/schemas/RoleTypeEnum"
          description: |-
            Role type is used in conjunction with roles to control access to this page.

            * `allow_all` - Allow All
            * `allow_all_except` - Allow All Except
            * `disallow_all_except` - Disallow All Except
        roles:
          description: List of user roles that are associated with this page. Used
            in conjunction with role_type.
        query_params:
          type: array
          items:
            "$ref": "#/components/schemas/QueryParam"
    PatchedUpdatePremiumViewAttributes:
      type: object
      properties:
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
    PatchedUpdateViewFilter:
      type: object
      properties:
        field:
          type: integer
          description: The field of which the value must be compared to the filter
            value.
        type:
          allOf:
          - "$ref": "#/components/schemas/Type508Enum"
          description: |-
            Indicates how the field's value must be compared to the filter's value. The filter is always in this order `field` `type` `value` (example: `field_1` `contains` `Test`).

            * `equal` - equal
            * `not_equal` - not_equal
            * `filename_contains` - filename_contains
            * `files_lower_than` - files_lower_than
            * `has_file_type` - has_file_type
            * `contains` - contains
            * `contains_not` - contains_not
            * `contains_word` - contains_word
            * `doesnt_contain_word` - doesnt_contain_word
            * `length_is_lower_than` - length_is_lower_than
            * `higher_than` - higher_than
            * `higher_than_or_equal` - higher_than_or_equal
            * `lower_than` - lower_than
            * `lower_than_or_equal` - lower_than_or_equal
            * `is_even_and_whole` - is_even_and_whole
            * `date_equal` - date_equal
            * `date_before` - date_before
            * `date_before_or_equal` - date_before_or_equal
            * `date_after_days_ago` - date_after_days_ago
            * `date_after` - date_after
            * `date_after_or_equal` - date_after_or_equal
            * `date_not_equal` - date_not_equal
            * `date_equals_today` - date_equals_today
            * `date_before_today` - date_before_today
            * `date_after_today` - date_after_today
            * `date_within_days` - date_within_days
            * `date_within_weeks` - date_within_weeks
            * `date_within_months` - date_within_months
            * `date_equals_days_ago` - date_equals_days_ago
            * `date_equals_months_ago` - date_equals_months_ago
            * `date_equals_years_ago` - date_equals_years_ago
            * `date_equals_week` - date_equals_week
            * `date_equals_month` - date_equals_month
            * `date_equals_day_of_month` - date_equals_day_of_month
            * `date_equals_year` - date_equals_year
            * `date_is` - date_is
            * `date_is_not` - date_is_not
            * `date_is_before` - date_is_before
            * `date_is_on_or_before` - date_is_on_or_before
            * `date_is_after` - date_is_after
            * `date_is_on_or_after` - date_is_on_or_after
            * `date_is_within` - date_is_within
            * `single_select_equal` - single_select_equal
            * `single_select_not_equal` - single_select_not_equal
            * `single_select_is_any_of` - single_select_is_any_of
            * `single_select_is_none_of` - single_select_is_none_of
            * `link_row_has` - link_row_has
            * `link_row_has_not` - link_row_has_not
            * `link_row_contains` - link_row_contains
            * `link_row_not_contains` - link_row_not_contains
            * `boolean` - boolean
            * `empty` - empty
            * `not_empty` - not_empty
            * `multiple_select_has` - multiple_select_has
            * `multiple_select_has_not` - multiple_select_has_not
            * `multiple_collaborators_has` - multiple_collaborators_has
            * `multiple_collaborators_has_not` - multiple_collaborators_has_not
            * `user_is` - user_is
            * `user_is_not` - user_is_not
            * `has_value_equal` - has_value_equal
            * `has_not_value_equal` - has_not_value_equal
            * `has_value_contains` - has_value_contains
            * `has_not_value_contains` - has_not_value_contains
            * `has_value_contains_word` - has_value_contains_word
            * `has_not_value_contains_word` - has_not_value_contains_word
            * `has_value_length_is_lower_than` - has_value_length_is_lower_than
            * `has_all_values_equal` - has_all_values_equal
            * `has_empty_value` - has_empty_value
            * `has_not_empty_value` - has_not_empty_value
            * `has_any_select_option_equal` - has_any_select_option_equal
            * `has_none_select_option_equal` - has_none_select_option_equal
            * `has_value_lower` - has_value_lower
            * `has_value_lower_or_equal` - has_value_lower_or_equal
            * `has_value_higher` - has_value_higher
            * `has_value_higher_or_equal` - has_value_higher_or_equal
            * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal
            * `has_not_value_higher` - has_not_value_higher
            * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal
            * `has_not_value_lower` - has_not_value_lower
            * `has_date_equal` - has_date_equal
            * `has_not_date_equal` - has_not_date_equal
            * `has_date_before` - has_date_before
            * `has_not_date_before` - has_not_date_before
            * `has_date_on_or_before` - has_date_on_or_before
            * `has_not_date_on_or_before` - has_not_date_on_or_before
            * `has_date_on_or_after` - has_date_on_or_after
            * `has_not_date_on_or_after` - has_not_date_on_or_after
            * `has_date_after` - has_date_after
            * `has_not_date_after` - has_not_date_after
            * `has_date_within` - has_date_within
            * `has_not_date_within` - has_not_date_within
        value:
          type: string
          description: The filter value that must be compared to the field's value.
    PatchedUpdateViewFilterGroup:
      type: object
      properties:
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.

            * `AND` - And
            * `OR` - Or
    PatchedUpdateViewGroupBy:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The pixel width of the group by in the related view.
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
    PatchedUpdateViewSort:
      type: object
      properties:
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
    PatchedUpdateWorkspaceInvitation:
      type: object
      properties:
        permissions:
          type: string
          description: The permissions that the user is going to get within the workspace
            after accepting the invitation.
          maxLength: 32
    PatchedUpdateWorkspaceUser:
      type: object
      properties:
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
    PatchedUserAdminUpdate:
      type: object
      description: |-
        Serializes a request body for updating a given user. Do not use for returning user
        data as the password will be returned also.
      properties:
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Set
            this to false instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: 'Designates whether this user is an admin and has access to
            all workspaces and Baserow''s admin areas. '
        password:
          type: string
    PatchedUser_SourceUpdateUserSource:
      anyOf:
      - "$ref": "#/components/schemas/LocalBaserowUserSourceUpdateUserSource"
    PatchedViewFieldOptions:
      anyOf:
      - "$ref": "#/components/schemas/grid_view_field_options"
      - "$ref": "#/components/schemas/gallery_view_field_options"
      - "$ref": "#/components/schemas/form_view_field_options"
      - "$ref": "#/components/schemas/kanban_view_field_options"
      - "$ref": "#/components/schemas/calendar_view_field_options"
      - "$ref": "#/components/schemas/timeline_view_field_options"
    PatchedViewUpdateView:
      anyOf:
      - "$ref": "#/components/schemas/grid_view_update"
      - "$ref": "#/components/schemas/gallery_view_update"
      - "$ref": "#/components/schemas/form_view_update"
      - "$ref": "#/components/schemas/kanban_view_update"
      - "$ref": "#/components/schemas/calendar_view_update"
      - "$ref": "#/components/schemas/timeline_view_update"
    PatchedWorkspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
        generative_ai_models_enabled:
          type: string
          readOnly: true
    PathParam:
      type: object
      properties:
        name:
          type: string
          description: The name of the parameter.
          maxLength: 255
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD08Enum"
          description: |-
            The type of the parameter.

            * `text` - text
            * `numeric` - numeric
      required:
      - name
      - type
    PeriodicDataSyncInterval:
      type: object
      properties:
        interval:
          "$ref": "#/components/schemas/IntervalEnum"
        when:
          type: string
          format: time
        automatically_deactivated:
          type: boolean
          readOnly: true
          description: Indicates whether the periodic data sync has been deactivated.
      required:
      - automatically_deactivated
      - when
    PermissionObject:
      type: object
      properties:
        name:
          type: string
          description: The permission manager name.
        permissions:
          description: The content of the permission object for this permission manager.
      required:
      - name
      - permissions
    PhoneNumberFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    PhoneNumberFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    PhoneNumberFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    PhoneNumberFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    PostgreSQLDataSyncCreateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync table that must be created.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        table_name:
          type: string
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          "$ref": "#/components/schemas/PostgresqlSslmodeEnum"
      required:
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
      - synced_properties
      - table_name
      - type
    PostgreSQLDataSyncDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
        synced_properties:
          type: array
          items:
            "$ref": "#/components/schemas/DataSyncSyncedProperty"
        last_sync:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the table was last synced.
        last_error:
          type: string
          nullable: true
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          "$ref": "#/components/schemas/PostgresqlSslmodeEnum"
      required:
      - id
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
      - synced_properties
      - type
    PostgreSQLDataSyncListDataSyncPropertiesRequest:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD46Enum"
          description: |-
            The type of the data sync to get the properties from.

            * `ical_calendar` - ical_calendar
            * `postgresql` - postgresql
            * `local_baserow_table` - local_baserow_table
            * `jira_issues` - jira_issues
            * `github_issues` - github_issues
            * `gitlab_issues` - gitlab_issues
            * `hubspot_contacts` - hubspot_contacts
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          "$ref": "#/components/schemas/PostgresqlSslmodeEnum"
      required:
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
      - type
    PostgreSQLDataSyncUpdateDataSync:
      type: object
      properties:
        synced_properties:
          type: array
          items:
            type: string
        postgresql_host:
          type: string
          maxLength: 255
        postgresql_username:
          type: string
          maxLength: 255
        postgresql_port:
          type: integer
          maximum: 32767
          minimum: 0
        postgresql_database:
          type: string
          maxLength: 255
        postgresql_schema:
          type: string
          maxLength: 255
        postgresql_table:
          type: string
          maxLength: 255
        postgresql_sslmode:
          "$ref": "#/components/schemas/PostgresqlSslmodeEnum"
      required:
      - postgresql_database
      - postgresql_host
      - postgresql_table
      - postgresql_username
    PostgresqlSslmodeEnum:
      enum:
      - disable
      - allow
      - prefer
      - require
      - verify-ca
      - verify-full
      type: string
      description: |-
        * `disable` - disable
        * `allow` - allow
        * `prefer` - prefer
        * `require` - require
        * `verify-ca` - verify-ca
        * `verify-full` - verify-full
    PublicBuilder:
      type: object
      description: A public version of the builder serializer with less data to prevent
        data leaks.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        pages:
          type: array
          items:
            "$ref": "#/components/schemas/PublicPage"
          readOnly: true
          description: This field is specific to the `builder` application and contains
            an array of pages that are in the builder.
        type:
          type: string
          readOnly: true
          description: The type of the object.
        theme:
          allOf:
          - "$ref": "#/components/schemas/ColorTypographyButtonImagePageInputTableLinklink_active_text_decoration"
          readOnly: true
          description: This field is specific to the `builder` application and contains
            the theme settings.
        user_sources:
          type: array
          items:
            "$ref": "#/components/schemas/User_SourceBasePublicUserSource"
          readOnly: true
          description: The user sources related with this builder.
        favicon_file:
          type: string
          readOnly: true
          description: This field is specific to the `builder` application and contains
            the favicon settings.
        login_page_id:
          type: integer
          description: The login page for this application. This is related to the
            visibility settings of builder pages.
      required:
      - favicon_file
      - id
      - login_page_id
      - name
      - pages
      - theme
      - type
      - user_sources
    PublicField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    PublicFormView:
      type: object
      properties:
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - "$ref": "#/components/schemas/Mode51eEnum"
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        cover_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The user file cover image that is displayed at the top of the
            form.
        logo_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The user file logo image that is displayed at the top of the
            form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/PublicFormViewFieldOptions"
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
      required:
      - fields
    PublicFormViewField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        type:
          type: string
          readOnly: true
          description: The type of the related field.
      required:
      - id
      - name
      - type
    PublicFormViewFieldOptions:
      type: object
      properties:
        name:
          type: string
          readOnly: true
          description: If provided, then this value will be visible above the field
            input.
        description:
          type: string
          description: If provided, then this value be will be shown under the field
            name.
        required:
          type: boolean
          description: Indicates whether the field is required for the visitor to
            fill out.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the form. Lower value is first.
        field:
          allOf:
          - "$ref": "#/components/schemas/PublicFormViewField"
          readOnly: true
          description: The properties of the related field. These can be used to construct
            the correct input. Additional properties could be added depending on the
            field type.
        show_when_matching_conditions:
          type: boolean
          description: Indicates whether this field is visible when the conditions
            are met.
        condition_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all (AND) or any (OR) of the conditions should match before shown.

            * `AND` - And
            * `OR` - Or
        conditions:
          type: array
          items:
            "$ref": "#/components/schemas/FormViewFieldOptionsCondition"
        condition_groups:
          type: array
          items:
            "$ref": "#/components/schemas/FormViewFieldOptionsConditionGroup"
        groups:
          type: array
          items:
            "$ref": "#/components/schemas/FormViewFieldOptionsConditionGroup"
        field_component:
          type: string
          description: Indicates which field input component is used in the form.
            The value is only used in the frontend, and can differ per field.
          maxLength: 32
      required:
      - field
      - name
    PublicNone:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        title:
          type: string
          default: ''
          description: The title of the notification. Must be an formula.
        description:
          type: string
          default: ''
          description: The description of the notification. Must be an formula.
      required:
      - element_id
      - event
      - id
      - order
      - type
    PublicPage:
      type: object
      description: A public version of the page serializer with less data to prevent
        data leaks.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        path:
          type: string
          maxLength: 255
        path_params:
          type: array
          items:
            "$ref": "#/components/schemas/PathParam"
        shared:
          type: boolean
        visibility:
          allOf:
          - "$ref": "#/components/schemas/VisibilityC5fEnum"
          description: |-
            Controls the page's visibility. When set to 'logged-in', the builder's login_page must also be set.

            * `all` - All
            * `logged-in` - Logged In
        role_type:
          allOf:
          - "$ref": "#/components/schemas/RoleTypeEnum"
          description: |-
            Role type is used in conjunction with roles to control access to this page.

            * `allow_all` - Allow All
            * `allow_all_except` - Allow All Except
            * `disallow_all_except` - Disallow All Except
        roles:
          description: List of user roles that are associated with this page. Used
            in conjunction with role_type.
        query_params:
          type: array
          items:
            "$ref": "#/components/schemas/QueryParam"
      required:
      - id
      - name
      - path
    PublicPaginationSerializerWithGalleryViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GalleryViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
      required:
      - count
      - next
      - previous
      - results
    PublicPaginationSerializerWithGridViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GridViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
      required:
      - count
      - next
      - previous
      - results
    PublicPaginationSerializerWithTimelineViewFieldOptionsExampleRowResponse:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/TimelineViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
        count:
          type: integer
          description: The total amount of results.
        next:
          type: string
          format: uri
          nullable: true
          description: URL to the next page.
        previous:
          type: string
          format: uri
          nullable: true
          description: URL to the previous page.
        results:
          type: array
          items:
            "$ref": "#/components/schemas/ExampleRowResponse"
      required:
      - count
      - next
      - previous
      - results
    PublicView:
      type: object
      properties:
        id:
          type: string
          pattern: "^[-a-zA-Z0-9_]+$"
        table:
          "$ref": "#/components/schemas/PublicViewTable"
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/PublicViewSort"
          readOnly: true
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/PublicViewGroupBy"
          readOnly: true
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug where the view can be accessed publicly on.
          pattern: "^[-a-zA-Z0-9_]+$"
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
      required:
      - group_bys
      - id
      - name
      - order
      - slug
      - sortings
      - table
      - type
    PublicViewAuthRequest:
      type: object
      properties:
        password:
          type: string
      required:
      - password
    PublicViewAuthResponse:
      type: object
      properties:
        access_token:
          type: string
      required:
      - access_token
    PublicViewFilter:
      type: object
      properties:
        field:
          type: integer
          description: The id of the field to filter on.
        type:
          type: string
          description: The filter type.
        value:
          type: string
          description: The filter value.
      required:
      - field
      - type
      - value
    PublicViewFilters:
      type: object
      properties:
        filter_type:
          "$ref": "#/components/schemas/PublicViewFiltersFilterTypeEnum"
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/PublicViewFilter"
          description: The list of filters that should be applied in this group/public
            view.
      required:
      - filter_type
    PublicViewFiltersFilterTypeEnum:
      enum:
      - AND
      - OR
      type: string
      description: |-
        * `AND` - AND
        * `OR` - OR
    PublicViewGroupBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: string
          pattern: "^[-a-zA-Z0-9_]+$"
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The pixel width of the group by in the related view.
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    PublicViewInfo:
      type: object
      properties:
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/PublicField"
          readOnly: true
        view:
          allOf:
          - "$ref": "#/components/schemas/PublicView"
          readOnly: true
      required:
      - fields
      - view
    PublicViewSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: string
          pattern: "^[-a-zA-Z0-9_]+$"
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    PublicViewTable:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        database_id:
          type: integer
          readOnly: true
      required:
      - database_id
      - id
    PublishDomainJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
      required:
      - type
    PublishDomainJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
      required:
      - id
      - progress_percentage
      - state
      - type
    QueryParam:
      type: object
      properties:
        name:
          type: string
          description: The name of the parameter.
          maxLength: 255
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeD08Enum"
          description: |-
            The type of the parameter.

            * `text` - text
            * `numeric` - numeric
      required:
      - name
      - type
    RatingElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
      required:
      - order
      - type
    RatingElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    RatingElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    RatingElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
    RatingFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - "$ref": "#/components/schemas/StyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
      required:
      - name
      - type
    RatingFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - "$ref": "#/components/schemas/StyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    RatingFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - "$ref": "#/components/schemas/StyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    RatingFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        style:
          allOf:
          - "$ref": "#/components/schemas/StyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
    RatingInputElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this field
      required:
      - order
      - type
    RatingInputElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this field
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    RatingInputElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this field
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    RatingInputElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        max_value:
          type: integer
          maximum: 10
          minimum: 1
          description: Maximum value the rating can take.
        color:
          type: string
          description: Color of the symbols.
          maxLength: 50
        rating_style:
          allOf:
          - "$ref": "#/components/schemas/RatingStyleEnum"
          description: |-
            Rating style. Allowed values: star, heart, thumbs-up, flag, smile.

            * `star` - Star
            * `heart` - Heart
            * `thumbs-up` - Thumbs Up
            * `flag` - Flag
            * `smile` - Smile
        value:
          type: string
          default: ''
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this field
    RatingStyleEnum:
      enum:
      - star
      - heart
      - thumbs-up
      - flag
      - smile
      type: string
      description: |-
        * `star` - Star
        * `heart` - Heart
        * `thumbs-up` - Thumbs Up
        * `flag` - Flag
        * `smile` - Smile
    RecordSelectorElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this record selector
        default_value:
          type: string
          default: ''
          description: This record selector default value.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        multiple:
          type: boolean
          default: false
          description: Whether this record selector allows users to choose multiple
            values.
        option_name_suffix:
          type: string
          default: ''
          description: The formula to generate the displayed option name suffix
      required:
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - type
    RecordSelectorElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this record selector
        default_value:
          type: string
          default: ''
          description: This record selector default value.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        multiple:
          type: boolean
          default: false
          description: Whether this record selector allows users to choose multiple
            values.
        option_name_suffix:
          type: string
          default: ''
          description: The formula to generate the displayed option name suffix
      required:
      - id
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - page_id
      - parent_element_id
      - type
    RecordSelectorElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this record selector
        default_value:
          type: string
          default: ''
          description: This record selector default value.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        multiple:
          type: boolean
          default: false
          description: Whether this record selector allows users to choose multiple
            values.
        option_name_suffix:
          type: string
          default: ''
          description: The formula to generate the displayed option name suffix
      required:
      - id
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - page_id
      - parent_element_id
      - type
    RecordSelectorElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: false
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        required:
          type: boolean
          default: false
          description: Whether this form element is a required field.
        label:
          type: string
          default: ''
          description: The text label for this record selector
        default_value:
          type: string
          default: ''
          description: This record selector default value.
        placeholder:
          type: string
          default: ''
          description: The placeholder text which should be applied to the element.
        multiple:
          type: boolean
          default: false
          description: Whether this record selector allows users to choose multiple
            values.
        option_name_suffix:
          type: string
          default: ''
          description: The formula to generate the displayed option name suffix
      required:
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
    RefreshDataSourceWorkflowActionBuilderWorkflowAction:
      type: object
      description: Basic builder workflow action serializer
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        element_id:
          type: integer
          nullable: true
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the workflow action
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        data_source_id:
          type: integer
          nullable: true
          description: The ID of the Data Source to be refreshed.
      required:
      - element_id
      - event
      - id
      - order
      - type
    RefreshDataSourceWorkflowActionCreateBuilderWorkflowAction:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        element_id:
          type: integer
          nullable: true
          description: The id of the element the workflow action is associated with
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        event:
          type: string
          description: The event that triggers the execution
          maxLength: 60
        data_source_id:
          type: integer
          nullable: true
          description: The ID of the Data Source to be refreshed.
      required:
      - event
      - id
      - type
    RefreshDataSourceWorkflowActionUpdateBuilderWorkflowActions:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type051Enum"
          description: |-
            The type of the workflow action

            * `notification` - notification
            * `open_page` - open_page
            * `create_row` - create_row
            * `update_row` - update_row
            * `delete_row` - delete_row
            * `logout` - logout
            * `refresh_data_source` - refresh_data_source
        data_source_id:
          type: integer
          nullable: true
          description: The ID of the Data Source to be refreshed.
    Register:
      type: object
      properties:
        name:
          type: string
          maxLength: 150
          minLength: 2
        email:
          type: string
          format: email
          description: The email address is also going to be the username.
        password:
          type: string
        language:
          type: string
          default: en
          description: 'An ISO 639 language code (with optional variant) selected
            by the user. Ex: en-GB.'
          maxLength: 10
          minLength: 2
        authenticate:
          type: boolean
          default: false
          description: Indicates whether an authentication JWT should be generated
            and be included in the response.
        workspace_invitation_token:
          type: string
          description: If provided and valid, the user accepts the workspace invitation
            and will have access to the workspace after signing up.
        template_id:
          type: integer
          description: The id of the template that must be installed after creating
            the account. This only works if the `workspace_invitation_token` param
            is not provided.
      required:
      - email
      - name
      - password
    RegisterLicense:
      type: object
      properties:
        license:
          type: string
          description: The license that you want to register.
      required:
      - license
    RelatedFields:
      type: object
      properties:
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - related_fields
    RepeatElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        orientation:
          "$ref": "#/components/schemas/OrientationAf4Enum"
        items_per_row:
          description: The amount repetitions per row, per device type. Only applicable
            when the orientation is horizontal.
        horizontal_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of horizontal space between repeat elements.
        vertical_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of vertical space between repeat elements.
      required:
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - type
    RepeatElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        orientation:
          "$ref": "#/components/schemas/OrientationAf4Enum"
        items_per_row:
          description: The amount repetitions per row, per device type. Only applicable
            when the orientation is horizontal.
        horizontal_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of horizontal space between repeat elements.
        vertical_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of vertical space between repeat elements.
      required:
      - id
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - page_id
      - parent_element_id
      - type
    RepeatElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        orientation:
          "$ref": "#/components/schemas/OrientationAf4Enum"
        items_per_row:
          description: The amount repetitions per row, per device type. Only applicable
            when the orientation is horizontal.
        horizontal_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of horizontal space between repeat elements.
        vertical_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of vertical space between repeat elements.
      required:
      - id
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - page_id
      - parent_element_id
      - type
    RepeatElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        orientation:
          "$ref": "#/components/schemas/OrientationAf4Enum"
        items_per_row:
          description: The amount repetitions per row, per device type. Only applicable
            when the orientation is horizontal.
        horizontal_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of horizontal space between repeat elements.
        vertical_gap:
          type: integer
          maximum: 2000
          minimum: 0
          description: The amount of vertical space between repeat elements.
      required:
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
    Report:
      type: object
      properties:
        failing_rows:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                type: string
              description: Error messages for this field.
            description: An object containing error messages by fields. The key is
              the field name and the value is an array of error messages for this
              field. These messages are localized for the user who has created the
              job when the translation is available.
          description: An object containing field in error by rows. The keys are the
            row indexes from original file and values are objects of errors by fields.
      required:
      - failing_rows
    RequestMethodEnum:
      enum:
      - POST
      - GET
      - PUT
      - PATCH
      - DELETE
      type: string
      description: |-
        * `POST` - Post
        * `GET` - Get
        * `PUT` - Put
        * `PATCH` - Patch
        * `DELETE` - Delete
    ResetPasswordBodyValidation:
      type: object
      properties:
        token:
          type: string
        password:
          type: string
      required:
      - password
      - token
    RestoreSnapshotJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        snapshot:
          "$ref": "#/components/schemas/Snapshot"
      required:
      - snapshot
      - type
    RestoreSnapshotJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        snapshot:
          "$ref": "#/components/schemas/Snapshot"
      required:
      - id
      - progress_percentage
      - snapshot
      - state
      - type
    RoleTypeEnum:
      enum:
      - allow_all
      - allow_all_except
      - disallow_all_except
      type: string
      description: |-
        * `allow_all` - Allow All
        * `allow_all_except` - Allow All Except
        * `disallow_all_except` - Disallow All Except
    RollupFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - name
      - nullable
      - type
    RollupFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - table_id
      - type
    RollupFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - nullable
      - order
      - read_only
      - related_fields
      - table_id
      - type
    RollupFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        nullable:
          type: boolean
          readOnly: true
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        through_field_id:
          type: integer
          nullable: true
          description: The id of the link row field to rollup values for.
        target_field_id:
          type: integer
          nullable: true
          description: The id of the field in the table linked to by the through_field
            to rollup.
        rollup_function:
          type: string
          description: The rollup formula function that must be applied.
          maxLength: 64
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
      required:
      - nullable
    RowComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          nullable: true
          description: The user who made the comment.
          readOnly: true
        first_name:
          type: string
          maxLength: 32
        table_id:
          type: integer
          description: 'The table the row this comment is for is found in. '
          readOnly: true
        row_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The id of the row the comment is for.
        message:
          type: string
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        edited:
          type: string
          readOnly: true
        trashed:
          type: boolean
      required:
      - created_on
      - edited
      - id
      - message
      - row_id
      - table_id
      - updated_on
      - user_id
    RowCommentCreate:
      type: object
      properties:
        message:
          description: The rich text comment content.
      required:
      - message
    RowCommentsNotificationMode:
      type: object
      properties:
        mode:
          allOf:
          - "$ref": "#/components/schemas/Mode884Enum"
          description: |-
            The mode to use to receive notifications for new comments on a table row.

            * `all` - all
            * `mentions` - mentions
      required:
      - mode
    RowCommentsNotificationModeEnum:
      enum:
      - all
      - mentions
      type: string
      description: |-
        * `all` - all
        * `mentions` - mentions
    RowHeightSizeEnum:
      enum:
      - small
      - medium
      - large
      type: string
      description: |-
        * `small` - Small
        * `medium` - Medium
        * `large` - Large
    RowHistory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        action_type:
          type: string
          description: The type of the action that was performed.
        user:
          allOf:
          - "$ref": "#/components/schemas/RowHistoryUser"
          description: The user that performed the action.
        timestamp:
          type: string
          format: date-time
          description: The timestamp of the action that was performed.
        before:
          description: The mapping between field_ids and values for the row before
            the action was performed.
        after:
          description: The mapping between field_ids and values for the row after
            the action was performed.
        fields_metadata:
          description: The metadata of the fields that were changed.
      required:
      - action_type
      - after
      - before
      - fields_metadata
      - id
      - timestamp
      - user
    RowHistoryUser:
      type: object
      properties:
        id:
          type: integer
          description: The id of the user.
        name:
          type: string
          description: The first name of the user.
      required:
      - id
      - name
    RowIdentifierTypeEnum:
      enum:
      - id
      - count
      type: string
      description: |-
        * `id` - Id
        * `count` - Count
    RowMetadata:
      type: object
      properties:
        row_comment_count:
          type: integer
          minimum: 0
          description: How many row comments exist for this row.
        row_comments_notification_mode:
          "$ref": "#/components/schemas/RowCommentsNotificationModeEnum"
    SAMLResponse:
      type: object
      properties:
        SAMLResponse:
          type: string
          description: The encoded SAML response from the IdP.
        RelayState:
          type: string
          description: The frontend URL where redirect the authenticated user.
      required:
      - RelayState
      - SAMLResponse
    SamlAppAuthProviderModelAppAuthProvider:
      type: object
      description: Basic app_auth_provider serializer mostly for returned values.
      properties:
        type:
          type: string
          readOnly: true
          description: The type of the app_auth_provider.
        id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
          maxLength: 255
        metadata:
          type: string
          description: The SAML metadata XML provided by the IdP.
        is_verified:
          type: boolean
          readOnly: true
          description: Whether or not a user sign in correctly with this SAML provider.
        email_attr_key:
          type: string
          description: The key in the SAML response that contains the email address
            of the user.
        first_name_attr_key:
          type: string
          description: The key in the SAML response that contains the first name of
            the user.
        last_name_attr_key:
          type: string
          description: The key in the SAML response that contains the last name of
            the user. If this is not set, the first name attr will be used as full
            name.
      required:
      - id
      - is_verified
      - metadata
      - type
    SamlAppAuthProviderModelBaseAppAuthProvider:
      type: object
      description: |-
        This serializer allow to set the type of an app_auth_provider and the
        app_auth_provider id before which we want to insert the new app_auth_provider.
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type128Enum"
          description: |-
            The type of the app_auth_provider.

            * `local_baserow_password` - local_baserow_password
            * `saml` - saml
            * `openid_connect` - openid_connect
        user_source_id:
          type: integer
          readOnly: true
        domain:
          type: string
          nullable: true
          description: The email domain registered with this provider.
        metadata:
          type: string
          description: The SAML metadata XML provided by the IdP.
        is_verified:
          type: boolean
          readOnly: true
          description: Whether or not a user sign in correctly with this SAML provider.
        email_attr_key:
          type: string
          description: The key in the SAML response that contains the email address
            of the user.
        first_name_attr_key:
          type: string
          description: The key in the SAML response that contains the first name of
            the user.
        last_name_attr_key:
          type: string
          description: The key in the SAML response that contains the last name of
            the user. If this is not set, the first name attr will be used as full
            name.
      required:
      - is_verified
      - metadata
      - type
      - user_source_id
    SamlAuthProviderModelAuthProvider:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        domain:
          type: string
          description: The email domain registered with this provider.
        enabled:
          type: boolean
          description: Whether the provider is enabled or not.
        metadata:
          type: string
          description: The SAML metadata XML provided by the IdP.
        is_verified:
          type: boolean
          readOnly: true
          description: Whether or not a user sign in correctly with this SAML provider.
        email_attr_key:
          type: string
          description: The key in the SAML response that contains the email address
            of the user.
        first_name_attr_key:
          type: string
          description: The key in the SAML response that contains the first name of
            the user.
        last_name_attr_key:
          type: string
          description: The key in the SAML response that contains the last name of
            the user. If this is not set, the first name attr will be used as full
            name.
      required:
      - domain
      - id
      - is_verified
      - metadata
      - type
    ScopeTypeEnum:
      enum:
      - core
      - application
      - workspace
      - workspace_invitation
      - snapshot
      - workspace_user
      - integration
      - user_source
      - database
      - database_table
      - database_field
      - database_view
      - database_view_decoration
      - database_view_sort
      - database_view_group
      - database_view_filter
      - database_view_filter_group
      - token
      - builder
      - builder_page
      - builder_element
      - builder_domain
      - builder_data_source
      - builder_workflow_action
      - dashboard
      - dashboard_data_source
      - dashboard_widget
      - team
      - team_subject
      - license
      type: string
      description: |-
        * `core` - core
        * `application` - application
        * `workspace` - workspace
        * `workspace_invitation` - workspace_invitation
        * `snapshot` - snapshot
        * `workspace_user` - workspace_user
        * `integration` - integration
        * `user_source` - user_source
        * `database` - database
        * `database_table` - database_table
        * `database_field` - database_field
        * `database_view` - database_view
        * `database_view_decoration` - database_view_decoration
        * `database_view_sort` - database_view_sort
        * `database_view_group` - database_view_group
        * `database_view_filter` - database_view_filter
        * `database_view_filter_group` - database_view_filter_group
        * `token` - token
        * `builder` - builder
        * `builder_page` - builder_page
        * `builder_element` - builder_element
        * `builder_domain` - builder_domain
        * `builder_data_source` - builder_data_source
        * `builder_workflow_action` - builder_workflow_action
        * `dashboard` - dashboard
        * `dashboard_data_source` - dashboard_data_source
        * `dashboard_widget` - dashboard_widget
        * `team` - team
        * `team_subject` - team_subject
        * `license` - license
    SelectColorValueProviderConf:
      type: object
      properties:
        field_id:
          type: integer
          nullable: true
          description: An id of a select field of the table. The value provider return
            the color of the selected option for each row.
      required:
      - field_id
    SelectOption:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
          maxLength: 255
        color:
          type: string
          maxLength: 255
      required:
      - color
      - value
    SendResetPasswordEmailBodyValidation:
      type: object
      properties:
        email:
          type: string
          format: email
          description: The email address of the user that has requested a password
            reset.
        base_url:
          type: string
          format: uri
          description: The base URL where the user can reset his password. The reset
            token is going to be appended to the base_url (base_url '/token').
      required:
      - base_url
      - email
    Sender:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: "^[\\w.@+-]+$"
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
    Settings:
      type: object
      properties:
        allow_new_signups:
          type: boolean
          description: Indicates whether new users can create a new account when signing
            up.
        allow_signups_via_workspace_invitations:
          type: boolean
          description: Indicates whether invited users can create an account when
            signing up, even if allow_new_signups is disabled.
        allow_reset_password:
          type: boolean
          description: Indicates whether users can request a password reset link.
        allow_global_workspace_creation:
          type: boolean
          description: Indicates whether all users can create workspaces, or just
            staff.
        account_deletion_grace_delay:
          type: integer
          maximum: 32767
          minimum: 0
          description: Number of days after the last login for an account pending
            deletion to be deleted
        show_admin_signup_page:
          type: boolean
          description: Indicates that there are no admin users in the database yet,
            so in the frontend the signup form will be shown instead of the login
            page.
        track_workspace_usage:
          type: boolean
          description: Runs a job once per day which calculates per workspace row
            counts and file storage usage, displayed on the admin workspace page.
        show_baserow_help_request:
          type: boolean
          description: Indicates whether the `We need your help!` message will be
            shown on the dashboard
        co_branding_logo:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: Co-branding logo that's placed next to the Baserow logo (176x29).
        email_verification:
          nullable: true
          description: |-
            Controls whether user email addresses have to be verified.

            * `no_verification` - no_verification
            * `recommended` - recommended
            * `enforced` - enforced
          oneOf:
          - "$ref": "#/components/schemas/EmailVerificationEnum"
          - "$ref": "#/components/schemas/NullEnum"
        verify_import_signature:
          type: boolean
          description: Indicates whether the signature of imported files should be
            verified.
    ShareTypeEnum:
      enum:
      - all
      - only
      - except
      type: string
      description: |-
        * `all` - All
        * `only` - Only
        * `except` - Except
    SimpleContainerElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
      required:
      - order
      - type
    SimpleContainerElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    SimpleContainerElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    SimpleContainerElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          description: The theme overrides for this element
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
    SingleAuditLogExportJobRequest:
      type: object
      description: |-
        When mixed in to a model serializer for an ExportJob this will add an url field
        with the actual usable url of the export job's file (if it has one).
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        csv_column_separator:
          allOf:
          - "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
          default: ","
          description: "The value used to separate columns in the resulting csv file.\n\n*
            `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n*
            `unit_separator` - \x1F"
        csv_first_row_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv
            file.
        filter_user_id:
          type: integer
          minimum: 0
          description: 'Optional: The user to filter the audit log by.'
        filter_workspace_id:
          type: integer
          minimum: 0
          description: 'Optional: The workspace to filter the audit log by.'
        filter_action_type:
          allOf:
          - "$ref": "#/components/schemas/FilterActionTypeEnum"
          description: |-
            Optional: The action type to filter the audit log by.

            * `create_group` - create_group
            * `delete_group` - delete_group
            * `update_group` - update_group
            * `order_groups` - order_groups
            * `create_application` - create_application
            * `update_application` - update_application
            * `delete_application` - delete_application
            * `order_applications` - order_applications
            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_group_invitation` - create_group_invitation
            * `delete_group_invitation` - delete_group_invitation
            * `accept_group_invitation` - accept_group_invitation
            * `reject_group_invitation` - reject_group_invitation
            * `update_group_invitation_permissions` - update_group_invitation_permissions
            * `leave_group` - leave_group
            * `create_initial_workspace` - create_initial_workspace
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `create_snapshot` - create_snapshot
            * `delete_snapshot` - delete_snapshot
            * `restore_snapshot` - restore_snapshot
            * `empty_trash` - empty_trash
            * `restore_from_trash` - restore_from_trash
            * `create_user` - create_user
            * `update_user` - update_user
            * `schedule_user_deletion` - schedule_user_deletion
            * `cancel_user_deletion` - cancel_user_deletion
            * `sign_in_user` - sign_in_user
            * `change_user_password` - change_user_password
            * `send_reset_user_password` - send_reset_user_password
            * `reset_user_password` - reset_user_password
            * `send_verify_email` - send_verify_email
            * `verify_email` - verify_email
            * `create_db_token` - create_db_token
            * `update_db_token_name` - update_db_token_name
            * `update_db_token_permissions` - update_db_token_permissions
            * `rotate_db_token_key` - rotate_db_token_key
            * `delete_db_token_key` - delete_db_token_key
            * `create_webhook` - create_webhook
            * `delete_webhook` - delete_webhook
            * `update_webhook` - update_webhook
            * `export_table` - export_table
            * `import_database_from_airtable` - import_database_from_airtable
            * `create_table` - create_table
            * `delete_table` - delete_table
            * `order_tables` - order_tables
            * `update_table` - update_table
            * `duplicate_table` - duplicate_table
            * `create_row` - create_row
            * `create_rows` - create_rows
            * `import_rows` - import_rows
            * `delete_row` - delete_row
            * `delete_rows` - delete_rows
            * `move_row` - move_row
            * `update_row` - update_row
            * `update_rows` - update_rows
            * `create_view` - create_view
            * `duplicate_view` - duplicate_view
            * `delete_view` - delete_view
            * `order_views` - order_views
            * `update_view` - update_view
            * `create_view_filter` - create_view_filter
            * `update_view_filter` - update_view_filter
            * `delete_view_filter` - delete_view_filter
            * `create_view_sort` - create_view_sort
            * `update_view_sort` - update_view_sort
            * `delete_view_sort` - delete_view_sort
            * `create_view_group` - create_view_group
            * `update_view_group` - update_view_group
            * `delete_view_group` - delete_view_group
            * `submit_form` - submit_form
            * `rotate_view_slug` - rotate_view_slug
            * `update_view_field_options` - update_view_field_options
            * `create_decoration` - create_decoration
            * `update_decoration` - update_decoration
            * `delete_decoration` - delete_decoration
            * `create_view_filter_group` - create_view_filter_group
            * `update_view_filter_group` - update_view_filter_group
            * `delete_view_filter_group` - delete_view_filter_group
            * `create_data_sync_table` - create_data_sync_table
            * `update_data_sync_table` - update_data_sync_table
            * `sync_data_sync_table` - sync_data_sync_table
            * `create_field` - create_field
            * `delete_field` - delete_field
            * `update_field` - update_field
            * `duplicate_field` - duplicate_field
            * `change_primary_field` - change_primary_field
            * `create_widget` - create_widget
            * `update_widget` - update_widget
            * `delete_widget` - delete_widget
            * `update_dashboard_data_source` - update_dashboard_data_source
            * `generate_formula_with_ai` - generate_formula_with_ai
            * `create_row_comment` - create_row_comment
            * `delete_row_comment` - delete_row_comment
            * `update_row_comment` - update_row_comment
            * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug
            * `create_team` - create_team
            * `update_team` - update_team
            * `delete_team` - delete_team
            * `create_team_subject` - create_team_subject
            * `delete_team_subject` - delete_team_subject
            * `batch_assign_role` - batch_assign_role
            * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval
        filter_from_timestamp:
          type: string
          format: date-time
          description: 'Optional: The start date to filter the audit log by.'
        filter_to_timestamp:
          type: string
          format: date-time
          description: 'Optional: The end date to filter the audit log by.'
        exclude_columns:
          type: string
          description: 'Optional: A comma separated list of column names to exclude
            from the export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.'
      required:
      - url
    SingleAuditLogExportJobResponse:
      type: object
      description: |-
        When mixed in to a model serializer for an ExportJob this will add an url field
        with the actual usable url of the export job's file (if it has one).
      properties:
        url:
          type: string
          format: uri
          readOnly: true
          description: The URL to download the exported file.
        export_charset:
          allOf:
          - "$ref": "#/components/schemas/ExportCharsetEnum"
          default: utf-8
          description: |-
            The character set to use when creating the export file.

            * `utf-8` - utf-8
            * `iso-8859-6` - iso-8859-6
            * `windows-1256` - windows-1256
            * `iso-8859-4` - iso-8859-4
            * `windows-1257` - windows-1257
            * `iso-8859-14` - iso-8859-14
            * `iso-8859-2` - iso-8859-2
            * `windows-1250` - windows-1250
            * `gbk` - gbk
            * `gb18030` - gb18030
            * `big5` - big5
            * `koi8-r` - koi8-r
            * `koi8-u` - koi8-u
            * `iso-8859-5` - iso-8859-5
            * `windows-1251` - windows-1251
            * `x-mac-cyrillic` - mac-cyrillic
            * `iso-8859-7` - iso-8859-7
            * `windows-1253` - windows-1253
            * `iso-8859-8` - iso-8859-8
            * `windows-1255` - windows-1255
            * `euc-jp` - euc-jp
            * `iso-2022-jp` - iso-2022-jp
            * `shift-jis` - shift-jis
            * `euc-kr` - euc-kr
            * `macintosh` - macintosh
            * `iso-8859-10` - iso-8859-10
            * `iso-8859-16` - iso-8859-16
            * `windows-874` - cp874
            * `windows-1254` - windows-1254
            * `windows-1258` - windows-1258
            * `iso-8859-1` - iso-8859-1
            * `windows-1252` - windows-1252
            * `iso-8859-3` - iso-8859-3
        csv_column_separator:
          allOf:
          - "$ref": "#/components/schemas/CsvColumnSeparatorEnum"
          default: ","
          description: "The value used to separate columns in the resulting csv file.\n\n*
            `,` - ,\n* `;` - ;\n* `|` - |\n* `tab` - \t\n* `record_separator` - \x1E\n*
            `unit_separator` - \x1F"
        csv_first_row_header:
          type: boolean
          default: true
          description: Whether or not to generate a header row at the top of the csv
            file.
        filter_user_id:
          type: integer
          minimum: 0
          description: 'Optional: The user to filter the audit log by.'
        filter_workspace_id:
          type: integer
          minimum: 0
          description: 'Optional: The workspace to filter the audit log by.'
        filter_action_type:
          allOf:
          - "$ref": "#/components/schemas/FilterActionTypeEnum"
          description: |-
            Optional: The action type to filter the audit log by.

            * `create_group` - create_group
            * `delete_group` - delete_group
            * `update_group` - update_group
            * `order_groups` - order_groups
            * `create_application` - create_application
            * `update_application` - update_application
            * `delete_application` - delete_application
            * `order_applications` - order_applications
            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_group_invitation` - create_group_invitation
            * `delete_group_invitation` - delete_group_invitation
            * `accept_group_invitation` - accept_group_invitation
            * `reject_group_invitation` - reject_group_invitation
            * `update_group_invitation_permissions` - update_group_invitation_permissions
            * `leave_group` - leave_group
            * `create_initial_workspace` - create_initial_workspace
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `create_snapshot` - create_snapshot
            * `delete_snapshot` - delete_snapshot
            * `restore_snapshot` - restore_snapshot
            * `empty_trash` - empty_trash
            * `restore_from_trash` - restore_from_trash
            * `create_user` - create_user
            * `update_user` - update_user
            * `schedule_user_deletion` - schedule_user_deletion
            * `cancel_user_deletion` - cancel_user_deletion
            * `sign_in_user` - sign_in_user
            * `change_user_password` - change_user_password
            * `send_reset_user_password` - send_reset_user_password
            * `reset_user_password` - reset_user_password
            * `send_verify_email` - send_verify_email
            * `verify_email` - verify_email
            * `create_db_token` - create_db_token
            * `update_db_token_name` - update_db_token_name
            * `update_db_token_permissions` - update_db_token_permissions
            * `rotate_db_token_key` - rotate_db_token_key
            * `delete_db_token_key` - delete_db_token_key
            * `create_webhook` - create_webhook
            * `delete_webhook` - delete_webhook
            * `update_webhook` - update_webhook
            * `export_table` - export_table
            * `import_database_from_airtable` - import_database_from_airtable
            * `create_table` - create_table
            * `delete_table` - delete_table
            * `order_tables` - order_tables
            * `update_table` - update_table
            * `duplicate_table` - duplicate_table
            * `create_row` - create_row
            * `create_rows` - create_rows
            * `import_rows` - import_rows
            * `delete_row` - delete_row
            * `delete_rows` - delete_rows
            * `move_row` - move_row
            * `update_row` - update_row
            * `update_rows` - update_rows
            * `create_view` - create_view
            * `duplicate_view` - duplicate_view
            * `delete_view` - delete_view
            * `order_views` - order_views
            * `update_view` - update_view
            * `create_view_filter` - create_view_filter
            * `update_view_filter` - update_view_filter
            * `delete_view_filter` - delete_view_filter
            * `create_view_sort` - create_view_sort
            * `update_view_sort` - update_view_sort
            * `delete_view_sort` - delete_view_sort
            * `create_view_group` - create_view_group
            * `update_view_group` - update_view_group
            * `delete_view_group` - delete_view_group
            * `submit_form` - submit_form
            * `rotate_view_slug` - rotate_view_slug
            * `update_view_field_options` - update_view_field_options
            * `create_decoration` - create_decoration
            * `update_decoration` - update_decoration
            * `delete_decoration` - delete_decoration
            * `create_view_filter_group` - create_view_filter_group
            * `update_view_filter_group` - update_view_filter_group
            * `delete_view_filter_group` - delete_view_filter_group
            * `create_data_sync_table` - create_data_sync_table
            * `update_data_sync_table` - update_data_sync_table
            * `sync_data_sync_table` - sync_data_sync_table
            * `create_field` - create_field
            * `delete_field` - delete_field
            * `update_field` - update_field
            * `duplicate_field` - duplicate_field
            * `change_primary_field` - change_primary_field
            * `create_widget` - create_widget
            * `update_widget` - update_widget
            * `delete_widget` - delete_widget
            * `update_dashboard_data_source` - update_dashboard_data_source
            * `generate_formula_with_ai` - generate_formula_with_ai
            * `create_row_comment` - create_row_comment
            * `delete_row_comment` - delete_row_comment
            * `update_row_comment` - update_row_comment
            * `rotate_calendar_ical_view_slug` - rotate_calendar_ical_view_slug
            * `create_team` - create_team
            * `update_team` - update_team
            * `delete_team` - delete_team
            * `create_team_subject` - create_team_subject
            * `delete_team_subject` - delete_team_subject
            * `batch_assign_role` - batch_assign_role
            * `update_periodic_data_sync_interval` - update_periodic_data_sync_interval
        filter_from_timestamp:
          type: string
          format: date-time
          description: 'Optional: The start date to filter the audit log by.'
        filter_to_timestamp:
          type: string
          format: date-time
          description: 'Optional: The end date to filter the audit log by.'
        exclude_columns:
          type: string
          description: 'Optional: A comma separated list of column names to exclude
            from the export. Available options are `user_email, user_id, workspace_name,
            workspace_id, type, description, timestamp, ip_address`.'
        created_on:
          type: string
          format: date-time
          readOnly: true
          description: The date and time when the export job was created.
        exported_file_name:
          type: string
          readOnly: true
          description: The name of the file that was created by the export job.
      required:
      - created_on
      - exported_file_name
      - url
    SingleSelectFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
      required:
      - name
      - type
    SingleSelectFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    SingleSelectFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    SingleSelectFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        select_options:
          type: array
          items:
            "$ref": "#/components/schemas/SelectOption"
    Snapshot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        snapshot_from_application:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        created_by:
          allOf:
          - "$ref": "#/components/schemas/User"
          readOnly: true
      required:
      - created_at
      - created_by
      - id
      - name
      - snapshot_from_application
    SortOnEnum:
      enum:
      - SERIES
      - GROUP_BY
      - PRIMARY
      type: string
      description: |-
        * `SERIES` - Series
        * `GROUP_BY` - Group by
        * `PRIMARY` - Primary
    SourceTypeEnum:
      enum:
      - url
      - embed
      type: string
      description: |-
        * `url` - Url
        * `embed` - Embed
    StateEnum:
      enum:
      - pending
      - exporting
      - cancelled
      - finished
      - failed
      - expired
      type: string
      description: |-
        * `pending` - pending
        * `exporting` - exporting
        * `cancelled` - cancelled
        * `finished` - finished
        * `failed` - failed
        * `expired` - expired
    StyleBackgroundEnum:
      enum:
      - none
      - color
      - image
      type: string
      description: |-
        * `none` - None
        * `color` - Color
        * `image` - Image
    StyleBackgroundModeEnum:
      enum:
      - tile
      - fill
      - fit
      type: string
      description: |-
        * `tile` - Tile
        * `fill` - Fill
        * `fit` - Fit
    StyleEnum:
      enum:
      - star
      - heart
      - thumbs-up
      - flag
      - smile
      type: string
      description: |-
        * `star` - Star
        * `heart` - Heart
        * `thumbs-up` - Thumbs Up
        * `flag` - Flag
        * `smile` - Smile
    StyleWidthChildEnum:
      enum:
      - normal
      - medium
      - small
      type: string
      description: |-
        * `normal` - Normal
        * `medium` - Medium
        * `small` - Small
    StyleWidthEnum:
      enum:
      - full
      - full-width
      - normal
      - medium
      - small
      type: string
      description: |-
        * `full` - Full
        * `full-width` - Full Width
        * `normal` - Normal
        * `medium` - Medium
        * `small` - Small
    SubDomainCreateDomain:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type509Enum"
          description: |-
            The type of the domain.

            * `custom` - custom
            * `sub_domain` - sub_domain
        domain_name:
          type: string
          maxLength: 255
      required:
      - domain_name
      - type
    SubDomainDomain:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the domain.
        domain_name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        builder_id:
          type: integer
          readOnly: true
        last_published:
          type: string
          format: date-time
          nullable: true
          description: Last publication date of this domain
      required:
      - builder_id
      - domain_name
      - id
      - order
      - type
    SubjectType0b2Enum:
      enum:
      - auth.User
      type: string
      description: "* `auth.User` - auth.User"
    SubjectType398Enum:
      enum:
      - auth.User
      - anonymous
      - user_source.user
      - core.Token
      - baserow_enterprise.Team
      type: string
      description: |-
        * `auth.User` - auth.User
        * `anonymous` - anonymous
        * `user_source.user` - user_source.user
        * `core.Token` - core.Token
        * `baserow_enterprise.Team` - baserow_enterprise.Team
    SubjectUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
      required:
      - email
      - first_name
      - id
      - username
    SubmitActionEnum:
      enum:
      - MESSAGE
      - REDIRECT
      type: string
      description: |-
        * `MESSAGE` - Message
        * `REDIRECT` - Redirect
    SummaryWidgetCreateWidget:
      type: object
      description: This serializer allow to set the type of the new widget.
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        type:
          allOf:
          - "$ref": "#/components/schemas/Type7baEnum"
          description: |-
            The type of the widget.

            * `summary` - summary
            * `chart` - chart
      required:
      - title
      - type
    SummaryWidgetUpdateWidget:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
    SummaryWidgetWidget:
      type: object
      description: Basic widget serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        dashboard_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the widget.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        data_source_id:
          type: integer
          description: References a data source field for the widget.
      required:
      - dashboard_id
      - description
      - id
      - order
      - title
      - type
    SyncDataSyncTableJobCreateJob:
      type: object
      properties:
        type:
          allOf:
          - "$ref": "#/components/schemas/Type99fEnum"
          description: |-
            The type of the job.

            * `duplicate_application` - duplicate_application
            * `install_template` - install_template
            * `create_snapshot` - create_snapshot
            * `restore_snapshot` - restore_snapshot
            * `export_applications` - export_applications
            * `import_applications` - import_applications
            * `airtable` - airtable
            * `file_import` - file_import
            * `duplicate_table` - duplicate_table
            * `duplicate_field` - duplicate_field
            * `sync_data_sync_table` - sync_data_sync_table
            * `duplicate_page` - duplicate_page
            * `publish_domain` - publish_domain
            * `audit_log_export` - audit_log_export
        data_sync_id:
          type: integer
          description: The ID of data sync to sync.
      required:
      - data_sync_id
      - type
    SyncDataSyncTableJobJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        data_sync:
          allOf:
          - "$ref": "#/components/schemas/DataSync"
          readOnly: true
      required:
      - data_sync
      - id
      - progress_percentage
      - state
      - type
    SyncDataSyncTableJobTypeResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the job.
        progress_percentage:
          type: integer
          description: A percentage indicating how far along the job is. 100 means
            that it's finished.
        state:
          type: string
          description: Indicates the state of the import job.
        human_readable_error:
          type: string
          description: A human readable error message indicating what went wrong.
        data_sync:
          allOf:
          - "$ref": "#/components/schemas/DataSync"
          readOnly: true
      required:
      - data_sync
      - id
      - progress_percentage
      - state
      - type
    Table:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        database_id:
          type: integer
          readOnly: true
        data_sync:
          "$ref": "#/components/schemas/DataSync"
      required:
      - data_sync
      - database_id
      - id
      - name
      - order
    TableCellAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    TableCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        data:
          type: array
          items: {}
          description: "A list of rows that needs to be created as initial table data.
            Each row is a list of values that are going to be added in the new table
            in the same order as provided.\n\nEx: \n```json\n[\n  [\"row1_field1_value\",
            \"row1_field2_value\"],\n  [\"row2_field1_value\", \"row2_field2_value\"],\n]\n```\nfor
            creating a two rows table with two fields.\n\nIf not provided, some example
            data is going to be created."
          minItems: 1
        first_row_header:
          type: boolean
          default: false
          description: Indicates if the first provided row is the header. If true
            the field names are going to be the values of the first row. Otherwise
            they will be called "Field N"
      required:
      - name
    TableElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/ButtonTableButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionField"
        orientation:
          description: The table orientation (horizontal or vertical) for each device
            type
      required:
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - type
    TableElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonTableButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionField"
        orientation:
          description: The table orientation (horizontal or vertical) for each device
            type
      required:
      - id
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - page_id
      - parent_element_id
      - type
    TableElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonTableButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionField"
        orientation:
          description: The table orientation (horizontal or vertical) for each device
            type
      required:
      - id
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
      - order
      - page_id
      - parent_element_id
      - type
    TableElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/ButtonTableButtonConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        schema_property:
          type: string
          nullable: true
          description: A multiple valued schema property to use for the data source.
        data_source_id:
          type: integer
          nullable: true
          description: The data source we want to show in the element for. Only data_sources
            that return list are allowed.
        items_per_page:
          type: integer
          default: 20
          description: The amount item loaded with each page.
        button_load_more_label:
          type: string
          default: ''
          description: The label of the show more button
        property_options:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionElementPropertyOptions"
          description: The schema property options that can be set for the collection
            element.
        is_publicly_sortable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly sortable.
        is_publicly_filterable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly filterable.
        is_publicly_searchable:
          type: boolean
          readOnly: true
          default: true
          description: Whether this collection element is publicly searchable.
        fields:
          type: array
          items:
            "$ref": "#/components/schemas/CollectionField"
        orientation:
          description: The table orientation (horizontal or vertical) for each device
            type
      required:
      - is_publicly_filterable
      - is_publicly_searchable
      - is_publicly_sortable
    TableHeaderFontWeightEnum:
      enum:
      - thin
      - extra-light
      - light
      - regular
      - medium
      - semi-bold
      - bold
      - extra-bold
      - heavy
      - black
      - extra-black
      type: string
      description: |-
        * `thin` - Thin
        * `extra-light` - Extra Light
        * `light` - Light
        * `regular` - Regular
        * `medium` - Medium
        * `semi-bold` - Semi Bold
        * `bold` - Bold
        * `extra-bold` - Extra Bold
        * `heavy` - Heavy
        * `black` - Black
        * `extra-black` - Extra Black
    TableHeaderTextAlignmentEnum:
      enum:
      - left
      - center
      - right
      type: string
      description: |-
        * `left` - Left
        * `center` - Center
        * `right` - Right
    TableImport:
      type: object
      properties:
        data:
          type: array
          items: {}
          description: "A list of rows you want to add to the specified table. Each
            row is a list of values, one for each **writable** field. The field values
            must be ordered according to the field order in the table. All values
            must be compatible with the corresponding field type.\n\nEx: \n```json\n[\n
            \ [\"row1_field1_value\", \"row1_field2_value\"],\n  [\"row2_field1_value\",
            \"row2_field2_value\"],\n]\n```\nfor adding two rows to a table with two
            writable fields."
          minItems: 1
        configuration:
          "$ref": "#/components/schemas/TableImportConfiguration"
      required:
      - data
    TableImportConfiguration:
      type: object
      description: Additional table import configuration.
      properties:
        upsert_fields:
          type: array
          items:
            type: integer
            minimum: 1
          nullable: true
          description: "<function TableImportConfiguration.<lambda> at 0x7f1141fe1b20>"
          minItems: 1
        upsert_values:
          type: array
          items:
            type: array
            items: {}
            minItems: 1
          nullable: true
          description: |-
            A list of values that are identifying rows in imported data.
             The number of rows in `upsert_values` should be equal to the number of rows in imported data. Each row in `upsert_values` should contain a list of values that match the number and field types of fields selected in `upsert_fields`. Based on `upsert_fields`, a similar upsert values will be calculated for each row in the table.
             There's no guarantee of uniqueness of row identification calculated from `upsert_values` nor from the table. Repeated upsert values are compared in order with matching values in the table. The imported data must be in the same order as the table rows for correct matching.
    TableWebhook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        events:
          type: object
          additionalProperties: {}
          readOnly: true
          description: A list containing the events that will trigger this webhook.
        event_config:
          type: array
          items:
            "$ref": "#/components/schemas/TableWebhookEventConfig"
          readOnly: true
          description: A list containing the addition event options.
        headers:
          type: object
          additionalProperties: {}
          readOnly: true
          description: The additional headers as an object where the key is the name
            and the value the value.
        calls:
          type: array
          items:
            "$ref": "#/components/schemas/TableWebhookCall"
          description: All the calls that this webhook made.
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key
            instead of the id.
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        request_method:
          allOf:
          - "$ref": "#/components/schemas/RequestMethodEnum"
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
        name:
          type: string
          description: An internal name of the webhook.
          maxLength: 255
        include_all_events:
          type: boolean
          description: Indicates whether this webhook should listen to all events.
        failed_triggers:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The amount of failed webhook calls.
        active:
          type: boolean
          description: Indicates whether the web hook is active. When a webhook has
            failed multiple times, it will automatically be deactivated.
      required:
      - calls
      - created_on
      - event_config
      - events
      - headers
      - id
      - name
      - updated_on
      - url
    TableWebhookCall:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event_id:
          type: string
          format: uuid
          readOnly: true
          description: Event ID where the call originated from.
        event_type:
          type: string
          maxLength: 50
        called_time:
          type: string
          format: date-time
          nullable: true
        called_url:
          type: string
          maxLength: 2000
        request:
          type: string
          readOnly: true
          description: A text copy of the request headers and body.
        response:
          type: string
          readOnly: true
          description: A text copy of the response headers and body.
        response_status:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The HTTP response status code.
        error:
          type: string
          nullable: true
          description: An internal error reflecting what went wrong.
      required:
      - called_url
      - event_id
      - event_type
      - id
      - request
      - response
    TableWebhookCreateRequest:
      type: object
      properties:
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        include_all_events:
          type: boolean
          description: Indicates whether this webhook should listen to all events.
        events:
          type: array
          items:
            "$ref": "#/components/schemas/EventsEnum"
          description: A list containing the events that will trigger this webhook.
        event_config:
          type: array
          items:
            "$ref": "#/components/schemas/TableWebhookEventConfig"
          description: A list containing the addition event options.
        request_method:
          allOf:
          - "$ref": "#/components/schemas/RequestMethodEnum"
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
        headers:
          type: object
          additionalProperties: {}
          description: The additional headers as an object where the key is the name
            and the value the value.
        name:
          type: string
          description: An internal name of the webhook.
          maxLength: 255
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key
            instead of the id.
      required:
      - name
      - url
    TableWebhookEventConfig:
      type: object
      properties:
        event_type:
          allOf:
          - "$ref": "#/components/schemas/EventTypeEnum"
          description: |-
            The type of the event.

            * `rows.created` - rows.created
            * `rows.updated` - rows.updated
            * `rows.deleted` - rows.deleted
            * `field.created` - field.created
            * `field.updated` - field.updated
            * `field.deleted` - field.deleted
            * `view.created` - view.created
            * `view.updated` - view.updated
            * `view.deleted` - view.deleted
            * `view.rows_entered` - view.rows_entered
        fields:
          type: array
          items:
            type: integer
          description: A list of field IDs that are related to the event.
        views:
          type: array
          items:
            type: integer
          description: A list of view IDs that are related to the event.
      required:
      - event_type
    TableWebhookTestCallRequest:
      type: object
      properties:
        url:
          type: string
          description: The URL that must be called when the webhook is triggered.
          maxLength: 2000
        event_type:
          allOf:
          - "$ref": "#/components/schemas/EventTypeEnum"
          description: |-
            The event type that must be used for the test call.

            * `rows.created` - rows.created
            * `rows.updated` - rows.updated
            * `rows.deleted` - rows.deleted
            * `field.created` - field.created
            * `field.updated` - field.updated
            * `field.deleted` - field.deleted
            * `view.created` - view.created
            * `view.updated` - view.updated
            * `view.deleted` - view.deleted
            * `view.rows_entered` - view.rows_entered
        request_method:
          allOf:
          - "$ref": "#/components/schemas/RequestMethodEnum"
          description: |-
            The request method that be used when the event occurs.

            * `POST` - Post
            * `GET` - Get
            * `PUT` - Put
            * `PATCH` - Patch
            * `DELETE` - Delete
        headers:
          type: object
          additionalProperties: {}
          description: The additional headers as an object where the key is the name
            and the value the value.
        use_user_field_names:
          type: boolean
          description: Indicates whether the field names must be used as payload key
            instead of the id.
      required:
      - event_type
      - url
    TableWebhookTestCallResponse:
      type: object
      properties:
        request:
          type: string
          readOnly: true
          description: A text copy of the request headers and body.
        response:
          type: string
          readOnly: true
          description: A text copy of the response headers and body.
        status_code:
          type: integer
          readOnly: true
          description: The HTTP response status code.
        is_unreachable:
          type: boolean
          readOnly: true
          description: Indicates whether the provided URL could be reached.
      required:
      - is_unreachable
      - request
      - response
      - status_code
    TableWithoutDataSync:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        database_id:
          type: integer
          readOnly: true
      required:
      - database_id
      - id
      - name
      - order
    TargetEnum:
      enum:
      - self
      - blank
      type: string
      description: |-
        * `self` - Self
        * `blank` - Blank
    Team:
      type: object
      description: |-
        Mixin to a DRF serializer class to raise an exception if data with unknown fields
        is provided to the serializer.
      properties:
        name:
          type: string
          description: A human friendly name for this team.
          maxLength: 160
        default_role:
          type: string
          nullable: true
          description: The uid of the role you want to assign to the team in the given
            workspace. You can omit this property if you want to remove the role.
        subjects:
          type: array
          items:
            "$ref": "#/components/schemas/TeamSubject"
          default: []
          description: An array of subject ID/type objects to be used during team
            create and update.
      required:
      - name
    TeamResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: A human friendly name for this team.
          maxLength: 160
        workspace:
          type: integer
          description: The workspace that this team belongs to.
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        default_role:
          type: string
          description: The uid of the role this team has in its workspace.
        subject_count:
          type: integer
          description: The amount of subjects (e.g. users) that are currently assigned
            to this team.
        subject_sample:
          type: array
          items:
            "$ref": "#/components/schemas/TeamSampleSubject"
          description: A sample, by default 10, of the most recent subjects to join
            this team.
      required:
      - created_on
      - id
      - name
      - subject_count
      - updated_on
      - workspace
    TeamSampleSubject:
      type: object
      properties:
        subject_id:
          type: integer
          description: The subject's unique identifier.
        subject_type:
          allOf:
          - "$ref": "#/components/schemas/SubjectType0b2Enum"
          description: |-
            The type of subject who belongs to the team.

            * `auth.User` - auth.User
        subject_label:
          type: string
          description: The subject's label. Defaults to a user's first name.
        team_subject_id:
          type: integer
          description: The team subject unique identifier.
      required:
      - subject_id
      - subject_label
      - subject_type
      - team_subject_id
    TeamSubject:
      type: object
      description: |-
        Mixin to a DRF serializer class to raise an exception if data with unknown fields
        is provided to the serializer.
      properties:
        id:
          type: integer
          readOnly: true
        subject_id:
          type: integer
          description: The subject's unique identifier.
        subject_user_email:
          type: string
          format: email
          description: The user subject's email address.
        subject_type:
          allOf:
          - "$ref": "#/components/schemas/SubjectType0b2Enum"
          description: |-
            The type of subject that is being invited.

            * `auth.User` - auth.User
      required:
      - id
      - subject_type
    TeamSubjectResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        subject_id:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: The unique subject ID.
        subject_type:
          type: string
          description: |-
            Returns the TeamSubject's `subject_type` natural key.

            :param obj: The TeamSubject record.
            :return: The subject's content type natural key.
          readOnly: true
        team:
          type: integer
          description: The team this subject belongs to.
      required:
      - id
      - subject_id
      - subject_type
      - team
    Template:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        slug:
          type: string
          description: The template slug that is used to match the template with the
            JSON file name.
          maxLength: 50
          pattern: "^[-a-zA-Z0-9_]+$"
        icon:
          type: string
          description: The icon class name that can be used for displaying purposes.
          maxLength: 32
        keywords:
          type: string
          description: Keywords related to the template that can be used for search.
        workspace_id:
          type: integer
          nullable: true
          description: The group containing the applications related to the template.
            The read endpoints related to that group are publicly accessible for preview
            purposes.
          readOnly: true
        is_default:
          type: string
          readOnly: true
          description: Indicates if the template must be selected by default. The
            web-frontend automatically selects the first `is_default` template that
            it can find.
        open_application:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          description: The application ID that must be opened when the template is
            previewed. If null, then the first will automatically be chosen.
      required:
      - icon
      - id
      - is_default
      - name
      - slug
      - workspace_id
    TemplateCategories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 32
        templates:
          type: array
          items:
            "$ref": "#/components/schemas/Template"
          readOnly: true
      required:
      - id
      - name
      - templates
    TextElementCreateElement:
      type: object
      description: |-
        This serializer allow to set the type of an element and the element id before which
        we want to insert the new element.
      properties:
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        before_id:
          type: integer
          description: If provided, creates the element before the element with the
            given id.
        type:
          allOf:
          - "$ref": "#/components/schemas/TypeBc8Enum"
          description: |-
            The type of the element.

            * `heading` - heading
            * `text` - text
            * `rating` - rating
            * `rating_input` - rating_input
            * `link` - link
            * `image` - image
            * `input_text` - input_text
            * `column` - column
            * `button` - button
            * `table` - table
            * `repeat` - repeat
            * `record_selector` - record_selector
            * `form_container` - form_container
            * `choice` - choice
            * `checkbox` - checkbox
            * `iframe` - iframe
            * `datetime_picker` - datetime_picker
            * `header` - header
            * `footer` - footer
            * `menu` - menu
            * `simple_container` - simple_container
            * `auth_form` - auth_form
        parent_element_id:
          type: integer
          nullable: true
          description: If provided, creates the element as a child of the element
            with the given id.
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          allOf:
          - "$ref": "#/components/schemas/Visibility789Enum"
          default: all
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        value:
          type: string
          default: ''
          description: The value of the element. Must be a formula.
        format:
          allOf:
          - "$ref": "#/components/schemas/FormatEnum"
          default: plain
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
      required:
      - order
      - type
    TextElementElement:
      type: object
      description: "Basic element serializer mostly for returned values.\n\n\U0001F449
        Mind to update the\nbaserow.contrib.builder.api.domains.serializer.PublicElementSerializer\nwhen
        you update this one."
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The value of the element. Must be a formula.
        format:
          allOf:
          - "$ref": "#/components/schemas/FormatEnum"
          default: plain
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    TextElementPublicElement:
      type: object
      description: Basic element serializer mostly for returned values.
      properties:
        id:
          type: integer
          readOnly: true
        page_id:
          type: integer
          readOnly: true
        type:
          type: string
          readOnly: true
          description: The type of the element.
        order:
          type: string
          format: decimal
          pattern: "^-?\\d{0,20}(?:\\.\\d{0,20})?$"
          readOnly: true
          description: Lowest first.
        parent_element_id:
          type: integer
          nullable: true
          description: The parent element, if inside a container.
          readOnly: true
        place_in_container:
          type: string
          nullable: true
          description: The place in the container.
          maxLength: 255
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The value of the element. Must be a formula.
        format:
          allOf:
          - "$ref": "#/components/schemas/FormatEnum"
          default: plain
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
      required:
      - id
      - order
      - page_id
      - parent_element_id
      - type
    TextElementUpdateElement:
      type: object
      properties:
        visibility:
          "$ref": "#/components/schemas/Visibility789Enum"
        styles:
          "$ref": "#/components/schemas/TypographyConfigBlock"
        style_border_top_color:
          type: string
          description: Top border color.
          maxLength: 255
        style_border_top_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the top border.
        style_padding_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the top border.
        style_margin_top:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the top border.
        style_border_bottom_color:
          type: string
          description: Bottom border color
          maxLength: 255
        style_border_bottom_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the bottom border.
        style_padding_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the bottom border.
        style_margin_bottom:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the bottom border.
        style_border_left_color:
          type: string
          description: Left border color
          maxLength: 255
        style_border_left_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the left border.
        style_padding_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the left border.
        style_margin_left:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the left border.
        style_background_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Background radius.
        style_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Border radius.
        style_border_right_color:
          type: string
          description: Right border color
          maxLength: 255
        style_border_right_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Pixel height of the right border.
        style_padding_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Padding size of the right border.
        style_margin_right:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Margin size of the right border.
        style_background:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundEnum"
          description: |-
            What type of background the element should have.

            * `none` - None
            * `color` - Color
            * `image` - Image
        style_background_color:
          type: string
          description: The background color if `style_background` is color.
          maxLength: 255
        style_background_file:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The background image file
        style_background_mode:
          allOf:
          - "$ref": "#/components/schemas/StyleBackgroundModeEnum"
          description: |-
            The mode of the background image

            * `tile` - Tile
            * `fill` - Fill
            * `fit` - Fit
        style_width:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthEnum"
          description: |-
            Indicates the width of the root element.

            * `full` - Full
            * `full-width` - Full Width
            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        style_width_child:
          allOf:
          - "$ref": "#/components/schemas/StyleWidthChildEnum"
          description: |-
            Indicates the width of the child element.

            * `normal` - Normal
            * `medium` - Medium
            * `small` - Small
        role_type:
          "$ref": "#/components/schemas/RoleTypeEnum"
        roles:
          description: User roles associated with this element, used in conjunction
            with role_type.
        value:
          type: string
          default: ''
          description: The value of the element. Must be a formula.
        format:
          allOf:
          - "$ref": "#/components/schemas/FormatEnum"
          default: plain
          description: |-
            The format of the text

            * `plain` - Plain
            * `markdown` - Markdown
    TextFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row
            created.
          maxLength: 255
      required:
      - name
      - type
    TextFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row
            created.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    TextFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row
            created.
          maxLength: 255
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    TextFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
        text_default:
          type: string
          description: If set, this value is going to be added every time a new row
            created.
          maxLength: 255
    TimeFormatEnum:
      enum:
      - '24'
      - '12'
      type: string
      description: |-
        * `24` - 24 hour
        * `12` - 12 hour
    TimelineViewCreateView:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/TypeBc4Enum"
        ownership_type:
          allOf:
          - "$ref": "#/components/schemas/OwnershipTypeEnum"
          default: collaborative
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        start_date_field:
          type: integer
          nullable: true
        end_date_field:
          type: integer
          nullable: true
        timescale:
          allOf:
          - "$ref": "#/components/schemas/TimescaleEnum"
          description: |-
            The timescale that the timeline should be displayed in.

            * `day` - Day
            * `week` - Week
            * `month` - Month
            * `year` - Year
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - name
      - slug
      - type
    TimelineViewFieldOptions:
      type: object
      properties:
        hidden:
          type: boolean
          description: Whether or not the field should be hidden in the card.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The order that the field has in the view. Lower value is first.
    TimelineViewView:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
        start_date_field:
          type: integer
          nullable: true
        end_date_field:
          type: integer
          nullable: true
        timescale:
          allOf:
          - "$ref": "#/components/schemas/TimescaleEnum"
          description: |-
            The timescale that the timeline should be displayed in.

            * `day` - Day
            * `week` - Week
            * `month` - Month
            * `year` - Year
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - slug
      - table
      - table_id
      - type
    TimescaleEnum:
      enum:
      - day
      - week
      - month
      - year
      type: string
      description: |-
        * `day` - Day
        * `week` - Week
        * `month` - Month
        * `year` - Year
    Token:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: The human readable name of the database token for the user.
          maxLength: 100
        workspace:
          type: integer
          description: Only the tables of the workspace can be accessed.
        key:
          type: string
          description: The unique token key that can be used to authorize for the
            table row endpoints.
          maxLength: 32
        permissions:
          type: object
          description: |-
            Indicates per operation which permissions the database token has within the whole workspace. If the value of for example `create` is `true`, then the token can create rows in all tables related to the workspace. If a list is provided with for example `[["table", 1]]` then the token only has create permissions for the table with id 1. Same goes for if a database references is provided. `[['database', 1]]` means create permissions for all tables in the database with id 1.

            Example:
            ```json
            {
              "create": true// Allows creating rows in all tables.
              // Allows reading rows from database 1 and table 10.
              "read": [["database", 1], ["table", 10]],
              "update": false  // Denies updating rows in all tables.
              "delete": []  // Denies deleting rows in all tables.
             }
            ```
          properties:
            create:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            read:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            update:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
            delete:
              anyOf:
              - type: boolean
                description: Indicating if the database token has permissions to all
                  tables.
                example: true
              - type: array
                items:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                    - type: string
                      example: database
                      description: First element should indicate the reference type
                        `database` or `table`.
                    - type: number
                      example: 1
                      description: Second element should indicate the ID of the reference.
      required:
      - id
      - key
      - name
      - permissions
      - workspace
    TokenBlacklist:
      type: object
      properties:
        refresh:
          type: string
          writeOnly: true
      required:
      - refresh
    TokenCreate:
      type: object
      properties:
        name:
          type: string
          description: The human readable name of the database token for the user.
          maxLength: 100
        workspace:
          type: integer
          description: Only the tables of the workspace can be accessed.
      required:
      - name
      - workspace
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenObtainPairWithUser:
      type: object
      properties:
        email:
          type: string
          format: email
        username:
          type: string
          format: email
          description: Deprecated. Use `email` instead.
          deprecated: true
        password:
          type: string
          writeOnly: true
      required:
      - password
    TokenRefreshWithUser:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh_token:
          type: string
        token:
          type: string
          description: Deprecated. Use `refresh_token` instead.
          deprecated: true
      required:
      - access
    TokenVerifyWithUser:
      type: object
      properties:
        token:
          type: string
          description: Deprecated. Use `refresh_token` instead.
          deprecated: true
        refresh_token:
          type: string
      required:
      - refresh_token
    TrashContents:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_who_trashed:
          type: string
          readOnly: true
        trash_item_type:
          type: string
        trash_item_id:
          type: integer
          maximum: 2147483647
          minimum: 0
        parent_trash_item_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        trashed_at:
          type: string
          format: date-time
          readOnly: true
        application:
          type: integer
          nullable: true
        workspace:
          type: integer
        name:
          type: string
        names:
          type: array
          items:
            type: string
          nullable: true
        parent_name:
          type: string
          nullable: true
      required:
      - id
      - name
      - parent_trash_item_id
      - trash_item_id
      - trash_item_type
      - trashed_at
      - user_who_trashed
      - workspace
    TrashItemTypeEnum:
      enum:
      - workspace
      - application
      - table
      - field
      - row
      - rows
      - view
      - builder_domain
      - widget
      - row_comment
      - team
      type: string
      description: |-
        * `workspace` - workspace
        * `application` - application
        * `table` - table
        * `field` - field
        * `row` - row
        * `rows` - rows
        * `view` - view
        * `builder_domain` - builder_domain
        * `widget` - widget
        * `row_comment` - row_comment
        * `team` - team
    TrashStructure:
      type: object
      properties:
        workspaces:
          type: array
          items:
            "$ref": "#/components/schemas/TrashStructureWorkspace"
          description: An array of workspace trash structure records
      required:
      - workspaces
    TrashStructureApplication:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 160
        trashed:
          type: boolean
      required:
      - id
      - name
    TrashStructureWorkspace:
      type: object
      properties:
        id:
          type: integer
          minimum: 0
        trashed:
          type: boolean
        name:
          type: string
        applications:
          type: array
          items:
            "$ref": "#/components/schemas/TrashStructureApplication"
      required:
      - applications
      - id
      - name
      - trashed
    Type050Enum:
      enum:
      - local_baserow
      type: string
      description: "* `local_baserow` - local_baserow"
    Type051Enum:
      enum:
      - notification
      - open_page
      - create_row
      - update_row
      - delete_row
      - logout
      - refresh_data_source
      type: string
      description: |-
        * `notification` - notification
        * `open_page` - open_page
        * `create_row` - create_row
        * `update_row` - update_row
        * `delete_row` - delete_row
        * `logout` - logout
        * `refresh_data_source` - refresh_data_source
    Type128Enum:
      enum:
      - local_baserow_password
      - saml
      - openid_connect
      type: string
      description: |-
        * `local_baserow_password` - local_baserow_password
        * `saml` - saml
        * `openid_connect` - openid_connect
    Type508Enum:
      enum:
      - equal
      - not_equal
      - filename_contains
      - files_lower_than
      - has_file_type
      - contains
      - contains_not
      - contains_word
      - doesnt_contain_word
      - length_is_lower_than
      - higher_than
      - higher_than_or_equal
      - lower_than
      - lower_than_or_equal
      - is_even_and_whole
      - date_equal
      - date_before
      - date_before_or_equal
      - date_after_days_ago
      - date_after
      - date_after_or_equal
      - date_not_equal
      - date_equals_today
      - date_before_today
      - date_after_today
      - date_within_days
      - date_within_weeks
      - date_within_months
      - date_equals_days_ago
      - date_equals_months_ago
      - date_equals_years_ago
      - date_equals_week
      - date_equals_month
      - date_equals_day_of_month
      - date_equals_year
      - date_is
      - date_is_not
      - date_is_before
      - date_is_on_or_before
      - date_is_after
      - date_is_on_or_after
      - date_is_within
      - single_select_equal
      - single_select_not_equal
      - single_select_is_any_of
      - single_select_is_none_of
      - link_row_has
      - link_row_has_not
      - link_row_contains
      - link_row_not_contains
      - boolean
      - empty
      - not_empty
      - multiple_select_has
      - multiple_select_has_not
      - multiple_collaborators_has
      - multiple_collaborators_has_not
      - user_is
      - user_is_not
      - has_value_equal
      - has_not_value_equal
      - has_value_contains
      - has_not_value_contains
      - has_value_contains_word
      - has_not_value_contains_word
      - has_value_length_is_lower_than
      - has_all_values_equal
      - has_empty_value
      - has_not_empty_value
      - has_any_select_option_equal
      - has_none_select_option_equal
      - has_value_lower
      - has_value_lower_or_equal
      - has_value_higher
      - has_value_higher_or_equal
      - has_not_value_higher_or_equal
      - has_not_value_higher
      - has_not_value_lower_or_equal
      - has_not_value_lower
      - has_date_equal
      - has_not_date_equal
      - has_date_before
      - has_not_date_before
      - has_date_on_or_before
      - has_not_date_on_or_before
      - has_date_on_or_after
      - has_not_date_on_or_after
      - has_date_after
      - has_not_date_after
      - has_date_within
      - has_not_date_within
      type: string
      description: |-
        * `equal` - equal
        * `not_equal` - not_equal
        * `filename_contains` - filename_contains
        * `files_lower_than` - files_lower_than
        * `has_file_type` - has_file_type
        * `contains` - contains
        * `contains_not` - contains_not
        * `contains_word` - contains_word
        * `doesnt_contain_word` - doesnt_contain_word
        * `length_is_lower_than` - length_is_lower_than
        * `higher_than` - higher_than
        * `higher_than_or_equal` - higher_than_or_equal
        * `lower_than` - lower_than
        * `lower_than_or_equal` - lower_than_or_equal
        * `is_even_and_whole` - is_even_and_whole
        * `date_equal` - date_equal
        * `date_before` - date_before
        * `date_before_or_equal` - date_before_or_equal
        * `date_after_days_ago` - date_after_days_ago
        * `date_after` - date_after
        * `date_after_or_equal` - date_after_or_equal
        * `date_not_equal` - date_not_equal
        * `date_equals_today` - date_equals_today
        * `date_before_today` - date_before_today
        * `date_after_today` - date_after_today
        * `date_within_days` - date_within_days
        * `date_within_weeks` - date_within_weeks
        * `date_within_months` - date_within_months
        * `date_equals_days_ago` - date_equals_days_ago
        * `date_equals_months_ago` - date_equals_months_ago
        * `date_equals_years_ago` - date_equals_years_ago
        * `date_equals_week` - date_equals_week
        * `date_equals_month` - date_equals_month
        * `date_equals_day_of_month` - date_equals_day_of_month
        * `date_equals_year` - date_equals_year
        * `date_is` - date_is
        * `date_is_not` - date_is_not
        * `date_is_before` - date_is_before
        * `date_is_on_or_before` - date_is_on_or_before
        * `date_is_after` - date_is_after
        * `date_is_on_or_after` - date_is_on_or_after
        * `date_is_within` - date_is_within
        * `single_select_equal` - single_select_equal
        * `single_select_not_equal` - single_select_not_equal
        * `single_select_is_any_of` - single_select_is_any_of
        * `single_select_is_none_of` - single_select_is_none_of
        * `link_row_has` - link_row_has
        * `link_row_has_not` - link_row_has_not
        * `link_row_contains` - link_row_contains
        * `link_row_not_contains` - link_row_not_contains
        * `boolean` - boolean
        * `empty` - empty
        * `not_empty` - not_empty
        * `multiple_select_has` - multiple_select_has
        * `multiple_select_has_not` - multiple_select_has_not
        * `multiple_collaborators_has` - multiple_collaborators_has
        * `multiple_collaborators_has_not` - multiple_collaborators_has_not
        * `user_is` - user_is
        * `user_is_not` - user_is_not
        * `has_value_equal` - has_value_equal
        * `has_not_value_equal` - has_not_value_equal
        * `has_value_contains` - has_value_contains
        * `has_not_value_contains` - has_not_value_contains
        * `has_value_contains_word` - has_value_contains_word
        * `has_not_value_contains_word` - has_not_value_contains_word
        * `has_value_length_is_lower_than` - has_value_length_is_lower_than
        * `has_all_values_equal` - has_all_values_equal
        * `has_empty_value` - has_empty_value
        * `has_not_empty_value` - has_not_empty_value
        * `has_any_select_option_equal` - has_any_select_option_equal
        * `has_none_select_option_equal` - has_none_select_option_equal
        * `has_value_lower` - has_value_lower
        * `has_value_lower_or_equal` - has_value_lower_or_equal
        * `has_value_higher` - has_value_higher
        * `has_value_higher_or_equal` - has_value_higher_or_equal
        * `has_not_value_higher_or_equal` - has_not_value_higher_or_equal
        * `has_not_value_higher` - has_not_value_higher
        * `has_not_value_lower_or_equal` - has_not_value_lower_or_equal
        * `has_not_value_lower` - has_not_value_lower
        * `has_date_equal` - has_date_equal
        * `has_not_date_equal` - has_not_date_equal
        * `has_date_before` - has_date_before
        * `has_not_date_before` - has_not_date_before
        * `has_date_on_or_before` - has_date_on_or_before
        * `has_not_date_on_or_before` - has_not_date_on_or_before
        * `has_date_on_or_after` - has_date_on_or_after
        * `has_not_date_on_or_after` - has_not_date_on_or_after
        * `has_date_after` - has_date_after
        * `has_not_date_after` - has_not_date_after
        * `has_date_within` - has_date_within
        * `has_not_date_within` - has_not_date_within
    Type509Enum:
      enum:
      - custom
      - sub_domain
      type: string
      description: |-
        * `custom` - custom
        * `sub_domain` - sub_domain
    Type6ebEnum:
      enum:
      - text
      - long_text
      - url
      - email
      - number
      - rating
      - boolean
      - date
      - last_modified
      - last_modified_by
      - created_on
      - created_by
      - duration
      - link_row
      - file
      - single_select
      - multiple_select
      - phone_number
      - formula
      - count
      - rollup
      - lookup
      - multiple_collaborators
      - uuid
      - autonumber
      - password
      - ai
      type: string
      description: |-
        * `text` - text
        * `long_text` - long_text
        * `url` - url
        * `email` - email
        * `number` - number
        * `rating` - rating
        * `boolean` - boolean
        * `date` - date
        * `last_modified` - last_modified
        * `last_modified_by` - last_modified_by
        * `created_on` - created_on
        * `created_by` - created_by
        * `duration` - duration
        * `link_row` - link_row
        * `file` - file
        * `single_select` - single_select
        * `multiple_select` - multiple_select
        * `phone_number` - phone_number
        * `formula` - formula
        * `count` - count
        * `rollup` - rollup
        * `lookup` - lookup
        * `multiple_collaborators` - multiple_collaborators
        * `uuid` - uuid
        * `autonumber` - autonumber
        * `password` - password
        * `ai` - ai
    Type7baEnum:
      enum:
      - summary
      - chart
      type: string
      description: |-
        * `summary` - summary
        * `chart` - chart
    Type99fEnum:
      enum:
      - duplicate_application
      - install_template
      - create_snapshot
      - restore_snapshot
      - export_applications
      - import_applications
      - airtable
      - file_import
      - duplicate_table
      - duplicate_field
      - sync_data_sync_table
      - duplicate_page
      - publish_domain
      - audit_log_export
      type: string
      description: |-
        * `duplicate_application` - duplicate_application
        * `install_template` - install_template
        * `create_snapshot` - create_snapshot
        * `restore_snapshot` - restore_snapshot
        * `export_applications` - export_applications
        * `import_applications` - import_applications
        * `airtable` - airtable
        * `file_import` - file_import
        * `duplicate_table` - duplicate_table
        * `duplicate_field` - duplicate_field
        * `sync_data_sync_table` - sync_data_sync_table
        * `duplicate_page` - duplicate_page
        * `publish_domain` - publish_domain
        * `audit_log_export` - audit_log_export
    Type9b4Enum:
      enum:
      - local_baserow_get_row
      - local_baserow_list_rows
      - local_baserow_aggregate_rows
      - local_baserow_upsert_row
      - local_baserow_delete_row
      - local_baserow_grouped_aggregate_rows
      type: string
      description: |-
        * `local_baserow_get_row` - local_baserow_get_row
        * `local_baserow_list_rows` - local_baserow_list_rows
        * `local_baserow_aggregate_rows` - local_baserow_aggregate_rows
        * `local_baserow_upsert_row` - local_baserow_upsert_row
        * `local_baserow_delete_row` - local_baserow_delete_row
        * `local_baserow_grouped_aggregate_rows` - local_baserow_grouped_aggregate_rows
    Type9c4Enum:
      enum:
      - left_border_color
      - background_color
      type: string
      description: |-
        * `left_border_color` - left_border_color
        * `background_color` - background_color
    TypeAc1Enum:
      enum:
      - database
      - builder
      - dashboard
      type: string
      description: |-
        * `database` - database
        * `builder` - builder
        * `dashboard` - dashboard
    TypeBc4Enum:
      enum:
      - grid
      - gallery
      - form
      - kanban
      - calendar
      - timeline
      type: string
      description: |-
        * `grid` - grid
        * `gallery` - gallery
        * `form` - form
        * `kanban` - kanban
        * `calendar` - calendar
        * `timeline` - timeline
    TypeBc8Enum:
      enum:
      - heading
      - text
      - rating
      - rating_input
      - link
      - image
      - input_text
      - column
      - button
      - table
      - repeat
      - record_selector
      - form_container
      - choice
      - checkbox
      - iframe
      - datetime_picker
      - header
      - footer
      - menu
      - simple_container
      - auth_form
      type: string
      description: |-
        * `heading` - heading
        * `text` - text
        * `rating` - rating
        * `rating_input` - rating_input
        * `link` - link
        * `image` - image
        * `input_text` - input_text
        * `column` - column
        * `button` - button
        * `table` - table
        * `repeat` - repeat
        * `record_selector` - record_selector
        * `form_container` - form_container
        * `choice` - choice
        * `checkbox` - checkbox
        * `iframe` - iframe
        * `datetime_picker` - datetime_picker
        * `header` - header
        * `footer` - footer
        * `menu` - menu
        * `simple_container` - simple_container
        * `auth_form` - auth_form
    TypeD08Enum:
      enum:
      - text
      - numeric
      type: string
      description: |-
        * `text` - text
        * `numeric` - numeric
    TypeD46Enum:
      enum:
      - ical_calendar
      - postgresql
      - local_baserow_table
      - jira_issues
      - github_issues
      - gitlab_issues
      - hubspot_contacts
      type: string
      description: |-
        * `ical_calendar` - ical_calendar
        * `postgresql` - postgresql
        * `local_baserow_table` - local_baserow_table
        * `jira_issues` - jira_issues
        * `github_issues` - github_issues
        * `gitlab_issues` - gitlab_issues
        * `hubspot_contacts` - hubspot_contacts
    TypeFormulaRequest:
      type: object
      properties:
        formula:
          type: string
        name:
          type: string
          maxLength: 255
      required:
      - formula
      - name
    TypeFormulaResult:
      type: object
      properties:
        number_prefix:
          type: string
          description: The prefix to use for the field.
          maxLength: 10
        nullable:
          type: boolean
        date_force_timezone:
          type: string
          nullable: true
          description: Force a timezone for the field overriding user profile settings.
          maxLength: 255
        date_show_tzinfo:
          type: boolean
          nullable: true
          description: Indicates if the time zone should be shown.
        array_formula_type:
          nullable: true
          oneOf:
          - "$ref": "#/components/schemas/ArrayFormulaTypeEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_format:
          nullable: true
          description: |-
            EU (20/02/2020), US (02/20/2020) or ISO (2020-02-20)

            * `EU` - European (D/M/Y)
            * `US` - US (M/D/Y)
            * `ISO` - ISO (Y-M-D)
          oneOf:
          - "$ref": "#/components/schemas/DateFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        formula:
          type: string
        number_suffix:
          type: string
          description: The suffix to use for the field.
          maxLength: 10
        number_decimal_places:
          nullable: true
          description: |-
            The amount of digits allowed after the point.

            * `0` - 1
            * `1` - 1.0
            * `2` - 1.00
            * `3` - 1.000
            * `4` - 1.0000
            * `5` - 1.00000
            * `6` - 1.000000
            * `7` - 1.0000000
            * `8` - 1.00000000
            * `9` - 1.000000000
            * `10` - 1.0000000000
          minimum: -2147483648
          maximum: 2147483647
          oneOf:
          - "$ref": "#/components/schemas/NumberDecimalPlacesEnum"
          - "$ref": "#/components/schemas/NullEnum"
        formula_type:
          "$ref": "#/components/schemas/FormulaTypeEnum"
        number_separator:
          description: |-
            The thousand and decimal separator to use for the field.

            * `` - No formatting
            * `SPACE_COMMA` - Space, comma
            * `SPACE_PERIOD` - Space, period
            * `COMMA_PERIOD` - Comma, period
            * `PERIOD_COMMA` - Period, comma
          oneOf:
          - "$ref": "#/components/schemas/NumberSeparatorEnum"
          - "$ref": "#/components/schemas/BlankEnum"
        duration_format:
          nullable: true
          description: |-
            The format of the duration.

            * `h:mm` - hours:minutes
            * `h:mm:ss` - hours:minutes:seconds
            * `h:mm:ss.s` - hours:minutes:seconds:deciseconds
            * `h:mm:ss.ss` - hours:minutes:seconds:centiseconds
            * `h:mm:ss.sss` - hours:minutes:seconds:milliseconds
            * `d h` - days:hours
            * `d h:mm` - days:hours:minutes
            * `d h:mm:ss` - days:hours:minutes:seconds
            * `d h mm` - days:hours:minutes:with_spaces
            * `d h mm ss` - days:hours:minutes:seconds:with_spaces
          oneOf:
          - "$ref": "#/components/schemas/DurationFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        error:
          type: string
          nullable: true
        date_time_format:
          nullable: true
          description: |-
            24 (14:30) or 12 (02:30 PM)

            * `24` - 24 hour
            * `12` - 12 hour
          oneOf:
          - "$ref": "#/components/schemas/DateTimeFormatEnum"
          - "$ref": "#/components/schemas/NullEnum"
        date_include_time:
          type: boolean
          nullable: true
          description: Indicates if the field also includes a time.
      required:
      - formula
      - nullable
    TypographyConfigBlock:
      type: object
      description: Style overrides for this element.
      properties:
        typography:
          "$ref": "#/components/schemas/heading_6_text_decoration"
    URLFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    URLFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    URLFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    URLFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    UUIDFieldCreateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - name
      - type
    UUIDFieldField:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - table_id
      - type
    UUIDFieldFieldSerializerWithRelatedFields:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Lowest first.
        type:
          type: string
          readOnly: true
          description: The type of the related field.
        primary:
          type: boolean
          description: Indicates if the field is a primary field. If `true` the field
            cannot be deleted and the value should represent the whole row.
        read_only:
          type: boolean
          readOnly: true
          description: Indicates whether the field is a read only field. If true,
            it's not possible to update the cell value.
        immutable_type:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field type is immutable. If true, then
            it won't be possible to change the field type via the API.
        immutable_properties:
          type: boolean
          readOnly: true
          nullable: true
          description: Indicates whether the field properties are immutable. If true,
            then it won't be possible to change the properties and the type via the
            API.
        description:
          type: string
          nullable: true
          description: Field description
        related_fields:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          readOnly: true
          description: A list of related fields which also changed.
      required:
      - id
      - immutable_properties
      - immutable_type
      - name
      - order
      - read_only
      - related_fields
      - table_id
      - type
    UUIDFieldUpdateField:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        type:
          "$ref": "#/components/schemas/Type6ebEnum"
        description:
          type: string
          nullable: true
          description: Field description
    UndoRedoAction:
      type: object
      properties:
        action_type:
          type: string
          nullable: true
          description: If an action was undone/redone/skipped due to an error this
            field will contain the type of the action that was undone/redone.
        action_scope:
          type: string
          nullable: true
          description: If an action was undone/redone/skipped due to an error this
            field will contain the scope of the action that was undone/redone.
    UndoRedoResponse:
      type: object
      properties:
        actions:
          type: array
          items:
            "$ref": "#/components/schemas/UndoRedoAction"
        result_code:
          type: string
          description: Indicates the result of the undo/redo operation. Will be 'SUCCESS'
            on success, 'NOTHING_TO_DO' when there is no action to undo/redo and 'SKIPPED_DUE_TO_ERROR'
            when the undo/redo failed due to a conflict or error and was skipped over.
      required:
      - actions
      - result_code
    UniqueRowValues:
      type: object
      properties:
        values:
          type: array
          items:
            type: string
      required:
      - values
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: "^[\\w.@+-]+$"
          maxLength: 150
      required:
      - username
    UserAdminCreate:
      type: object
      description: |-
        Serializes a request body for creating a new user. Do not use for returning user
        data as the password will be returned also.
      properties:
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Set
            this to false instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: 'Designates whether this user is an admin and has access to
            all workspaces and Baserow''s admin areas. '
        password:
          type: string
      required:
      - name
      - password
      - username
    UserAdminResponse:
      type: object
      description: Serializes the safe user attributes to expose for a response back
        to the user.
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          format: email
        name:
          type: string
          maxLength: 150
        workspaces:
          type: array
          items:
            "$ref": "#/components/schemas/UserAdminWorkspaces"
        last_login:
          type: string
          format: date-time
          nullable: true
        date_joined:
          type: string
          format: date-time
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Set
            this to false instead of deleting accounts.
        is_staff:
          type: boolean
          title: Staff status
          description: 'Designates whether this user is an admin and has access to
            all workspaces and Baserow''s admin areas. '
      required:
      - id
      - name
      - username
      - workspaces
    UserAdminWorkspaces:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
      required:
      - id
      - name
    UserFile:
      type: object
      properties:
        size:
          type: integer
          maximum: 2147483647
          minimum: 0
        mime_type:
          type: string
          maxLength: 127
        is_image:
          type: boolean
        image_width:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        image_height:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          type: string
          readOnly: true
        original_name:
          type: string
          maxLength: 255
      required:
      - name
      - original_name
      - size
      - thumbnails
      - uploaded_at
      - url
    UserFileUploadViaURLRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
      - url
    UserSourceUser:
      type: object
      description: A serializer used to serialize a UserSourceUser object.
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
        user_source_id:
          type: integer
        role:
          type: string
      required:
      - email
      - id
      - role
      - user_source_id
      - username
    UserWorkspaceInvitation:
      type: object
      description: |-
        This serializer is used for displaying the invitation to the user that doesn't
        have access to the workspace yet, so not for invitation management purposes.
      properties:
        id:
          type: integer
          readOnly: true
        invited_by:
          type: string
          readOnly: true
        workspace:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          description: The email address of the user that the invitation is meant
            for. Only a user with that email address can accept it.
          maxLength: 254
        message:
          type: string
          readOnly: true
          description: An optional message that the invitor can provide. This will
            be visible to the receiver of the invitation.
        created_on:
          type: string
          format: date-time
          readOnly: true
        email_exists:
          type: boolean
          readOnly: true
      required:
      - created_on
      - email
      - email_exists
      - id
      - invited_by
      - message
      - workspace
    User_SourceBasePublicUserSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowUserSourceBasePublicUserSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow: "#/components/schemas/LocalBaserowUserSourceBasePublicUserSource"
    User_SourceCreateUserSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowUserSourceCreateUserSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow: "#/components/schemas/LocalBaserowUserSourceCreateUserSource"
    User_SourceUserSource:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowUserSourceUserSource"
      discriminator:
        propertyName: type
        mapping:
          local_baserow: "#/components/schemas/LocalBaserowUserSourceUserSource"
    User_SourceUserSourceRoles:
      oneOf:
      - "$ref": "#/components/schemas/LocalBaserowUserSourceUserSourceRoles"
      discriminator:
        propertyName: type
        mapping:
          local_baserow: "#/components/schemas/LocalBaserowUserSourceUserSourceRoles"
    UsersPerUserSource:
      type: object
      description: The response of the list user source users endpoint.
      properties:
        users_per_user_sources:
          type: object
          additionalProperties:
            type: array
            items:
              "$ref": "#/components/schemas/UserSourceUser"
          description: An object keyed by the id of the user source and the value
            being the list of users for this user source.
      required:
      - users_per_user_sources
    ValidationTypeEnum:
      enum:
      - any
      - email
      - integer
      type: string
      description: |-
        * `any` - Any
        * `email` - Email
        * `integer` - Integer
    ValueProviderTypeEnum:
      enum:
      - single_select_color
      - conditional_color
      type: string
      description: "* `` - \n* `single_select_color` - single_select_color\n* `conditional_color`
        - conditional_color"
    VariantEnum:
      enum:
      - link
      - button
      type: string
      description: |-
        * `link` - Link
        * `button` - Button
    VerifyEmailAddress:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    View:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        table_id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          type: string
          readOnly: true
        table:
          "$ref": "#/components/schemas/TableWithoutDataSync"
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilter"
        filter_groups:
          type: array
          items:
            "$ref": "#/components/schemas/ViewFilterGroup"
        sortings:
          type: array
          items:
            "$ref": "#/components/schemas/ViewSort"
        group_bys:
          type: array
          items:
            "$ref": "#/components/schemas/ViewGroupBy"
        decorations:
          type: array
          items:
            "$ref": "#/components/schemas/ViewDecoration"
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_has_password:
          type: boolean
          description: |-
            Indicates whether the public view is password protected or not.

            :return: True if the public view is password protected, False otherwise.
          readOnly: true
        show_logo:
          type: boolean
        allow_public_export:
          type: boolean
          description: Indicates whether it's allowed to export a publicly shared
            view.
        ownership_type:
          type: string
        owned_by_id:
          type: integer
      required:
      - id
      - name
      - order
      - ownership_type
      - public_view_has_password
      - table
      - table_id
      - type
    ViewCreateView:
      oneOf:
      - "$ref": "#/components/schemas/GridViewCreateView"
      - "$ref": "#/components/schemas/GalleryViewCreateView"
      - "$ref": "#/components/schemas/FormViewCreateView"
      - "$ref": "#/components/schemas/KanbanViewCreateView"
      - "$ref": "#/components/schemas/CalendarViewCreateView"
      - "$ref": "#/components/schemas/TimelineViewCreateView"
      discriminator:
        propertyName: type
        mapping:
          grid: "#/components/schemas/GridViewCreateView"
          gallery: "#/components/schemas/GalleryViewCreateView"
          form: "#/components/schemas/FormViewCreateView"
          kanban: "#/components/schemas/KanbanViewCreateView"
          calendar: "#/components/schemas/CalendarViewCreateView"
          timeline: "#/components/schemas/TimelineViewCreateView"
    ViewDecoration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the decoration applies. Each view can have
            his own decorations.
        type:
          type: string
          description: The decorator type. This is then interpreted by the frontend
            to display the decoration.
          maxLength: 255
        value_provider_type:
          type: string
          description: The value provider type that gives the value to the decorator.
          maxLength: 255
        value_provider_conf:
          description: The configuration consumed by the value provider.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The position of the decorator has within the view, lowest first.
            If there is another decorator with the same order value then the decorator
            with the lowest id must be shown first.
      required:
      - id
    ViewFieldOptions:
      anyOf:
      - "$ref": "#/components/schemas/grid_view_field_options"
      - "$ref": "#/components/schemas/gallery_view_field_options"
      - "$ref": "#/components/schemas/form_view_field_options"
      - "$ref": "#/components/schemas/kanban_view_field_options"
      - "$ref": "#/components/schemas/calendar_view_field_options"
      - "$ref": "#/components/schemas/timeline_view_field_options"
    ViewFilter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the filter applies. Each view can have his
            own filters.
        field:
          type: integer
          description: The field of which the value must be compared to the filter
            value.
        type:
          type: string
          description: 'Indicates how the field''s value must be compared to the filter''s
            value. The filter is always in this order `field` `type` `value` (example:
            `field_1` `contains` `Test`).'
          maxLength: 48
        value:
          type: string
          description: The filter value that must be compared to the field's value.
        preload_values:
          type: object
          additionalProperties: {}
          readOnly: true
          description: Can contain unique preloaded values per filter. This is for
            example used by the `link_row_has` filter to communicate the display name
            if a value is provided.
        group:
          type: integer
          nullable: true
          description: The id of the filter group this filter belongs to. If this
            is null, the filter is not part of a filter group.
      required:
      - field
      - id
      - preload_values
      - type
      - view
    ViewFilterGroup:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR) in the group to be shown.

            * `AND` - And
            * `OR` - Or
        view:
          type: integer
          description: The view to which the filter group applies to. Each view can
            have its own filter groups.
        parent_group:
          type: integer
          nullable: true
      required:
      - id
      - view
    ViewGroupBy:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the group by applies. Each view can have
            his own group bys.
        field:
          type: integer
          description: The field that must be grouped by.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        width:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: The pixel width of the group by in the related view.
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    ViewSort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        view:
          type: integer
          description: The view to which the sort applies. Each view can have his
            own sortings.
        field:
          type: integer
          description: The field that must be sorted on.
        order:
          allOf:
          - "$ref": "#/components/schemas/OrderEnum"
          description: |-
            Indicates the sort order direction. ASC (Ascending) is from A to Z and DESC (Descending) is from Z to A.

            * `ASC` - Ascending
            * `DESC` - Descending
        type:
          type: string
          description: Indicates the sort type. Will automatically fall back to `default`
            if incompatible with field type.
          maxLength: 32
      required:
      - field
      - id
      - view
    ViewView:
      oneOf:
      - "$ref": "#/components/schemas/GridViewView"
      - "$ref": "#/components/schemas/GalleryViewView"
      - "$ref": "#/components/schemas/FormViewView"
      - "$ref": "#/components/schemas/KanbanViewView"
      - "$ref": "#/components/schemas/CalendarViewView"
      - "$ref": "#/components/schemas/TimelineViewView"
      discriminator:
        propertyName: type
        mapping:
          grid: "#/components/schemas/GridViewView"
          gallery: "#/components/schemas/GalleryViewView"
          form: "#/components/schemas/FormViewView"
          kanban: "#/components/schemas/KanbanViewView"
          calendar: "#/components/schemas/CalendarViewView"
          timeline: "#/components/schemas/TimelineViewView"
    Visibility789Enum:
      enum:
      - all
      - logged-in
      - not-logged
      type: string
      description: |-
        * `all` - All
        * `logged-in` - Logged In
        * `not-logged` - Not Logged
    VisibilityC5fEnum:
      enum:
      - all
      - logged-in
      type: string
      description: |-
        * `all` - All
        * `logged-in` - Logged In
    Workspace:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
        generative_ai_models_enabled:
          type: string
          readOnly: true
      required:
      - generative_ai_models_enabled
      - id
      - name
    WorkspaceAdminUsers:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
      required:
      - email
      - id
    WorkspaceInvitation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        workspace:
          type: integer
          description: The workspace that the user will get access to once the invitation
            is accepted.
        email:
          type: string
          format: email
          description: The email address of the user that the invitation is meant
            for. Only a user with that email address can accept it.
          maxLength: 254
        permissions:
          type: string
          description: The permissions that the user is going to get within the workspace
            after accepting the invitation.
          maxLength: 32
        message:
          type: string
          description: An optional message that the invitor can provide. This will
            be visible to the receiver of the invitation.
          maxLength: 250
        created_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_on
      - email
      - id
      - workspace
    WorkspaceUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
          description: User defined name.
        email:
          type: string
          readOnly: true
          description: User email.
        workspace:
          type: integer
          description: The workspace that the user has access to.
        permissions:
          type: string
          description: The permissions that the user has within the workspace.
          maxLength: 32
        created_on:
          type: string
          format: date-time
          readOnly: true
        user_id:
          type: integer
          description: The user that has access to the workspace.
          readOnly: true
        to_be_deleted:
          type: boolean
          description: True if user account is pending deletion.
      required:
      - created_on
      - email
      - id
      - name
      - to_be_deleted
      - user_id
      - workspace
    WorkspaceUserEnterpriseTeam:
      type: object
      description: A serializer for the `WorkspaceUserSerializer.teams` field.
      properties:
        id:
          type: integer
          readOnly: true
          description: The unique identifier for this team.
        name:
          type: string
          readOnly: true
          description: The team name that this workspace user belongs to.
      required:
      - id
      - name
    WorkspaceUserWorkspace:
      type: object
      description: |-
        This serializers includes relevant fields of the Workspace model, but also
        some WorkspaceUser specific fields related to the workspace user relation.

        Additionally, the list of users are included for each workspace.
      properties:
        id:
          type: integer
          readOnly: true
          description: Workspace id.
        name:
          type: string
          readOnly: true
          description: Workspace name.
        users:
          type: array
          items:
            "$ref": "#/components/schemas/WorkspaceUser"
          readOnly: true
          description: List of all workspace users.
        order:
          type: integer
          readOnly: true
          description: The requesting user's order within the workspace users.
        permissions:
          type: string
          readOnly: true
          description: The requesting user's permissions for the workspace.
        unread_notifications_count:
          type: integer
          readOnly: true
          description: The number of unread notifications for the requesting user.
        generative_ai_models_enabled:
          type: string
          readOnly: true
          description: Generative AI models available in this workspace.
      required:
      - generative_ai_models_enabled
      - id
      - name
      - order
      - permissions
      - unread_notifications_count
      - users
    WorkspacesAdminResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 165
        users:
          type: array
          items:
            "$ref": "#/components/schemas/WorkspaceAdminUsers"
        application_count:
          type: integer
        row_count:
          type: integer
          readOnly: true
        storage_usage:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
        seats_taken:
          type: integer
        free_users:
          type: integer
          readOnly: true
        created_on:
          type: string
          format: date-time
          readOnly: true
      required:
      - application_count
      - created_on
      - free_users
      - id
      - name
      - row_count
      - seats_taken
      - users
    button_active_border_color:
      type: object
      properties:
        button_font_family:
          type: string
          maxLength: 250
        button_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        button_font_weight:
          "$ref": "#/components/schemas/ButtonFontWeightEnum"
        button_alignment:
          "$ref": "#/components/schemas/ButtonAlignmentEnum"
        button_text_alignment:
          "$ref": "#/components/schemas/ButtonTextAlignmentEnum"
        button_width:
          "$ref": "#/components/schemas/ButtonWidthEnum"
        button_background_color:
          type: string
          description: The background color of buttons
          maxLength: 255
        button_text_color:
          type: string
          description: The text color of buttons
          maxLength: 255
        button_border_color:
          type: string
          description: The border color of buttons
          maxLength: 255
        button_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button border size
        button_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button border radius
        button_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button vertical padding
        button_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Button horizontal padding
        button_hover_background_color:
          type: string
          description: The background color of buttons when hovered
          maxLength: 255
        button_hover_text_color:
          type: string
          description: The text color of buttons when hovered
          maxLength: 255
        button_hover_border_color:
          type: string
          description: The border color of buttons when hovered
          maxLength: 255
        button_active_background_color:
          type: string
          description: The background color of buttons when active
          maxLength: 255
        button_active_text_color:
          type: string
          description: The text color of buttons when active
          maxLength: 255
        button_active_border_color:
          type: string
          description: The border color of buttons when active
          maxLength: 255
    calendar_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/CalendarViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
      required:
      - field_options
    calendar_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous
            password from the view and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to the
            table.
          maxLength: 255
        date_field:
          type: integer
          nullable: true
        ical_feed_url:
          type: string
          readOnly: true
          description: 'Read-only field with ICal feed endpoint. Note: this url will
            not be active if ical_public value is set to False.'
        ical_public:
          type: boolean
          nullable: true
          description: A flag to show if ical feed is exposed. Set this field to True
            when modifying this resource to enable ICal feed url.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - ical_feed_url
      - slug
    form_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/FormViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
      required:
      - field_options
    form_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous
            password from the view and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to the
            table.
          maxLength: 255
        title:
          type: string
          description: The title that is displayed at the beginning of the form.
        description:
          type: string
          description: The description that is displayed at the beginning of the form.
        mode:
          allOf:
          - "$ref": "#/components/schemas/Mode51eEnum"
          description: |-
            Configurable mode of the form.

            * `form` - form
            * `survey` - survey
        cover_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The cover image that must be displayed at the top of the form.
        logo_image:
          allOf:
          - "$ref": "#/components/schemas/UserFile"
          nullable: true
          description: The logo image that must be displayed at the top of the form.
        submit_text:
          type: string
          description: The text displayed on the submit button.
        submit_action:
          allOf:
          - "$ref": "#/components/schemas/SubmitActionEnum"
          description: |-
            The action that must be performed after the visitor has filled out the form.

            * `MESSAGE` - Message
            * `REDIRECT` - Redirect
        submit_action_message:
          type: string
          description: If the `submit_action` is MESSAGE, then this message will be
            shown to the visitor after submitting the form.
        submit_action_redirect_url:
          type: string
          format: uri
          description: If the `submit_action` is REDIRECT,then the visitors will be
            redirected to the this URL after submitting the form.
          maxLength: 2000
        receive_notification_on_submit:
          type: boolean
          readOnly: true
          description: A boolean indicating if the current user should be notified
            when the form is submitted.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - receive_notification_on_submit
      - slug
    gallery_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GalleryViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
      required:
      - field_options
    gallery_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous
            password from the view and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to the
            table.
          maxLength: 255
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown
            as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    grid_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/GridViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
      required:
      - field_options
    grid_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous
            password from the view and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to the
            table.
          maxLength: 255
        row_identifier_type:
          "$ref": "#/components/schemas/RowIdentifierTypeEnum"
        row_height_size:
          "$ref": "#/components/schemas/RowHeightSizeEnum"
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    heading_6_text_decoration:
      type: object
      properties:
        heading_1_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_2_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_3_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_4_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_5_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        heading_6_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Text decoration: [underline, stroke, uppercase, italic]'
        body_font_family:
          type: string
          maxLength: 250
        body_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        body_font_weight:
          "$ref": "#/components/schemas/BodyFontWeightEnum"
        body_text_color:
          type: string
          maxLength: 255
        body_text_alignment:
          "$ref": "#/components/schemas/BodyTextAlignmentEnum"
        heading_1_font_family:
          type: string
          maxLength: 250
        heading_1_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_1_font_weight:
          "$ref": "#/components/schemas/Heading1FontWeightEnum"
        heading_1_text_color:
          type: string
          maxLength: 255
        heading_1_text_alignment:
          "$ref": "#/components/schemas/Heading1TextAlignmentEnum"
        heading_2_font_family:
          type: string
          maxLength: 250
        heading_2_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_2_font_weight:
          "$ref": "#/components/schemas/Heading2FontWeightEnum"
        heading_2_text_color:
          type: string
          maxLength: 255
        heading_2_text_alignment:
          "$ref": "#/components/schemas/Heading2TextAlignmentEnum"
        heading_3_font_family:
          type: string
          maxLength: 250
        heading_3_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_3_font_weight:
          "$ref": "#/components/schemas/Heading3FontWeightEnum"
        heading_3_text_color:
          type: string
          maxLength: 255
        heading_3_text_alignment:
          "$ref": "#/components/schemas/Heading3TextAlignmentEnum"
        heading_4_font_family:
          type: string
          maxLength: 250
        heading_4_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_4_font_weight:
          "$ref": "#/components/schemas/Heading4FontWeightEnum"
        heading_4_text_color:
          type: string
          maxLength: 255
        heading_4_text_alignment:
          "$ref": "#/components/schemas/Heading4TextAlignmentEnum"
        heading_5_font_family:
          type: string
          maxLength: 250
        heading_5_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_5_font_weight:
          "$ref": "#/components/schemas/Heading5FontWeightEnum"
        heading_5_text_color:
          type: string
          maxLength: 255
        heading_5_text_alignment:
          "$ref": "#/components/schemas/Heading5TextAlignmentEnum"
        heading_6_font_family:
          type: string
          maxLength: 250
        heading_6_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        heading_6_font_weight:
          "$ref": "#/components/schemas/Heading6FontWeightEnum"
        heading_6_text_color:
          type: string
          maxLength: 255
        heading_6_text_alignment:
          "$ref": "#/components/schemas/Heading6TextAlignmentEnum"
    image_constraint:
      type: object
      properties:
        image_max_height:
          type: integer
          description: The image max height
        image_alignment:
          "$ref": "#/components/schemas/ImageAlignmentEnum"
        image_max_width:
          type: integer
          maximum: 100
          minimum: 0
          description: The max-width for this image element.
        image_border_radius:
          type: integer
          maximum: 100
          minimum: 0
          description: The border radius for this image element.
        image_constraint:
          allOf:
          - "$ref": "#/components/schemas/ImageConstraintEnum"
          description: |-
            The image constraint to apply to this image

            * `cover` - Cover
            * `contain` - Contain
            * `full-width` - Full Width
    input_horizontal_padding:
      type: object
      properties:
        label_font_family:
          type: string
          description: The font family of the label
          maxLength: 250
        label_text_color:
          type: string
          description: The text color of the label
          maxLength: 255
        label_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The font size of the label
        label_font_weight:
          "$ref": "#/components/schemas/LabelFontWeightEnum"
        input_font_family:
          type: string
          description: The font family of the input
          maxLength: 250
        input_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        input_font_weight:
          "$ref": "#/components/schemas/InputFontWeightEnum"
        input_text_color:
          type: string
          description: The text color of the input
          maxLength: 255
        input_background_color:
          type: string
          description: The background color of the input
          maxLength: 255
        input_border_color:
          type: string
          description: The color of the input border
          maxLength: 255
        input_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input border size
        input_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input border radius
        input_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input vertical padding
        input_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Input horizontal padding
    kanban_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/KanbanViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
      required:
      - field_options
    kanban_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous
            password from the view and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to the
            table.
          maxLength: 255
        single_select_field:
          type: integer
          nullable: true
        card_cover_image_field:
          type: integer
          nullable: true
          description: References a file field of which the first image must be shown
            as card cover image.
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
    link_active_text_decoration:
      type: object
      properties:
        link_default_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Default text decoration: [underline, stroke, uppercase, italic]'
        link_hover_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Hover text decoration: [underline, stroke, uppercase, italic]'
        link_active_text_decoration:
          type: array
          items:
            type: boolean
          description: 'Active text decoration: [underline, stroke, uppercase, italic]'
        link_font_family:
          type: string
          maxLength: 250
        link_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
        link_font_weight:
          "$ref": "#/components/schemas/LinkFontWeightEnum"
        link_text_alignment:
          "$ref": "#/components/schemas/LinkTextAlignmentEnum"
        link_text_color:
          type: string
          description: The text color of links
          maxLength: 255
        link_hover_text_color:
          type: string
          description: The hover color of links when hovered
          maxLength: 255
        link_active_text_color:
          type: string
          description: The hover color of links when active
          maxLength: 255
    public_Builder_Workflow_Action_TypeBuilderWorkflowAction:
      oneOf:
      - "$ref": "#/components/schemas/PublicNone"
      - "$ref": "#/components/schemas/PublicNone"
      - "$ref": "#/components/schemas/PublicNone"
      - "$ref": "#/components/schemas/PublicNone"
      - "$ref": "#/components/schemas/PublicNone"
      - "$ref": "#/components/schemas/PublicNone"
      - "$ref": "#/components/schemas/PublicNone"
      discriminator:
        propertyName: type
        mapping:
          public_notification: "#/components/schemas/PublicNone"
          public_open_page: "#/components/schemas/PublicNone"
          public_create_row: "#/components/schemas/PublicNone"
          public_update_row: "#/components/schemas/PublicNone"
          public_delete_row: "#/components/schemas/PublicNone"
          public_logout: "#/components/schemas/PublicNone"
          public_refresh_data_source: "#/components/schemas/PublicNone"
    table_horizontal_separator_size:
      type: object
      properties:
        table_border_color:
          type: string
          description: The color of the table border
          maxLength: 255
        table_border_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table border size
        table_border_radius:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table border radius
        table_header_background_color:
          type: string
          description: The background color of the table header cells
          maxLength: 255
        table_header_text_color:
          type: string
          description: The text color of the table header cells
          maxLength: 255
        table_header_font_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: The font size of the header cells
        table_header_font_weight:
          "$ref": "#/components/schemas/TableHeaderFontWeightEnum"
        table_header_font_family:
          type: string
          description: The font family of the table header cells
          maxLength: 250
        table_header_text_alignment:
          "$ref": "#/components/schemas/TableHeaderTextAlignmentEnum"
        table_cell_background_color:
          type: string
          description: The background color of the table cells
          maxLength: 255
        table_cell_alternate_background_color:
          type: string
          description: The alternate background color of the table cells
          maxLength: 255
        table_cell_alignment:
          "$ref": "#/components/schemas/TableCellAlignmentEnum"
        table_cell_vertical_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table cell vertical padding
        table_cell_horizontal_padding:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table cell horizontal padding
        table_vertical_separator_color:
          type: string
          description: The color of the table vertical separator
          maxLength: 255
        table_vertical_separator_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table vertical separator size
        table_horizontal_separator_color:
          type: string
          description: The color of the table horizontal separator
          maxLength: 255
        table_horizontal_separator_size:
          type: integer
          maximum: 32767
          minimum: -32768
          description: Table horizontal separator size
    timeline_view_field_options:
      type: object
      properties:
        field_options:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/TimelineViewFieldOptions"
          description: An object containing the field id as key and the properties
            related to view as value.
      required:
      - field_options
    timeline_view_update:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
        filter_type:
          allOf:
          - "$ref": "#/components/schemas/ConditionTypeEnum"
          description: |-
            Indicates whether all the rows should apply to all filters (AND) or to any filter (OR).

            * `AND` - And
            * `OR` - Or
        filters_disabled:
          type: boolean
          description: Allows users to see results unfiltered while still keeping
            the filters saved for the view.
        public_view_password:
          type: string
          description: The new password or an empty string to remove any previous
            password from the view and make it publicly accessible again.
          maxLength: 256
          minLength: 8
        ownership_type:
          type: string
          description: Indicates how the access to the view is determined. By default,
            views are collaborative and shared for all users that have access to the
            table.
          maxLength: 255
        start_date_field:
          type: integer
          nullable: true
        end_date_field:
          type: integer
          nullable: true
        timescale:
          allOf:
          - "$ref": "#/components/schemas/TimescaleEnum"
          description: |-
            The timescale that the timeline should be displayed in.

            * `day` - Day
            * `week` - Week
            * `month` - Month
            * `year` - Year
        public:
          type: boolean
          description: Indicates whether the view is publicly accessible to visitors.
        slug:
          type: string
          readOnly: true
          description: The unique slug that can be used to construct a public URL.
      required:
      - slug
  securitySchemes:
    Database token:
      type: http
      scheme: bearer
      bearerFormat: Token your_token
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
    UserSource JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
tags:
- name: Settings
- name: User
- name: User files
- name: Workspaces
- name: Workspace invitations
- name: Templates
- name: Trash
- name: Applications
- name: Snapshots
- name: Jobs
- name: Integrations
- name: User sources
- name: Database tables
- name: Database table fields
- name: Database table views
- name: Database table view filters
- name: Database table view sortings
- name: Database table view decorations
- name: Database table view groupings
- name: Database table view export
- name: Database table grid view
- name: Database table gallery view
- name: Database table form view
- name: Database table kanban view
- name: Database table calendar view
- name: Database table rows
- name: Database table export
- name: Database table webhooks
- name: Database tokens
- name: Builder pages
- name: Builder elements
- name: Builder domains
- name: Builder public
- name: Builder data sources
- name: Builder workflow actions
- name: Builder theme
- name: Admin
