openapi: 3.0.3
info:
  title: Baserow API spec
  version: 1.32.5
  description: 'For more information about our REST API, please visit [this page](https://baserow.io/docs/apis%2Frest-api).


    For more information about our deprecation policy, please visit [this page](https://baserow.io/docs/apis%2Fdeprecations).'
  contact:
    url: https://baserow.io/contact
  license:
    name: MIT
    url: https://gitlab.com/baserow/baserow/-/blob/master/LICENSE
paths:
  /api/settings/:
    get:
      operationId: get_settings
      description: Responds with all the admin configured settings.
      tags:
      - Settings
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
  /api/settings/instance-id/:
    get:
      operationId: get_instance_id
      description: Responds with the self hosted instance id. Only a user with staff permissions can request
        it.
      tags:
      - Settings
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstanceId'
          description: ''
  /api/settings/update/:
    patch:
      operationId: update_settings
      description: Updates the admin configured settings if the user has admin permissions.
      tags:
      - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSettings'
      security:
      - UserSource JWT: []
      - JWT: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: ''
components:
  schemas:
    Settings:
      type: object
      properties:
        allow_new_signups:
          type: boolean
          description: Indicates whether new users can create a new account when signing up.
        allow_signups_via_workspace_invitations:
          type: boolean
          description: Indicates whether invited users can create an account when signing up, even if
            allow_new_signups is disabled.
        allow_reset_password:
          type: boolean
          description: Indicates whether users can request a password reset link.
        allow_global_workspace_creation:
          type: boolean
          description: Indicates whether all users can create workspaces, or just staff.
        account_deletion_grace_delay:
          type: integer
          maximum: 32767
          minimum: 0
          description: Number of days after the last login for an account pending deletion to be deleted
        show_admin_signup_page:
          type: boolean
          description: Indicates that there are no admin users in the database yet, so in the frontend
            the signup form will be shown instead of the login page.
        track_workspace_usage:
          type: boolean
          description: Runs a job once per day which calculates per workspace row counts and file storage
            usage, displayed on the admin workspace page.
        show_baserow_help_request:
          type: boolean
          description: Indicates whether the `We need your help!` message will be shown on the dashboard
        co_branding_logo:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: Co-branding logo that's placed next to the Baserow logo (176x29).
        email_verification:
          nullable: true
          description: 'Controls whether user email addresses have to be verified.


            * `no_verification` - no_verification

            * `recommended` - recommended

            * `enforced` - enforced'
          oneOf:
          - $ref: '#/components/schemas/EmailVerificationEnum'
          - $ref: '#/components/schemas/NullEnum'
        verify_import_signature:
          type: boolean
          description: Indicates whether the signature of imported files should be verified.
    InstanceId:
      type: object
      properties:
        instance_id:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - instance_id
    PatchedSettings:
      type: object
      properties:
        allow_new_signups:
          type: boolean
          description: Indicates whether new users can create a new account when signing up.
        allow_signups_via_workspace_invitations:
          type: boolean
          description: Indicates whether invited users can create an account when signing up, even if
            allow_new_signups is disabled.
        allow_reset_password:
          type: boolean
          description: Indicates whether users can request a password reset link.
        allow_global_workspace_creation:
          type: boolean
          description: Indicates whether all users can create workspaces, or just staff.
        account_deletion_grace_delay:
          type: integer
          maximum: 32767
          minimum: 0
          description: Number of days after the last login for an account pending deletion to be deleted
        show_admin_signup_page:
          type: boolean
          description: Indicates that there are no admin users in the database yet, so in the frontend
            the signup form will be shown instead of the login page.
        track_workspace_usage:
          type: boolean
          description: Runs a job once per day which calculates per workspace row counts and file storage
            usage, displayed on the admin workspace page.
        show_baserow_help_request:
          type: boolean
          description: Indicates whether the `We need your help!` message will be shown on the dashboard
        co_branding_logo:
          allOf:
          - $ref: '#/components/schemas/UserFile'
          nullable: true
          description: Co-branding logo that's placed next to the Baserow logo (176x29).
        email_verification:
          nullable: true
          description: 'Controls whether user email addresses have to be verified.


            * `no_verification` - no_verification

            * `recommended` - recommended

            * `enforced` - enforced'
          oneOf:
          - $ref: '#/components/schemas/EmailVerificationEnum'
          - $ref: '#/components/schemas/NullEnum'
        verify_import_signature:
          type: boolean
          description: Indicates whether the signature of imported files should be verified.
    NullEnum:
      enum:
      - null
    UserFile:
      type: object
      properties:
        size:
          type: integer
          maximum: 2147483647
          minimum: 0
        mime_type:
          type: string
          maxLength: 127
        is_image:
          type: boolean
        image_width:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        image_height:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        thumbnails:
          type: object
          additionalProperties: {}
          readOnly: true
        name:
          type: string
          readOnly: true
        original_name:
          type: string
          maxLength: 255
      required:
      - name
      - original_name
      - size
      - thumbnails
      - uploaded_at
      - url
    EmailVerificationEnum:
      enum:
      - no_verification
      - recommended
      - enforced
      type: string
      description: '* `no_verification` - no_verification

        * `recommended` - recommended

        * `enforced` - enforced'
  securitySchemes:
    UserSource JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT your_token
tags:
- name: Settings
